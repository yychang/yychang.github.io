{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is the place I keep my notes, in the hope that they will save time for the future me and some random stranger on the Internet.</p> <p>Map of Contents</p>"},{"location":"202206041201_moc_root/","title":"Map Of Contents","text":"<ul> <li>Quick References<ul> <li>Python Quick Reference Notes</li> </ul> </li> <li>Digital Signal Processing</li> <li>Audio Engineering</li> <li>Troubleshooting</li> <li>Math</li> <li>Programming Language</li> <li>Uncategorized</li> </ul>"},{"location":"MOC/202205301411_moc_python_quick_ref/","title":"Python Quick Reference Notes","text":"<ul> <li>Python Quick Reference</li> <li>Python Regular Expression</li> <li>Scipy Quick Reference</li> <li>Numpy Quick Reference<ul> <li>Numpy Array Broadcasting</li> </ul> </li> <li>Pandas Quick Reference</li> <li>Matplotlib Quick Reference</li> </ul>"},{"location":"MOC/202207182111_moc_dsp/","title":"Digital Signal Processing","text":"<ul> <li>Kalman Filter</li> <li>Frequency-domain Adaptive Filtering</li> <li>Wiener Filter</li> <li>Noncircularity of Complex Random Variable</li> <li>Maximum Likelihood Estimation </li> <li>IPD</li> <li>Overlap-Save Method</li> <li>Overlap-Add Method</li> <li>Resampling</li> <li>Convolution</li> <li>Circular Convolution</li> <li>Cross Correlation</li> <li>Derivative of Arg(z(t))</li> <li>Signal Energy and Power</li> <li>Levenshtein Distance</li> <li>Lagrange multiplier</li> <li>Noise Spectral Density</li> <li>exponential smoothing</li> <li>COLA Property</li> <li>Eigenvalues and Eigenvectors</li> <li>Inner product for complex vector spaces</li> <li>GCC-PHAT</li> </ul>"},{"location":"MOC/202207182345_moc_audio_eng/","title":"Audio Engineering","text":"<ul> <li>Acceptable Voice Latency</li> <li>Calculating Mic Output Level</li> <li>IPD</li> <li>Mic Sensitivity</li> <li>Reverberation</li> <li>Steering Vector</li> <li>Traveling Plane Wave</li> <li>Limiting Frequencies of a Microphone Array</li> <li>202205291220_Sound_Pressure_Level</li> <li>202205151639_wave_format</li> <li>202205291217_Field_Regions</li> </ul>"},{"location":"MOC/202207222056_moc_troubleshooting/","title":"Troubleshooting","text":""},{"location":"MOC/202207222056_moc_troubleshooting/#windows","title":"Windows","text":"<ul> <li>Accessing Windows Recovery Environment</li> <li>Disable Bitlocker</li> <li>Windows Keyboard Shortcuts</li> <li>Windows Keyboard Input Not Detected</li> <li>201606150000_svchost_high_cpu</li> <li>201711171122_Fix_Open_File_Security_Warning</li> <li>201603230000_windows_displayproperties_Identify_numbers_are_incorrect</li> <li>Debugging \"The ordinal N could not be located in the dynamic link library\" Error</li> <li>202003030000_window_wifi_certificate</li> <li>202107210000_cmd_shows_cannot_find_the_path_specified</li> <li>201605260000_Making Perl Script to Take Arguments on Windows</li> <li>201707130000_Command-line prompt format</li> <li>201906280000_windows_10_puts_dummy_python</li> </ul>"},{"location":"MOC/202207222056_moc_troubleshooting/#software","title":"Software","text":"<ul> <li> 7-zip Mistakenly Zipping The Entire UserProfile folder</li> <li>VS Code Not Recognizing Git Repo</li> <li>VS Code Font Alignment for Chinese</li> <li>Conda Update Failed With an Error Related to LoadLibrary</li> <li>Conda Update Failed with an Error Related to SSL Module Not Available</li> <li>Anaconda Python Numpy Failed to Import C-extensions</li> <li>git sparse checkout issue on git 1.7.1</li> <li>Use Python to run ConEmu to start a new CMD window</li> <li>Running Windows Command  in Perl and in Windows CMD yield different results</li> <li>202205221654_git_shows_chinese_characters</li> <li>202205221737_gitk_show_chinese_characters_diff</li> <li>Vim is very slow when switching to the buffer reading network file</li> <li>202201270000_vtune_quick_notes</li> <li>201607120000_hex_value_between_characters</li> <li>201806270000_Make vim-plugin Tagbar to support Powershell</li> <li>202206202213_python_on_windows_not_finding_installed_package</li> <li>201405220000_bin bash command not found</li> <li>202205092000_set_github_token</li> <li>201605090000_Showing The List of Included Files When Compiling</li> <li>202201270000__ONNXRuntimeError_ _ 10 _ INVALID_GRAPH</li> <li>202204281942_Customize Git Bash Prompt</li> </ul>"},{"location":"MOC/202207222056_moc_troubleshooting/#misc","title":"Misc","text":"<ul> <li>201904110000_Inserting SVG in the wikidot page</li> <li>202204022204_port notes from Evernote to Obsidian</li> <li>202212052029_mkdocs_wider_content_body_width</li> <li>202201240000_Python subprocess returns error code 3221226505</li> <li>201608180000_Browse the symbols in the gcc library</li> </ul>"},{"location":"MOC/202207311054_moc_quick_ref/","title":"Quick Reference","text":""},{"location":"MOC/202207311054_moc_quick_ref/#programming-language","title":"Programming Language","text":"<ul> <li>C++ unique_ptr Quick Reference</li> <li>Linux Command Quick Reference</li> <li>Matlab Quick Reference</li> <li>Perl Quick Reference</li> <li>PowerShell Quick Reference</li> <li>MOC: Python Quick Reference<ul> <li>Python Quick Reference</li> <li>Conda Quick Reference</li> <li>Matplotlib Quick Reference</li> <li>Numpy Quick Reference</li> <li>Pandas Quick Reference</li> <li>Scipy Quick Reference</li> </ul> </li> <li>Windows Batch Script Quick Reference</li> <li>Windows Command Line Quick Reference</li> <li>JSON Quick Reference</li> </ul>"},{"location":"MOC/202207311054_moc_quick_ref/#software-tools","title":"Software Tools","text":"<ul> <li>Git Quick Reference</li> <li>GoogleTest Quick Reference</li> <li>Obsidian Notes Quick Reference</li> <li>MkDocs Quick Reference</li> <li>SoX Quick Reference</li> <li>Vim Quick Reference<ul> <li>Vim Regular Expression</li> </ul> </li> <li>Vim Script Quick Reference</li> <li>WinDbg Quick Reference</li> <li>CMake Quick Reference</li> <li>Foam for VSCode Quick Reference</li> </ul>"},{"location":"MOC/202207311054_moc_quick_ref/#misc","title":"Misc","text":"<ul> <li>Latex Quick Reference</li> <li>Markdown Quick Reference</li> <li>202212101556_mermaid_quick_ref</li> <li>202305162053_mermaid_flowchart_quick_ref</li> <li>202205291423_Windows_Programming_Quick_Reference</li> </ul>"},{"location":"MOC/202305210816_moc_math/","title":"Math","text":""},{"location":"MOC/202305210816_moc_math/#math-notes","title":"Math Notes","text":"<ul> <li>Rounding Method</li> <li>Calculating the Difference between Two Angles</li> <li>Norm</li> <li>Jacobi Method and Gauss-Seidel Method</li> <li>Math signs/symbols notations</li> <li>Coefficient of Determination</li> </ul>"},{"location":"MOC/202305210835_moc_programming_language/","title":"Programming Language Notes","text":""},{"location":"MOC/202305210835_moc_programming_language/#c","title":"C++","text":"<ul> <li>C++ Inheritance</li> <li>Handle to Object Operator (^)</li> <li>Tail Call Optimization</li> <li>201504130000_Calling Conventions</li> <li>Lambda Expression Quick Reference</li> </ul>"},{"location":"MOC/202305210835_moc_programming_language/#c_1","title":"C#","text":"<ul> <li>Lambda Expression</li> <li>Extension Classes</li> <li>Keyword \"using\"</li> <li>Value Type vs. Reference Type</li> </ul>"},{"location":"MOC/202305210835_moc_programming_language/#python","title":"Python","text":"<ul> <li>Python Names and Objects</li> </ul>"},{"location":"MOC/202305210835_moc_programming_language/#perl","title":"Perl","text":"<ul> <li>201407090000_perl_chdir</li> </ul>"},{"location":"MOC/202305210846_moc_uncategorized/","title":"Uncategorized Notes","text":"<ul> <li>202205291424_Windows_Registry_Keys</li> <li>201503060000_Ctags Command</li> <li>201502030000_ConEmu</li> <li>202303132237_python_powerpoint_slides</li> <li>202205291420_DOSKEY_alias</li> <li>201609011500_Exuberant-ctags v.s. Universal Ctags</li> <li>202302102151_uwp_app_pkg</li> <li>201402150000_Exit code</li> <li>202307202225_windbg_sympath</li> <li>202205140940_two_vscode_same_project</li> <li>202308152111_windows_show_n_lines_before_after_match</li> <li>202310010756_mkdocs_ignore_folder</li> </ul>"},{"location":"Notes/201402150000_Exit%20code/","title":"Exit code","text":"<p>Bash exit code</p> <ul> <li>http://www.faqs.org/docs/abs/HTML/exitcodes.html#EXITCODESREF</li> <li>http://www.freebsd.org/cgi/man.cgi?query=sysexits&amp;sektion=3</li> </ul> <p>die v.s. exit?</p> <ul> <li>http://stackoverflow.com/questions/3601106/how-to-terminate-a-program-in-perl-exit-or-die</li> </ul> <p>Unix signals (seems to be referred to as \"Fatal error signal\" in http://www.faqs.org/docs/abs/HTML/exitcodes.html#EXITCODESREF)</p> <ul> <li>http://unixhelp.ed.ac.uk/CGI/man-cgi?signal+7</li> </ul> <p>Unix error code</p> <ul> <li>http://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html</li> </ul> <p>system() v.s. backticks (``) in perl</p>"},{"location":"Notes/201405220000_bin%20bash%20command%20not%20found/","title":"bash: ?#!/bin/bash : command not found","text":""},{"location":"Notes/201405220000_bin%20bash%20command%20not%20found/#context","title":"Context","text":"<p>When programming a bash script and/or\u00a0.bashrc, the first line of the script is written as\u00a0 <pre><code>#!/bin/bash\n</code></pre></p> <p>But when executing the script, it prints the following error message: <pre><code>bash: ?#!/bin/bash : command not found\n</code></pre></p>"},{"location":"Notes/201405220000_bin%20bash%20command%20not%20found/#root-cause","title":"Root Cause","text":"<p>The script is probably stored as a UTF-8 file and there is a BOM added to the header. The BOM may read as '<code>EF BB BF</code>' in HEX mode.\u00a0</p> <p>See\u00a0</p> <ul> <li>http://stackoverflow.com/questions/4676053/cygwin-command-not-found-bad-characters-found-in-bashrc-357-273-277</li> <li>http://developer.nokia.com/Community/Discussion/showthread.php/4193-The-header-of-utf-8-file-Why-there-is-extra-char-quot-quot-when-saving-a-file-as</li> </ul>"},{"location":"Notes/201405220000_bin%20bash%20command%20not%20found/#solution","title":"Solution","text":"<p>Remove the header using some advanced text editor features. Or create a new file and copy the content of the old script into the new file, hoping that the newly created file does not contain the BOM.</p> <p>In Vim, run the following commands to remove BOM: <pre><code>:set nobomb\n</code></pre></p>"},{"location":"Notes/201407071446_git%20sparse%20checkout%20issue%20on%20git%201.7.1/","title":"git sparse checkout issue on git 1.7.1","text":"<p>There seems an bug in git 1.7.1 that sparse-checkout does not work for the rule</p> <pre><code>/*\n</code></pre> <p>(source)</p> <p>The bug seems to be resolved in 1.7.4 or newer.</p> <p>To workaround the issue in 1.7.1, replacing</p> <pre><code>/*\n</code></pre> <p>by</p> <pre><code>*\n</code></pre> <p>or</p> <pre><code>/\n</code></pre> <p>seems to resolve the problem. However, neither of the alternative works in the latest git:</p> <ul> <li>When using <code>*</code>: All the following <code>!unwanted</code> rules are ignored</li> <li>When using <code>/</code>: sparse-checkout does not work at all. All files remain unchanged</li> </ul>"},{"location":"Notes/201407090000_perl_chdir/","title":"Perl built-in chdir() and Cwd:chdir()","text":"<p>built-in chdir() (as of Perl 5.10.1)</p> <ul> <li>changes the working directory of the perl script,</li> <li>does not change the working directory of the shell (environment variable PWD).</li> </ul> <p>Cwd:chdir()</p> <ul> <li>changes the working directory of the perl script,</li> <li>changes the working directory of the shell (environment variable PWD)</li> </ul>"},{"location":"Notes/201502030000_ConEmu/","title":"ConEmu","text":""},{"location":"Notes/201502030000_ConEmu/#basic-usage","title":"Basic usage","text":"<pre><code>ConEmu -single -cmd COMMAND -new_console:P:PALETTE -new_console:t:TABNAME\n</code></pre> <ul> <li><code>-cmd COMMAND</code>: execute <code>COMMAND</code> with ConEmu. <code>COMMAND</code> here can be a \"ConEmu task\" such as <code>\"{GitBash}\"</code></li> <li><code>-new_console:P:PALETTE</code>: specify the <code>PALETTE</code>, such as <code>&lt;xterm&gt;</code></li> <li><code>-new_console:t:TABNAME</code>: specify the tab name showing on ConEmu</li> <li><code>-new_console:a</code>: run as admin</li> </ul> <p>Example:</p> <pre><code>ConEmu64.exe -single -cmd C:\\git\\git-bash.bat -new_console:P:&lt;xterm&gt; -new_console:t:GIT\nConEmu64.exe -single -cmd {GitBash} -new_console:P:&lt;xterm&gt; -new_console:t:GIT\n</code></pre> <p>For some reason the argument <code>-new_console</code> will not be processed if ConEmu64 window does not already exist. In order for the <code>-new_console</code> to work for the first tab, it is recommended to create a \"ConEmu task\" and add <code>-new_console</code> as part of the task.</p>"},{"location":"Notes/201502030000_ConEmu/#creating-a-conemu-task-for-git-for-windows","title":"Creating a ConEmu task for \"Git for Windows\"","text":"<p>Creating a ConEmu task <code>{GitBash}</code> for \"Git for Windows\" 2.0</p> <ol> <li> <p>Calling a GUI application mintty.exe to invoke bash </p> <pre><code>set MSYSTEM=MINGW64 &amp; C:\\git\\usr\\bin\\mintty -o FontHeight=14 /usr/bin/bash --login -i -new_console:P:&lt;xterm&gt; -new_console:t:GIT\n</code></pre> </li> <li> <p>Calling git-cmd.exe with arguments recommended by ConEmu website:</p> <pre><code>set MSYSTEM=MINGW64 &amp; git-cmd.exe --no-cd --command=usr/bin/bash.exe -l -i -new_console:P:&lt;xterm&gt; -new_console:t:GIT\n</code></pre> </li> </ol>"},{"location":"Notes/201503060000_Ctags%20Command/","title":"Ctags Command","text":"<pre><code>ctags --c++-kinds=+p --extra=+f -R .\nctags --c++-kinds=+p --extra=+fq -R --languages=c,c++,c# --fields=+S -I @ctag_ignore_sal.txt .\n</code></pre> <p><code>--c++-kinds=+p</code> : for C++ language, identify the \"function prototype\" symbols (allowing jumps to the \"declaration\" in addition to the \"definition\").</p> <p><code>--extra=+f</code> : generate tags for base file names. (allowing jumps to the include file names)</p> <p><code>-R</code> : recursive over subdirectories</p> <p><code>-I &lt;Special Token&gt;</code></p> <ul> <li>Useful to instruct ctags to properly handle some customized macros such as Microsoft SAL</li> </ul> <p><code>--languages</code> : specify the languages of interest so that only the files of those languages are parsed.</p> <ul> <li>Useful to skip json and javascript files in the C++ project folder.</li> <li>Running \"<code>ctags --languages=c++ myheader.h</code>\" won't get MYMACRO in the tags file</li> <li>Running \"<code>ctags --languages=c++,CPreProcessor myheader.h</code>\" will get MYMACRO in the tags file</li> </ul>"},{"location":"Notes/201504130000_Calling%20Conventions/","title":"Calling Conventions","text":"<p>http://www.codeproject.com/Articles/1388/Calling-Conventions-Demystified</p> <p>Because the stack is cleaned by the called function, the <code>__stdcall</code> calling convention creates smaller executables than <code>__cdecl</code>, in which the code for stack cleanup must be generated for each function call. On the other hand, functions with the variable number of arguments (like <code>printf()</code>) must use <code>__cdecl</code>, because only the caller knows the number of arguments in each function call; therefore only the caller can perform the stack cleanup.</p>"},{"location":"Notes/201504160000_Tail%20Call%20Optimization/","title":"Tail Call Optimization","text":"<p>Tail Call: a subroutine call performed as the final action of a procedure</p> <p>Following is a tail call</p> <pre><code>int f(int x) {\n    return g(x);\n}\n</code></pre> <p>Following is NOT a tail call</p> <pre><code>int h(int x) {\n    int y = g(x);\n    return y;\n}\n</code></pre> <p>function <code>h()</code> needs to push the information belongs to <code>h()</code> into a call stack when calling <code>g()</code>, while function <code>f()</code> does not have to. This is because no information in <code>f()</code> needs to be preserved when calling <code>g()</code>.</p> <p>This concept is important for optimizing the recursion, or called tail recursion.</p> <p>A typical factorial function:</p> <pre><code>int factorial(int n) {\n    if (n === 1) return 1;\n\u00a0\u00a0\u00a0\u00a0return n * factorial(n - 1);\n}\n</code></pre> <p>A factorial function implemented as tail recursion:</p> <pre><code>int factorial(n, total) {\n    if (n === 1) return total;\n\u00a0\u00a0\u00a0\u00a0return factorial(n - 1, n * total);\n}\n</code></pre> <p>The tail recursion allows the compiler to optimize the code and save n layers of call stack</p>"},{"location":"Notes/201504160000_Tail%20Call%20Optimization/#reference","title":"Reference","text":"<ul> <li>https://en.wikipedia.org/wiki/Tail_call</li> <li>https://stackoverflow.com/questions/33923/what-is-tail-recursion</li> </ul>"},{"location":"Notes/201508130000_Circular%20Convolution/","title":"Circular Convolution","text":""},{"location":"Notes/201508130000_Circular%20Convolution/#definition","title":"Definition","text":"<p>Finite length: A signal \\(x(n)\\) is of finite length \\(N\\) if</p> \\[ x(n) =0 \\quad \\forall n \\notin \\left[0, N-1 \\right] \\] <p>Periodic: \\(x(n)\\) of finite length \\(N\\) is converted to a periodic signal \\(\\tilde{x}(n)\\) by</p> \\[ \\begin{align*} \\tilde{x}(n) &amp;= \\sum_{k=-\\infty}^{\\infty}{ x(n+kN) } \\\\   &amp;= x( n \\, \\mbox{modulo} \\, N ) \\\\   &amp; \\triangleq x((n))_N \\end{align*} \\] <p>Rectangular Function: A rectangular function \\(R_N(n)\\) is defined as</p> \\[ R_N(n) = \\left\\{     \\begin{array}{rl}     1 &amp; \\forall \\, 0 \\leq n \\leq (N-1) \\\\     0 &amp; otherwise   \\end{array} \\right. \\] <p>Circular convolution \\(\\circledast\\): Given \\(x_1(n)\\) and \\(x_2(n)\\) being finite length \\(N\\), the circular convolution for \\(x_1(n)\\) and \\(x_2(n)\\) is defined as</p> \\[ \\begin{align*} x_1(n) \\circledast x_2(n) &amp;= \\left[ \\sum_{m=0}^{N-1}{ \\tilde{x}_1(m) \\tilde{x}_2(n-m) } \\right] R_N(n) \\\\  &amp;= \\left[ \\sum_{m=0}^{N-1}{ x_1((m))_N x_2((n-m))_N } \\right] R_N(n) \\\\  &amp;= \\left[ \\sum_{m=0}^{N-1}{ x_1(m) x_2((n-m))_N } \\right] R_N(n) \\\\  &amp;= \\left[  x_1(n) \\ast x_2((n))_N \\right] R_N(n) \\\\  &amp;= \\left[  x_1(n) \\ast x_2(n) \\ast P_N(n) \\right] R_N(n) \\\\ \\end{align*} \\] <p>where the operator \\(\\ast\\) is the linear convolution, and</p> \\[ P_N(n) = \\sum_{k=-\\infty}^{\\infty}{ \\delta(n+kN) } \\]"},{"location":"Notes/201508130000_Circular%20Convolution/#circular-aliasing","title":"Circular Aliasing","text":"<p>Note that the output of the linear convolution \\(x_1(n) \\ast x_2(n)\\) yields a signal of finite length \\(2N-1\\), and \\(x_1(n) \\ast x_2(n) \\ast \\delta(n+N)\\) may have non-zero signals at \\(n \\in [0,N-1]\\). This called circular aliasing.</p>"},{"location":"Notes/201508130000_Circular%20Convolution/#using-circular-convolution-to-perform-linear-convolution","title":"Using Circular Convolution to Perform Linear Convolution","text":"<p>In many scenarios what people want is the linear convolution (e.g. filter a very long signal with an FIR). However, the conventional linear convolution is more computationally complex than the circular convolution, and therefore there are desires to use circular convolution to perform linear convolution.</p> <p>In order to do so, one can do circular convolution with N zero-padding onto both \\(x_1(n)\\) and \\(x_2(n)\\), making them conceptually finite length \\(2N\\). The corresponding circular convolution output will be a signal of finite length \\(2N\\) without circular aliasing, and the output will be identical to the linear convolution.</p>"},{"location":"Notes/201508130000_Circular%20Convolution/#reference","title":"Reference","text":"<ul> <li>http://ocw.mit.edu/resources/res-6-008-digital-signal-processing-spring-2011/video-lectures/lecture-10-circular-convolution/MITRES_6_008S11_lec10.pdf </li> </ul>"},{"location":"Notes/201603230000_windows_displayproperties_Identify_numbers_are_incorrect/","title":"Windows Display Properties \"Identify\" numbers are incorrect","text":""},{"location":"Notes/201603230000_windows_displayproperties_Identify_numbers_are_incorrect/#context","title":"Context","text":"<p>After some operations related to enabling/disabling the display (e.g. Set to \"Second screen only\" from WIN+P, then set back to \"built-in monitor + external monitor\" from Intel HD Graphic Control Panel), the display identity may be misconfigured, resulting in the monitor 1 appears as the left display in the configuration window while it behaves as the right display (mouse moves across the boundary at the left edge of the monitor 1).</p>"},{"location":"Notes/201603230000_windows_displayproperties_Identify_numbers_are_incorrect/#problem","title":"Problem","text":"<p>How to fix the incorrect identity of the displays?</p>"},{"location":"Notes/201603230000_windows_displayproperties_Identify_numbers_are_incorrect/#solution","title":"Solution","text":"<p>Delete these two registry keys, and then let Windows rediscover the displays:</p> <pre><code>HKEY_LOCAL_MACHINE\\Systems\\CurrentControlSet\\Control\\GraphicsDrivers\\Configuration\nHKEY_LOCAL_MACHINE\\Systems\\CurrentControlSet\\Control\\GraphicsDrivers\\Connectivity\n</code></pre> <p>Alternatively, copy the text below into a text file and call it\u00a0Monitor Persistence.reg, save it, then run it to remove these entries:</p> <pre><code>Windows Registry Editor Version 5.00\n\n[-HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\GraphicsDrivers\\Configuration]\n[-HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\GraphicsDrivers\\Connectivity]\n</code></pre>"},{"location":"Notes/201603230000_windows_displayproperties_Identify_numbers_are_incorrect/#reference","title":"Reference","text":"<p>http://support.displaylink.com/knowledgebase/articles/736116-windows-display-properties-identify-numbers-are</p>"},{"location":"Notes/201604141307_resampling/","title":"Resampling","text":""},{"location":"Notes/201604141307_resampling/#context","title":"Context","text":"<p>Let the discrete time signal \\(x_1[n]\\) be the samples of a continuous time signal \\(x(t)\\) sampled at some interval \\(T_1\\):</p> \\[ x_1[n] = x(t - n \\cdot \\frac{1}{T_1}) \\] <p>We want to convert \\(x_1[n]\\) to \\(x_2[n]\\), where \\(x_2[n]\\) is the samples of \\(x(t)\\), but sampled at a different interval \\(T_2\\).</p> <p>Here we assume \\(\\frac{T_1}{T_2}\\) is rational, in other words, there exists some integer \\(L\\) and \\(M\\) that</p> \\[ \\frac{T_1}{T_2} = \\frac{L}{M} \\] <p>For example, we may want to convert a WAV data of 44100Hz sampling rate to 48000Hz sampling rate.</p>"},{"location":"Notes/201604141307_resampling/#problem","title":"Problem","text":"<p>How do we convert \\(x_1[n]\\) to \\(x_2[n]\\)?</p>"},{"location":"Notes/201604141307_resampling/#solution","title":"Solution","text":"<p>This resampling problem can be solved by two steps</p> <ol> <li>Upsample \\(x_1[n]\\) by the integer factor \\(L\\)</li> <li>Downsample the outcome of the previous step by the integer factor \\(M\\)</li> </ol>"},{"location":"Notes/201604141307_resampling/#upsampling","title":"Upsampling","text":"<p>Upsampling is typically done by two steps</p> <ol> <li>Create a zero-inserted sequence from the original signal</li> <li>Smooth out the discontinuities with a lowpass filter. This filter is sometimes referred to as the interpolation filter</li> </ol> <p>Let the zero-inserted sequence be \\(x_{1,L}[n]\\), where</p> <p>$$</p> <p>x_{1,L}[n] = \\left{   \\begin{array}{cc}     x_1[m] &amp; m = \\frac{n}{L} \\     0 &amp; otherwise   \\end{array}   \\right. $$</p> <p>Let \\(X(f)\\) be the Fourier transform of \\(x(t)\\). The discrete-time Fourier transform of \\(x_{1,L}[n]\\) and \\(x_1[n]\\) are basically identical, for both of them are essentially</p> \\[ \\sum_n{ x(nT_1) e^{j 2 \\pi f nT_1}  } = \\frac{1}{T_1} \\sum_k{ X(f - \\frac{k}{T_1} }) \\] <p>However, the true \"upsampled by factor \\(L\\)\" signal should be of DTFT</p> \\[ \\frac{L}{T_1} \\sum_k{ X(f - \\frac{kL}{T_1} }) \\] <p>If \\(x(t)\\) is band-limited, of bandwidth \\(W &lt; \\frac{0.5}{T_1}\\), then we can design an ideal low-pass filter (LPF) of cut-off frequency \\(\\frac{0.5}{T_1}\\), and filter \\(x_{1,L}[n]\\) with this LPF. The DTFT of the filtered \\(x_{1,L}[n]\\) will be \\(\\frac{L}{T_1} \\sum_k{ X(f - \\frac{kL}{T_1} })\\) as desired.</p>"},{"location":"Notes/201604141307_resampling/#downsampling","title":"Downsampling","text":"<p>Downsampling is typically done by two steps</p> <ol> <li>Apply an anti-aliasing low-pass filter to the original signal</li> <li>Decimate the filtered signal by a integer factor M.</li> </ol>"},{"location":"Notes/201604141307_resampling/#combining-upsampling-and-downsampling","title":"Combining Upsampling and Downsampling","text":"<p>The overall data flow can be described as follows</p> <pre><code>x1[n] ---&gt; zero-insertion ---&gt; interpolation filter h[n] ---&gt; anti-aliasing filter f[n] ---&gt; decimation ---&gt; x2[n]\n                         x1,L[n]   \\                                              /     y[n]\n                                    -----------------------v----------------------\n                                                           g[n]\n</code></pre> <p>The interpolation filter \\(h[n]\\) and the anti-aliasing filter \\(f[n]\\) can be combined into one filter \\(g[n]\\) to reduce the computation.</p> <p>First, zero-pad \\(g[n]\\) so that its length becomes a multiple of \\(L\\). Here we assume the length of the zero-padded \\(g[n]\\) is \\(qL\\), where \\(q\\) is an positive integer.</p> <p>Let \\(y[n]\\) be the output of \\(g[n]\\), then</p> \\[ \\begin{align} y[n] &amp;= x_{1,L}[n] * g[n] \\\\  &amp;= \\sum_{k=0}^{qL-1}( x_{1,L}[n-k]g[k] ) \\\\ \\end{align} \\] <p>Because \\(x_{1,L}[n-k]=0\\) when \\((n-k)\\) is not multiple of \\(L\\), we can rewrite \\(y[n]\\) as</p> \\[ \\begin{align} y[n]  &amp;=  \\left\\{   \\begin{array}{cc}     \\sum_{j=0}^{q-1}x_1[\\frac{n}{L}-j] \\cdot g[L \\cdot j] &amp; \\mod(n,L)=0 \\\\     \\sum_{j=0}^{q-1}x_1[\\frac{n-1}{L}-j] \\cdot g[L \\cdot j + 1] &amp; \\mod(n,L)=1 \\\\     \\vdots \\\\     \\sum_{j=0}^{q-1}x_1[\\frac{n-(L-1)}{L}-j] \\cdot g[L \\cdot j + L-1] &amp; \\mod(n,L)=L-1 \\\\   \\end{array}   \\right. \\end{align} \\] <p>Following table illustrates the computation of \\(y[n]\\):</p> g[0] g[1] g[2] ... g[L] g[L+1] g[L+2] ... g[2L] g[2L+1] g[2L+2] ... g[qL-1] x1[q] 0 0 ... x1[q-1] 0 0 ... x1[q-2] 0 0 ... 0 y[qL] = x1[q]g[0] + x1[q-1]g[L] + ... 0 x1[q] 0 ... 0 x1[q-1] 0 ... 0 x1[q-2] 0 ... 0 y[qL+1] = x1[q]g[1] + x1[q-1]g[L+1] + ... 0 0 x1[q] ... 0 0 x1[q-1] ... 0 0 x1[q-2] ... 0 y[qL+2] = x1[q]g[2] + x1[q-1]g[L+2] + ... <p>Note that the computation of \\(y[n]\\) above can be viewed as \\(x_1[n]\\) filtered by a filter bank \\(\\{g_0[n], g_1[n], g_2[n], ... , g_{L-1}[n] \\}\\) where</p> \\[ g_i[n] = \\{g[0+i], g[L+i], g[2L+i], ... g[(q-1)L+i]\\} \\] <p>This filter bank is called the polyphase filter.</p> <p>With the \"polyphase filter\" approach, computing one sample of \\(y[n]\\) requires only \\(q\\) multiplications and \\(q-1\\) additions (instead of \\(qL\\) multiplications and \\(qL-1\\) additions as the typical convolution requires). Also, only 1 out of \\(M\\) samples of \\(y[n]\\) needs to be computed because the rest will be decimated anyway. </p>"},{"location":"Notes/201605090000_Showing%20The%20List%20of%20Included%20Files%20When%20Compiling/","title":"Showing The List of Included Files When Compiling","text":"<p>For nmake (Windows), use <code>/showIncludes</code> switch to <code>cl.exe</code></p> <p><code>()</code></p> <p>For gcc, use  <code>-M or -H</code></p>"},{"location":"Notes/201605090000_Showing%20The%20List%20of%20Included%20Files%20When%20Compiling/#reference","title":"Reference","text":"<ul> <li>http://stackoverflow.com/questions/946105/makedepend-equivalent-for-use-with-nmake</li> <li>http://stackoverflow.com/questions/5834778/how-to-tell-where-a-header-file-is-included-from</li> </ul>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/","title":"Making Perl Script to Take Arguments on Windows","text":""},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#context","title":"Context","text":"<p>On Windows (10), with ActivePerl, while the OS recognizes *.pl as the Perl script and executes the file with perl.exe, no arguments are accepted.</p> <p>In other words, running</p> <pre><code>myScript.pl arg1 arg2 arg3\n</code></pre> <p>is the same as running</p> <pre><code>myScript.pl\n</code></pre> <p>One workaround for this is to explicitly invoke the script with perl.exe:</p> <pre><code>path/to/perl.exe path/to/myScript.pl arg1 arg2 arg3\n</code></pre> <p>However, this is inconvenient because the full path to myScript.pl has to be provided.</p>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#solution","title":"Solution","text":"<p>The root cause is that \"some\" file association setting on Windows fails to account for the arguments coming with the Perl script command. But the problem is that there are multiple places that all seem to attempt to define the file association of Perl. Before there is a document elaborating how the file association works on the latest Windows, the recommendation is to empirically try all of the potential solutions and find out which one works.</p>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#solution-1-hkey_classes_rootapplicationsperlexe","title":"Solution 1: <code>HKEY_CLASSES_ROOT\\Applications\\perl.exe</code>","text":"<p>The full path to the registry is  <code>HKEY_CLASSES_ROOT\\Applications\\perl.exe\\shell\\open\\command</code> ,  and the value may be  <code>\"C:\\Perl64\\bin\\perl.exe\" \"%1\"</code></p> <p>In such case, change the value to <code>\"C:\\Perl64\\bin\\perl.exe\" \"%1\" %*</code> </p> <p>The \"<code>%1</code>\" in the command refers to \"the first argument\", which is the Perl script itself. The \"<code>%*</code>\" refers to \"the rest arguments\". Without \"<code>%*</code>\", Windows just omits all the arguments following the Perl script.</p> <p>NOTE: The registry key \"<code>Applications\\perl.exe</code>\" is created by Windows when user manually chooses specific program to execute the Perl script via the \"Open With\" option in the File Explorer. This seems to determine how <code>*.pl</code> file will be treated when entered in the CMD window.</p>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#solution-2-hkey_classes_rootpl_auto_file","title":"Solution 2: <code>HKEY_CLASSES_ROOT\\pl_auto_file</code>","text":"<p>There may be a registry key <code>pl_auto_file\\shell\\open\\command</code> that also defines how Perl script is executed. If its value misses \"<code>%*</code>\", add it to the register value like suggested in Solution 1.</p> <p>Note that this pl_auto_file may be present in multiple places. It's unclear whether all of them have to be modified.</p> <pre><code>HKEY_CURRENT_USER\\SOFTWARE\\Classes\nHKEY_CLASSES_ROOT\\\nHKEY_USERS\\S-X-X-XX-XXXXXXX-XXXXXX-XXXXXXX-XXXX\\Software\\Classes\n</code></pre> <p>NOTE: The registry key \"pl_auto_file\" is created by Windows when user manually chooses specific program to execute the Perl script via the \"Open With\" option in the File Explorer.\u00a0 Strawberry Perl seems to use a registry key of different name \"Perl_program_file\".</p>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#solution-3-ftype-and-assoc","title":"Solution 3: FTYPE and ASSOC","text":"<p>Run the following command to confirm if .pl is associated with Perl file type: <pre><code>ASSOC | FINDSTR /snip perl\n</code></pre></p> <p>The expected output is something like <pre><code> .pl=Perl\n</code></pre></p> <p>Run the following command to confirm how the Perl file type will be executed: <pre><code>FTYPE | FINDSTR /snip perl\n</code></pre></p> <p>The expected output is something like <pre><code>Perl=\"C:\\Perl64\\bin\\perl.exe\" \"%1\" %*\n</code></pre></p> <p>Similarly, if \"<code>%*</code>\" is missing in FTYPE, run the following command to fix the association. <pre><code>FTYPE Perl=\"C:\\Perl64\\bin\\perl.exe\" \"%1\" %*\n</code></pre></p> <p>NOTE: ASSOC may return something like \"<code>.pl=Perl_program_file</code>\" while FTYPE has no definition for \"<code>Perl_program_file</code>\". In such case, refer to Solution 2 and see if \"<code>Perl_program_file</code>\" can be found under  <code>HKEY_CLASSES_ROOT</code>.</p>"},{"location":"Notes/201605260000_Making%20Perl%20Script%20to%20Take%20Arguments%20on%20Windows/#see-also","title":"See Also","text":"<ul> <li>https://stackoverflow.com/questions/51715292/best-way-to-get-file-type-association-in-windows-10-from-command-line</li> </ul>"},{"location":"Notes/201606150000_svchost_high_cpu/","title":"svchost Using 80%+ CPU","text":""},{"location":"Notes/201606150000_svchost_high_cpu/#context","title":"Context","text":"<p>One <code>svchost.exe</code> uses 80%+ CPU and 2GB memory.\u00a0</p>"},{"location":"Notes/201606150000_svchost_high_cpu/#solution","title":"Solution","text":"<p>Disabling \"Delivery Optimization\" service resolves the problem.\u00a0</p> <p>According to Microsoft Technet, the problem of\u00a0\"Delivery Optimization\" using high CPU may result from the P2P\u00a0Windows Update option.</p>"},{"location":"Notes/201607120000_hex_value_between_characters/","title":"Hex 0x00 (^@) value between characters","text":""},{"location":"Notes/201607120000_hex_value_between_characters/#context","title":"Context","text":"<p>A TXT file opened in Vim shows something like <pre><code>^@V^@e^@r^@i^@f^@y\n</code></pre></p> <p>while it is supposed to be <pre><code>Verify\n</code></pre></p>"},{"location":"Notes/201607120000_hex_value_between_characters/#root-cause","title":"Root Cause","text":"<p>The characters are written in UTF-16 while the file is opened as UTF-8. This is probably because there are other UTF-8 content in the file that leads the text editor to parse the file in UTF-8 format.</p>"},{"location":"Notes/201607120000_hex_value_between_characters/#solution","title":"Solution","text":"<p>Set the encoding to UTF-16.</p> <p>In Vim, this can be done by executing <pre><code>:e ++enc=utf-16\n</code></pre></p> <p>Or <pre><code>:e ++enc=utf-16le\n</code></pre></p>"},{"location":"Notes/201607120000_hex_value_between_characters/#reference","title":"Reference","text":"<p>http://stackoverflow.com/questions/16301705/hex-00-value-between-characters</p>"},{"location":"Notes/201608180000_Browse%20the%20symbols%20in%20the%20gcc%20library/","title":"Browse the symbols in the gcc library (.o, .a, .elf)","text":"<p>readelf -s -W mylib.o</p> <p># -C: showing the demangled symbols</p> <p>nm -gC mylib.a</p> <p>Note: Git for Windows does not seem to provide readelf and nm. Octave comes with these two executable though.</p>"},{"location":"Notes/201609011500_Exuberant-ctags%20v.s.%20Universal%20Ctags/","title":"Exuberant-ctags v.s. Universal Ctags","text":"<p>Recommend using Exuberant-ctags for C/C++ for now.</p> <p>Universal Ctags does not come with the executable. The executable available for download at https://ci.appveyor.com/project/masatake/ctags/build/job/64sb0lj9cbnymw1h/artifacts has some problems</p> <ul> <li> <p>Only the build from mingw can run out of box. But this build does not recognize the following syntax:</p> <pre><code>typedef struct {\n} ABC, *PABC\n</code></pre> <p>It recognizes tag \"PABC\" but not tag \"ABC\" * As of 2016/08/10, <code>iconv.dll</code> is included in the zip file * Universal Ctags does not correctly parse the function that has \"macro function\" in the argument list</p> <pre><code>int MyFunc( _In_reads_(1) int* pArray ) {\n    ...\n}\n</code></pre> </li> </ul> <p><code>_In_reads_(1)</code> is the Microsoft SAL macro to annotate that the size of pArray is 1. With the presence of <code>_In_reads_(1)</code>, Universal Ctags is unable to recognize the function \"MyFunc\"</p> <p>Ctags document suggests using \"-I\" option to work around this issue, (<code>ctags.exe -I _In_reads_+</code>), but Universal Ctags still cannot recognize MyFunc even with the \"-I\" option.</p>"},{"location":"Notes/201706271405_ts_link_lib_ordinal_n_error/","title":"Debugging \"The ordinal N could not be located in the dynamic link library\" Error","text":""},{"location":"Notes/201706271405_ts_link_lib_ordinal_n_error/#context","title":"Context","text":"<p>When running some executable or loading some DLL, the error occurs with the following error message:</p> <pre><code>The ordinal N could not be located in the dynamic link library\n</code></pre> <p>Where N here is an integer.</p>"},{"location":"Notes/201706271405_ts_link_lib_ordinal_n_error/#solution","title":"Solution","text":"<p>Update the related executable or the related DLLs so that the library information is consistent across the entire program.</p>"},{"location":"Notes/201706271405_ts_link_lib_ordinal_n_error/#analysis","title":"Analysis","text":"<p>The \"Ordinal N\" here refers to a function in the DLL. It is considered as an alternative name of the function used internally in the DLL. The reported error message basically means that a specific function cannot be found in the DLL.</p> <p>To find out more information about the function in question, such as the actual name of the missing function, use <code>dumpbin.exe</code> with the following syntax to export the mapping between the ordinal number and the actual function name. </p> <pre><code>dumpbin.exe /exports &lt;PathToDll&gt;\n</code></pre> <p>For example, following is part of the results of running <code>dumpbin.exe /exports C:\\Windows\\System32\\AudioEng.dll</code>:</p> <pre><code>Dump of file c:\\windows\\system32\\AudioEng.dll\n\nFile Type: DLL\n\n  Section contains the following exports for audioeng.dll\n\n    00000000 characteristics\n    988907DD time date stamp\n        0.00 version\n           1 ordinal base\n           6 number of functions\n           6 number of names\n\nordinal hint RVA\u00a0\u00a0\u00a0\u00a0\u00a0 name\n\n      1\u00a0\u00a0\u00a0 0 00024090 AERT_Allocate\n      2\u00a0\u00a0\u00a0 1 000240E0 AERT_Free\n      3\u00a0\u00a0\u00a0 2 00004490 DllCanUnloadNow\n      4\u00a0\u00a0\u00a0 3 00005440 DllGetClassObject\n      5\u00a0\u00a0\u00a0 4 0003C360 DllRegisterServer\n      6\u00a0\u00a0\u00a0 5 0003C370 DllUnregisterServer\n</code></pre> <p>If the error message reads \"The ordinal 3 could not be located in the dynamic link library\", it means the <code>DllCanUnloadNow</code> function is missing for some reason.</p> <p>Note:</p> <ul> <li><code>dumpbin.exe</code> is not a built-in Windows function. It comes with some Windows Tooling programs such as Visual Studio 2017.</li> </ul>"},{"location":"Notes/201707130000_Command-line%20prompt%20format/","title":"Command-line prompt format","text":""},{"location":"Notes/201707130000_Command-line%20prompt%20format/#windows","title":"Windows","text":"<p>https://ss64.com/nt/prompt.html</p> <p>Example</p> <pre><code>PROMPT=$E[1;37;42m(%USERNAME%)$P$E[;m$_$E[1;37;42m[$T$H$H$H$H$H$H]$E[;m$+$G\n</code></pre> <pre><code>(yyc) c:\\Windows\n[15:00]&gt;\n</code></pre> <p><code>$T</code> is the timestamp with two digits below the decimal points in seconds. <code>$H</code> is \"backspace\". 6 <code>$H</code> after <code>$T</code> removes the \"second\" information in the time stamp (15:00:12.34 --&gt; 15:00)</p>"},{"location":"Notes/201707130000_Command-line%20prompt%20format/#bash","title":"Bash","text":"<p>https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html</p>"},{"location":"Notes/201711171122_Fix_Open_File_Security_Warning/","title":"Fix \"Open File Security Warning\"","text":""},{"location":"Notes/201711171122_Fix_Open_File_Security_Warning/#context","title":"Context","text":"<p>On Windows, when user clicks a user-created shortcut, the Windows always pops up a security warning window, asking user to confirm the execution.</p> <p>While it is undesirable to reduce the global security level to suppress such warning, the repeated confirmation on certain known shortcuts is a bad user experience.</p>"},{"location":"Notes/201711171122_Fix_Open_File_Security_Warning/#problem","title":"Problem","text":"<p>How to disable/suppress the security warning from opening certain known, benign shortcuts?</p>"},{"location":"Notes/201711171122_Fix_Open_File_Security_Warning/#solution","title":"Solution","text":"<p>Change the file's security integrity level to medium using Windows command ICACLS</p> <pre><code>ICACLS \"%userprofile%\\favorites\" /SETINTEGRITYLEVEL (OI)(CI)M\nICACLS \"%userprofile%\\favorites\\links\" /SETINTEGRITYLEVEL (OI)(CI)M\nICACLS \"%userprofile%\\favorites\\links\\mylink.lnk\" /SETINTEGRITYLEVEL (OI)(CI)M\n</code></pre> <p>Note: It seems necessary to run all 3 commands to set the integrity for the favorites directory, the favorites/links directory, and the link itself. Maybe there are some other ways to set the integrity so that only the link file has to be set, but how to do so is currently unknown.</p>"},{"location":"Notes/201711171122_Fix_Open_File_Security_Warning/#reference","title":"Reference","text":"<ul> <li>http://www.winhelponline.com/blog/fix-start-menu-shortcuts-open-file-security-warning-windows-7-vista/</li> </ul>"},{"location":"Notes/201806270000_Make%20vim-plugin%20_Tagbar_%20to%20support%20Powershell/","title":"Make vim-plugin \"Tagbar\" to support Powershell","text":"<p>To make Tagbar supports PowerShell, do the followings</p> <ol> <li>Add <code>g:tagbar_type_ps1</code> to <code>.vimrc</code></li> <li>Add PowerShell language definition to ctags config file</li> </ol> <p>For 1, add the following code to <code>.vimrc</code></p> <pre><code>let g:tagbar_type_ps1 = {\n    \\ 'ctagstype' : 'powershell',\n    \\ 'kinds'     : [\n        \\ 'f:function',\n        \\ 'i:filter',\n        \\ 'a:alias'\n    \\ ]\n\\ }\n</code></pre> <p>For 2, the path to the ctags config file varies dependent on which ctags is used:</p> <ul> <li>For Exuberant-ctags: <code>$HOME/.ctags</code><ul> <li>(Linux) <code>$HOME/.ctags.d/powershell.ctags</code></li> <li>(Windows) <code>$HOMEDRIVE$HOMEPATH/ctags.d/powershell.ctags</code><ul> <li>The document suggests \"<code>$HOMEDRIVE$HOMEPATH/.ctags.d</code>\", while the commit suggests \"<code>$HOMEDRIVE$HOMEPATH/ctags.d</code>\".</li> </ul> </li> </ul> </li> </ul> <p>Create the ctags config file\u00a0<code>powershell.ctags</code> and add the following code to the file:</p> <pre><code>--langdef=powershell\n--langmap=powershell:.ps1.psm1\n--regex-powershell=/^[Ff]unction[\\t ]*([a-zA-Z0-9_-]+)/\\1/f,function/\n--regex-powershell=/^[Ff]ilter[\\t ]*([a-zA-Z0-9_-]+)/\\1/i,filter/\n--regex-powershell=/^[sS]et-[Aa]lias[\\t ]*([a-zA-Z0-9_-]+)/\\1/a,alias/\n</code></pre> <p>REFERENCE</p> <ul> <li>https://github.com/universal-ctags/ctags/blob/master/docs/optlib.rst</li> <li>https://github.com/majutsushi/tagbar/wiki#powershell</li> </ul>"},{"location":"Notes/201901160000_perl_system_and_cmd_return_different_result/","title":"Running Windows Command  in Perl and in Windows CMD yield different results","text":""},{"location":"Notes/201901160000_perl_system_and_cmd_return_different_result/#context","title":"Context","text":"<p>When running a \"build\" command from a CMD window using the following two different approaches, the first one succeeds while the second one fails:</p> <pre><code>&gt; build\n&gt; perl -e \"system(\\\"build\\\");\"\n</code></pre> <p>There are multiple \"build\" executable found when running \"where build\" in the CMD window:</p> <pre><code>path1\\build.cmd\npath2\\build.exe\npath3\\build.exe\n</code></pre>"},{"location":"Notes/201901160000_perl_system_and_cmd_return_different_result/#root-cause","title":"Root Cause","text":"<p>It appears that <code>system()</code> in Perl omits <code>path1\\build.cmd</code> and executes <code>path2\\build.exe</code>, resulting in different build outcomes.</p> <p>One hypothesis is that <code>*.cmd</code> is not considered as an executable by Perl's <code>system()</code>. But the hypothesis is to be further confirmed.</p>"},{"location":"Notes/201901160000_perl_system_and_cmd_return_different_result/#solution","title":"Solution","text":"<p>Explicitly invoking <code>build.cmd</code> in Perl</p> <pre><code>&gt; perl -e \"system(\\\"build.cmd\\\");\"\n</code></pre>"},{"location":"Notes/201903280000_Cross-correlation/","title":"Cross-correlation","text":"<p>There are more than 1 type of cross-correlation: * Cross-correlation of deterministic signals * Cross-correlation of random vectors * Cross-correlation of stochastic processes</p>"},{"location":"Notes/201903280000_Cross-correlation/#cross-correlation-of-deterministic-signals","title":"Cross-correlation of deterministic signals","text":"<p>In signal processing, given the continuous functions \\(f\\) and \\(g\\), the cross-correlation is defined as</p> \\[ (f\\star g)(\\tau )\\ \\triangleq \\int _{-\\infty }^{\\infty }{\\overline {f(t)}}g(t+\\tau )\\,dt \\] <p>where \\(\\overline {f(t)}\\) denotes the complex conjugate of \\(f(t)\\).</p> <p>Similarly, for discrete functions, the cross-correlation is defined as</p> \\[ (f\\star g)[n]\\ \\triangleq \\sum _{m=-\\infty }^{\\infty }{\\overline {f[m]}}g[m+n] \\]"},{"location":"Notes/201903280000_Cross-correlation/#cross-correlation-of-random-vectors","title":"Cross-correlation of random vectors","text":"<p>In probability and statistics, the cross-correlation is used for referring to the correlations between the entries of two random vectors \\(\\mathbf{X} = (X_{1},\\ldots ,X_{m})^{\\rm{T}}\\) and \\(\\mathbf{Y} = (Y_{1},\\ldots ,Y_{n})^{\\rm{T}}\\), which forms the cross-correlation matrix of \\(\\mathbf{X}\\) and \\(\\mathbf{Y}\\) that is defined as</p> \\[ \\begin{align*} \\operatorname{R}_{\\mathbf{X} \\mathbf{Y}} &amp;\\triangleq \\ \\operatorname{E} [\\mathbf{X} \\mathbf{Y}^{\\rm {T}}] \\\\ &amp;= {\\begin{bmatrix}\\operatorname {E} [X_{1}Y_{1}]&amp;\\operatorname {E} [X_{1}Y_{2}]&amp;\\cdots &amp;\\operatorname {E} [X_{1}Y_{n}]\\\\\\\\\\operatorname {E} [X_{2}Y_{1}]&amp;\\operatorname {E} [X_{2}Y_{2}]&amp;\\cdots &amp;\\operatorname {E} [X_{2}Y_{n}]\\\\\\\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\\\\\\\\\operatorname {E} [X_{m}Y_{1}]&amp;\\operatorname {E} [X_{m}Y_{2}]&amp;\\cdots &amp;\\operatorname {E} [X_{m}Y_{n}]\\\\\\\\\\end{bmatrix}} \\end{align*} \\]"},{"location":"Notes/201903280000_Cross-correlation/#cross-correlation-of-stochastic-processes","title":"Cross-correlation of stochastic processes","text":"<p>In time series analysis and statistics, the cross-correlation of a pair of random process is the correlation between values of the processes at different times.</p> <p>Given a pair of random processes \\((X_t, Y_t)\\), if both \\(X_t\\) and \\(Y_t\\) have means and variances at time \\(t\\) for any \\(t\\), then the cross-correlation between \\(t_{1}\\) and \\(t_{2}\\) is defined as</p> \\[ \\operatorname{R}_{XY}(t_{1},t_{2}) = \\operatorname{E}[X_{t_{1}}{\\overline{Y_{t_{2}}}}] \\] <p>Note that this expression may be not defined (if the means and variances are not defined)</p> <p>If \\((X_t, Y_t)\\) are jointly wide-sense stationary, then the cross-correlation function can be re-written as</p> \\[ \\operatorname{R}_{XY}(\\tau) = \\operatorname{E} \\left[X_{t}{\\overline{Y_{t+\\tau}}}\\right] \\]"},{"location":"Notes/201903280000_Cross-correlation/#reference","title":"Reference","text":"<ul> <li>Cross-correlation </li> </ul>"},{"location":"Notes/201904110000_Inserting%20SVG%20in%20the%20wikidot%20page/","title":"Inserting SVG in the wikidot page","text":""},{"location":"Notes/201904110000_Inserting%20SVG%20in%20the%20wikidot%20page/#context","title":"Context","text":"<p>Wikidot supports SVG image format. To insert the SVG image, the typical syntax is as follows:</p> <pre><code>[image https://url/to/file.svg](&lt;image https://url/to/file.svg&gt;)\n</code></pre> <p>When user wants to insert the SVG image he/she creates, the user has two options:</p> <ol> <li>Upload the SVG image to some image host website (e.g. imgur.com) and then link to the uploaded image</li> <li>Upload the SVG image to wikidot page as an attachment and then link to the attachment</li> </ol> <p>However,\u00a0</p> <ol> <li>imgur.com\u00a0currently does not support the SVG format,</li> <li>Wikidot currently does not support \"linking to the SVG file in the attachment\"</li> </ol>"},{"location":"Notes/201904110000_Inserting%20SVG%20in%20the%20wikidot%20page/#problem","title":"Problem","text":"<p>How to easily insert a user-created SVG file in the wikidot page?</p>"},{"location":"Notes/201904110000_Inserting%20SVG%20in%20the%20wikidot%20page/#solution","title":"Solution","text":"<p>Use the \"HTML block\" in the wikidot page to directly host the SVG image:</p> <pre><code>[[html]]\n&lt;!-- your SVG image data here --&gt;\n[/html](&lt;../../../../../../../html.md&gt;)\n</code></pre>"},{"location":"Notes/201906210000_vim_slow_reading_network_file/","title":"Vim is very slow when switching to the buffer reading network file","text":""},{"location":"Notes/201906210000_vim_slow_reading_network_file/#context","title":"Context","text":"<p>When Vim switches to a buffer that shows a UNC path like <code>\\\\server\\dir1\\file.txt</code> on Windows, Vim can be very slow loading the buffer. One possible reason is that there are some autocommands that try to read the network path, which is usually very slow. For example, the following Vim autocommand tries to change the current directory to where the file is:</p> <pre><code>au BufEnter * execute \"chdir \".escape(expand(\"%:p:h\"), ' ')\n</code></pre> <p>It is desired to keep such autocommands for local files but not activate them for files on the network.</p>"},{"location":"Notes/201906210000_vim_slow_reading_network_file/#problem","title":"Problem","text":"<p>How to modify the autocommands so that it applies to only the local files?</p>"},{"location":"Notes/201906210000_vim_slow_reading_network_file/#solution","title":"Solution","text":"<p>Upgrade to ver 8.2</p>"},{"location":"Notes/201906210000_vim_slow_reading_network_file/#reference","title":"Reference","text":"<ul> <li>https://github.com/vim/vim/commit/8bb41b3d062cd315fdd0626dfd6fa68474a96b50</li> <li>http://vimdoc.sourceforge.net/htmldoc/autocmd.html#{pat}</li> <li>http://vimdoc.sourceforge.net/htmldoc/pattern.html#pattern</li> </ul>"},{"location":"Notes/201906280000_windows_10_puts_dummy_python/","title":"Windows 10 Puts a dummy python.exe in <code>AppData\\Local\\Microsoft\\WindowsApps</code>","text":""},{"location":"Notes/201906280000_windows_10_puts_dummy_python/#context","title":"Context","text":"<p>When a user installs a python distribution on Windows 10 and tries to run python from the CMD, Windows uses the dummy python.exe found in <code>%USERPROFILE%\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps</code> instead of the installed python.exe</p> <p>The dummy python.exe in WindowsApps folder is just a link that opens the Microsoft Store instead of a real python executable.</p>"},{"location":"Notes/201906280000_windows_10_puts_dummy_python/#problem","title":"Problem","text":"<p>How to get rid of this dummy python.exe?</p>"},{"location":"Notes/201906280000_windows_10_puts_dummy_python/#solution","title":"Solution","text":"<p>Do the followings:</p> <ol> <li>Go to \"Settings\" --&gt; \"Apps\"</li> <li>Under \"Apps &amp; features\", click \"App execution aliases\"</li> <li>In the \"App execution aliases\" menu, turn off App installers for \"python.exe\" and \"python3.exe\"</li> </ol>"},{"location":"Notes/201906280000_windows_10_puts_dummy_python/#reference","title":"Reference","text":"<ul> <li>https://superuser.com/questions/1437590/typing-python-on-windows-10-version-1903-command-prompt-opens-microsoft-stor</li> </ul>"},{"location":"Notes/201907090000_Convolution/","title":"Convolution","text":""},{"location":"Notes/201907090000_Convolution/#definition","title":"Definition","text":""},{"location":"Notes/201907090000_Convolution/#basic-1d-form","title":"Basic 1D Form","text":"<p>For complex-valued function \\(f, g: \\mathbb{R} \\mapsto \\mathbb{C}\\), the convolution of \\(f\\) and \\(g\\) is defined as</p> \\[ (f*g)(t) \\triangleq \\int _{-\\infty}^{\\infty}f(\\tau)g(t-\\tau)\\,d\\tau = \\int _{-\\infty}^{\\infty}f(t-\\tau)g(\\tau)\\,d\\tau \\] <p>For complex-valued discrete function \\(f[n]\\) and \\(g[n]\\), the discrete convolution of \\(f\\) and \\(g\\) is given by</p> \\[ (f*g)[n] = \\sum_{m=-\\infty}^{\\infty}f[m]g[n-m] = \\sum_{m=-\\infty}^{\\infty}f[n-m]g[m] \\] <p>YYC Note: Here I assume the codomain of \\(f\\) and \\(g\\) are 1-dimensional because I don't know how to compute \\(f(\\tau)g(t-\\tau)\\) if their codomain is not 1-dimentional.</p>"},{"location":"Notes/201907090000_Convolution/#general-multi-dimensional-form","title":"General multi-dimensional Form","text":"<p>For complex-valued function \\(f, g: \\mathbb{R}^d \\mapsto \\mathbb{C}\\), the convolution of \\(f\\) and \\(g\\) is defined as</p> \\[ (f*g)(x)=\\int_{\\mathbb{R}^d}f(y)g(x-y)\\,dy=\\int_{\\mathbb{R}^d}f(x-y)g(y)\\,dy \\] <p>\\((f*g)(x)\\) is well-defined only if \\(f\\) and \\(g\\) decay sufficiently rapidly at infinity in order for the integral to exist.</p>"},{"location":"Notes/201907090000_Convolution/#properties","title":"Properties","text":""},{"location":"Notes/201907090000_Convolution/#algebraic-properties","title":"Algebraic properties","text":"<p>Commutativity</p> \\[ f*g = g*f \\] <p>Associativity</p> \\[ f*(g*h) = (f*g)*h \\] <p>Distributivity</p> \\[ f*(g+h) = f*g + f*h \\] <p>Associativity with scalar multiplication</p> \\[ a (f*g) = (af)*g, \\quad \\forall a \\in \\mathbb{C} \\] <p>Complex conjugation</p> \\[ \\overline{f*g}=\\overline{f}*\\overline{g} \\]"},{"location":"Notes/201907090000_Convolution/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Convolution</li> </ul>"},{"location":"Notes/201908130000_conda%20update%20failed%20with%20an%20error%20related%20to%20LoadLibrary/","title":"conda update failed with an error related to LoadLibrary()","text":""},{"location":"Notes/201908130000_conda%20update%20failed%20with%20an%20error%20related%20to%20LoadLibrary/#context","title":"Context","text":"<p>With Anaconda v4.7.11, <code>conda update --all</code> fails with error messages involving</p> <pre><code>\u00a0 \u00a0 libarchive = ctypes.cdll.LoadLibrary(libarchive_path)\n\u00a0\u00a0File \"E:\\prg\\py\\Anaconda3_64\\lib\\ctypes\\__init__.py\", line 434, in LoadLibrary\n\u00a0\u00a0\u00a0\u00a0return self._dlltype(name)\n\u00a0\u00a0File \"E:\\prg\\py\\Anaconda3_64\\lib\\ctypes\\__init__.py\", line 356, in __init__\n\u00a0\u00a0\u00a0\u00a0self._handle = _dlopen(self._name, mode)\nTypeError: LoadLibrary() argument 1 must be str, not None\n</code></pre>"},{"location":"Notes/201908130000_conda%20update%20failed%20with%20an%20error%20related%20to%20LoadLibrary/#problem","title":"Problem","text":"<p>How to resolve the problem?</p>"},{"location":"Notes/201908130000_conda%20update%20failed%20with%20an%20error%20related%20to%20LoadLibrary/#solution","title":"Solution","text":"<p>Open an Anaconda Prompt (which can be found in the Start menu) and run the following command:</p> <pre><code>conda install python-libarchive-c=2.8=py37_13.\n</code></pre> <p>See\u00a0https://github.com/conda/conda/issues/8865\u00a0for more details about the bug.</p>"},{"location":"Notes/201908130001_conda%20update%20fails%20with%20an%20error%20related%20to%20_SSL%20module%20is%20not%20available_/","title":"conda update fails with an error related to \"SSL module is not available\"","text":""},{"location":"Notes/201908130001_conda%20update%20fails%20with%20an%20error%20related%20to%20_SSL%20module%20is%20not%20available_/#context","title":"Context","text":"<p>With Anaconda v4.7.11, <code>conda update --all</code> fails with error messages involving</p> <pre><code>Max retries exceeded with url: / (Caused by SSLError(\"Can't\nconnect to HTTPS URL because the SSL module is not available.\"))\n</code></pre>"},{"location":"Notes/201908130001_conda%20update%20fails%20with%20an%20error%20related%20to%20_SSL%20module%20is%20not%20available_/#problem","title":"Problem","text":"<p>How to resolve the problem?</p>"},{"location":"Notes/201908130001_conda%20update%20fails%20with%20an%20error%20related%20to%20_SSL%20module%20is%20not%20available_/#solution","title":"Solution","text":"<p>Add the followings to the <code>$PATH</code></p> <pre><code>/path/to/Anaconda3\n/path/to/Anaconda3/scripts\n/path/to/Anaconda3/Library/bin\n</code></pre> <p>See\u00a0https://stackoverflow.com/questions/54135206/requests-caused-by-sslerrorcant-connect-to-https-url-because-the-ssl-module</p>"},{"location":"Notes/201908130001_conda%20update%20fails%20with%20an%20error%20related%20to%20_SSL%20module%20is%20not%20available_/#related","title":"Related","text":"<ul> <li>202107210000_Anaconda Python Numpy failed to import C-extensions</li> </ul>"},{"location":"Notes/201909120000_vscode_font_aignment_for_chinese/","title":"VSCode Font Alignment for Chinese","text":""},{"location":"Notes/201909120000_vscode_font_aignment_for_chinese/#context","title":"Context","text":"<p>When entering both Chinese and English in VSCode, there is subtle misalignment. About every 4 Chinese characters introduces an offset of half char.</p> <p>Per\u00a0https://github.com/Microsoft/vscode/issues/45360, it's more likely the issue in the selected fonts. Consolas and \"Courier New\" might be supporting Chinese (or Unicode) characters with subtle misalignments.</p>"},{"location":"Notes/201909120000_vscode_font_aignment_for_chinese/#problem","title":"Problem","text":"<p>How to resolve the font alignment issue?</p>"},{"location":"Notes/201909120000_vscode_font_aignment_for_chinese/#solution","title":"Solution","text":"<p>Use a font that strictly render CJK characters with the width of 2 latin characters.\u00a0</p> <p>Currently the solution is to use \"Inconsolata\" as Issue 45360 suggested.</p> <p>Related topics:\u00a0</p> <ul> <li>https://github.com/microsoft/vscode/issues/72743</li> <li>https://zhuoer.netlify.com/post/caprice/2018/vscode-font-finally-mono/</li> </ul>"},{"location":"Notes/201911210000_exponential_smoothing/","title":"Exponential Smoothing","text":""},{"location":"Notes/201911210000_exponential_smoothing/#context","title":"Context","text":"<p>Given a time series data \\(x_t\\) beginning at time \\(t = 0\\), we want to use a window function to smooth \\(x_t\\) where the recent samples are assigned with a larger weighting and the older samples are assigned with a smaller weighting.</p>"},{"location":"Notes/201911210000_exponential_smoothing/#problem","title":"Problem","text":"<p>How to design such a window that is easy to compute?</p>"},{"location":"Notes/201911210000_exponential_smoothing/#solution","title":"Solution","text":""},{"location":"Notes/201911210000_exponential_smoothing/#basic-exponential-smoothing","title":"Basic exponential smoothing","text":"<p>Use a exponential windows function where the smoothed output \\(s_t\\) is computed by the formulas:</p> \\[ \\begin{align*} s_0 &amp;= x_0 \\\\ s_t &amp;= \\alpha x_t + (1-\\alpha) s_{t-1}, \\ t&gt;0 \\end{align*} \\] <p>where \\(\\alpha\\) is the smoothing factor, and \\(0 &lt; \\alpha &lt; 1\\).</p> <p>\\(s_t\\) can be also written as</p> \\[ s_t = \\alpha \\left( \\sum_{i=1}^t{(1-\\alpha)^{t-i}x_i} \\right) + (1 - \\alpha)^t x_0 \\] <p>This is also known as an \"exponentially weighted moving average (EWMA).\"</p>"},{"location":"Notes/201911210000_exponential_smoothing/#convergence-analysis","title":"Convergence Analysis","text":"<p>Let \\(x_t\\) be a step function of magnitude \\(A\\) where</p> \\[ \\begin{align*} x_t = \\left\\{     \\begin{array}{cc}         0 &amp; \\mbox{if} \\ t = 0 \\\\         A &amp; \\mbox{if} \\ t &gt; 0     \\end{array} \\right. \\end{align*} \\] <p>Then \\(s_t\\) will be</p> \\[ \\begin{align*} s_t &amp;= \\alpha \\left( \\sum_{i=1}^t{(1-\\alpha)^{t-i} A } \\right) + (1 - \\alpha)^t \\cdot 0 \\\\     &amp;= \\alpha A \\frac{1 - (1-\\alpha)^t}{1 - (1 - \\alpha)} \\end{align*} \\] <p>So the time for \\(s_t\\) to converge to \\(s_t = qA\\) for some \\(0 &lt; q &lt; 1\\) is</p> \\[ t = \\frac{ \\log(1-q) }{ \\log(1-\\alpha) } \\] <p>And by choosing \\(q = 1 - \\frac{1}{e}\\), we can obtain the time constant \\(\\tau\\) for the basic exponential smoothing:</p> \\[ \\tau = - \\frac{\\log{e}}{\\log(1-\\alpha)} \\]"},{"location":"Notes/201911210000_exponential_smoothing/#biased-toward-x_0","title":"Biased Toward \\(x_0\\)","text":"<p>To improve stability, \\(\\alpha\\) is usually set to a smaller number (like 0.05). This makes the weighting of \\(x_0\\) significantly larger than the rest of \\(x_t\\) when \\(t\\) is small, for all \\(x_t\\) except \\(x_0\\) are scaled by \\(\\alpha\\).</p>"},{"location":"Notes/201911210000_exponential_smoothing/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Exponential_smoothing </li> </ul>"},{"location":"Notes/202001202053_Levenshtein_Distance/","title":"Levenshtein Distance (Edit Distance)","text":"<p>Q:\u00a0Given two strings str1 and str2 and below operations that can be performed on str1. Find minimum number of operations required to convert str1\u00a0into str2. \u00a0\u00a0 \u00a01. Insert \u00a0\u00a0 \u00a02. Remove \u00a0\u00a0 \u00a03. Replace</p> <p>All of the above operations are of cost=1.</p> <p>A: This is the \"Levenshtein distance\" between str1 and str2. The algorithm to compute the Levenshtein distance is as follows (dynamic programming):</p> <ol> <li>Let the length of str1 and str2 be M and N, respectively.\u00a0</li> <li>Create a (M+1)x(N+1) array Dist\u00a0to track the edit distance. In the programming language where the array index starts with 0, we define <code>Dist[m][n]</code> as the\u00a0Levenshtein distance between the following two strings<ol> <li><code>[null, str1[0], str1[1], ... str1[m-1]]</code></li> <li><code>[null, str2[0], str2[1], ... str2[n-1]]</code></li> </ol> </li> <li>Example: let str1 = 'def' and str2 = 'abcdef', then the (3+1)x(6+1) array will be created to represent the following</li> </ol> null a b c d e f null d e f <ol> <li>Compute the <code>Dist[0]</code> row by the following rule:<ol> <li><code>Dist[0][0] = 0</code></li> <li><code>Dist[0][n] =\u00a0Dist[0][n-1] + 1</code> for all 0 &lt; n &lt; N+1</li> </ol> </li> <li>Compute the <code>Dist[m]</code> row for m&gt;0 by the following rule:<ol> <li>For n=0, set <code>Dist[m][0] = Dist[m-1][0] + 1</code></li> <li>For n&gt;0, do the following<ol> <li>Compute C by the following rule:<ol> <li>If <code>str1[m-1] == str2[n-1]</code>, then C = 0</li> <li>Otherwise, C = 1</li> </ol> </li> <li>Set <code>Dist[m][n]</code> to the minimum of the following 3:<ol> <li><code>Dist[m-1][n] + 1</code></li> <li><code>Dist[m][n-1] + 1</code></li> <li><code>Dist[m-1][n-1] + C</code></li> </ol> </li> </ol> </li> </ol> </li> <li>Return <code>Dist[M][N]</code> as the answer</li> </ol> <p>Explanation</p> <ul> <li><code>Dist[0][0]</code> is essentially the cost of modifying <code>[null]</code> to <code>[null]</code>. So the cost is 0</li> <li><code>Dist[0][1]</code> is the cost of modifying <code>[null]</code> to <code>[null, a]</code>. So the cost is <code>Dist[0][0]</code> + \"insert operation cost\"<ul> <li>Same idea applies to all <code>Dist[0][n]</code> for n&gt;0</li> </ul> </li> <li><code>Dist[1][0]</code> is the cost of modifying <code>[null, d]</code> to <code>[null]</code>. So the cost is <code>Dist[0][0]</code> + \"remove\u00a0operation cost\"\u00a0<ul> <li>Same idea applies to all <code>Dist[m][0]</code> for n&gt;0</li> </ul> </li> <li>Now to compute <code>Dist[m][n]</code> for any m&gt;0 and n&gt;0, it will be the minimum cost of the 3 possible approaches:<ul> <li>Remove <code>str1[m-1]</code>, and edit <code>str1[0...m-2]</code> to <code>str2[n-1]</code> (total cost = 1 + <code>Dist[m-1][n]</code>)</li> <li>Edit <code>str1[0...m-1]</code> to <code>str2[n-2]</code>, and insert <code>str2[n-1]</code> at the end (total cost = <code>Dist[m][n-1] + 1</code>)</li> <li>Edit <code>str1[0...m-2]</code> to <code>str2[n-2]</code>, and then replace <code>str1[m-1]</code> with <code>str2[n-1]</code> (total cost = <code>Dist[m-1][n-1] + C</code>)<ul> <li>Note that if\u00a0<code>str1[m-1] == str2[n-1]</code>, then no \"replace\" operation is required, and C will be 0.</li> </ul> </li> </ul> </li> <li>The above 3 possible approaches can be illustrated as the following 2x2 array:</li> </ul> Replace/Copy Remove Insert <code>D[m][n]</code>"},{"location":"Notes/202001202053_Levenshtein_Distance/#reference","title":"Reference","text":"<ul> <li>https://practice.geeksforgeeks.org/problems/edit-distance/0</li> <li>https://en.wikipedia.org/wiki/Levenshtein_distance</li> <li>https://people.cs.pitt.edu/~kirk/cs1501/Pruhs/Spring2006/assignments/editdistance/Levenshtein%20Distance.htm</li> </ul>"},{"location":"Notes/202003030000_window_wifi_certificate/","title":"Update Certificate to Resolve Wifi Connection Problem","text":""},{"location":"Notes/202003030000_window_wifi_certificate/#context","title":"Context","text":"<p>After installing a new version of Windows, the laptop can no longer connect to the company Wifi. When attempting to connect to the company wifi, it fails with the following error message:</p> <pre><code>can't connect because you need a certificate to sign in. Contact your IT support person\n</code></pre> <p>The laptop in question is domain-joined.</p>"},{"location":"Notes/202003030000_window_wifi_certificate/#problem","title":"Problem","text":"<p>How to resolve the wifi connection problem?</p>"},{"location":"Notes/202003030000_window_wifi_certificate/#solution","title":"Solution","text":"<p>Run the following command to force update the group policy:</p> <pre><code>cmd /k gpupdate /force\n</code></pre>"},{"location":"Notes/202007160000_python_run_conemu_to_start_cmd/","title":"Use Python to run ConEmu to start a new CMD window","text":"<p>Sample:</p> <pre><code>import subprocess\n\ncmd_to_execute = 'c1.bat &amp; c2.bat &amp; c3.bat'\nroot_path = 'C:/Temp'\n\nmy_cmd = [\n\u00a0\u00a0\u00a0\u00a0'start',\n\u00a0\u00a0\u00a0\u00a0'ConEmu64.exe',\n\u00a0\u00a0\u00a0\u00a0'-single',\n\u00a0\u00a0\u00a0\u00a0'-Dir', root_path,\n\u00a0\u00a0\u00a0\u00a0'-run', 'cmd', '/k', '%s' % (cmd_to_execute),\n\u00a0\u00a0\u00a0\u00a0'-new_console:P:&lt;Standard VGA&gt;',\n\u00a0\u00a0\u00a0\u00a0'-new_console:a'\n]\nsubprocess.run(my_cmd, shell=True)\n</code></pre>"},{"location":"Notes/202107210000_Anaconda%20Python%20Numpy%20failed%20to%20import%20C-extensions/","title":"Anaconda Python Numpy failed to import C-extensions","text":""},{"location":"Notes/202107210000_Anaconda%20Python%20Numpy%20failed%20to%20import%20C-extensions/#context","title":"Context","text":"<p>When running Anaconda Python with Numpy, the script errors out with the following message:</p> <pre><code>Importing the numpy c-extensions failed. This error can happen for\ndifferent reasons, often due to issues with your setup.\n</code></pre>"},{"location":"Notes/202107210000_Anaconda%20Python%20Numpy%20failed%20to%20import%20C-extensions/#problem","title":"Problem","text":"<p>How to resolve the problem?</p>"},{"location":"Notes/202107210000_Anaconda%20Python%20Numpy%20failed%20to%20import%20C-extensions/#solution","title":"Solution","text":"<p>Make sure the following Anaconda folders are in the <code>PATH</code> .</p> <ul> <li><code>&lt;Anaconda_Root&gt;</code></li> <li><code>&lt;Anaconda_Root&gt;/Library/bin</code></li> <li><code>&lt;Anaconda_Root&gt;/Scripts</code></li> </ul> <p>Example of <code>&lt;Anaconda_Root&gt;</code> : <code>%USERPROFILE%\\Anaconda3</code></p>"},{"location":"Notes/202107210000_Anaconda%20Python%20Numpy%20failed%20to%20import%20C-extensions/#related","title":"Related","text":"<ul> <li>201908130001_conda update fails with an error related to SSL module is not available</li> </ul>"},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/","title":"Running CMD.exe shows \"The system cannot find the path specified\" in the beginning","text":""},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/#context","title":"Context","text":"<p>When starting a new command line window in Windows, it always shows the following error:</p> <pre><code>The system cannot find the path specified\n</code></pre>"},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/#problem","title":"Problem","text":"<p>How to resolve the error?</p>"},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/#solution","title":"Solution","text":"<p>Open the registry editor (<code>regedit.exe</code>) and find the following keys:</p> <ul> <li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\AutoRun</code></li> <li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\AutoRun</code></li> </ul> <p>If their values are not empty, check if they point to some files that no longer exist.</p>"},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/#note","title":"Note","text":"<ul> <li>Some version of Anaconda puts its <code>conda_hook.bat</code> under the mentioned <code>AutoRun</code> reg key value. When Anaconda is uninstalled, the reg key is not cleared properly and causes the error.</li> <li>Running <code>FOR /F [\"options\"] %variable IN ('command1') DO command2</code> will invoke a CMD to run <code>command1</code>, hence showing the error in the result.</li> </ul>"},{"location":"Notes/202107210000_cmd_shows_cannot_find_the_path_specified/#reference","title":"Reference","text":"<ul> <li>https://superuser.com/questions/727316/error-in-command-line-the-system-cannot-find-the-path-specified</li> </ul>"},{"location":"Notes/202201240000_Python%20subprocess%20returns%20error%20code%203221226505/","title":"Python subprocess.run() returns error code 3221226505","text":""},{"location":"Notes/202201240000_Python%20subprocess%20returns%20error%20code%203221226505/#context","title":"Context","text":"<p>Implemented <code>test.py</code> with the following code:</p> <pre><code>from pathlib import Path\nimport subprocess\n\ndef run_test():\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 \"\"\"\n\u00a0 \u00a0 some_exe = Path('path/to/some/exe/file.exe')\n\u00a0 \u00a0 arg1 = 'some_arg'\n\u00a0 \u00a0 some_tag = 'something_something'\n\u00a0 \u00a0 arg2 = f'some_more_arg_{some_tag}_\"someString\"'\n\n\u00a0 \u00a0 some_cmd = [ str(some_exe), arg1, arg2 ]\n\u00a0 \u00a0 print(\" \".join(some_cmd))\n\u00a0 \u00a0 results = subprocess.run(some_cmd)\n\u00a0 \u00a0 if(0 != results.returncode):\n\u00a0 \u00a0 \u00a0 \u00a0 print(f\"error code: {results.returncode:d}\")\n\nif \"__main__\" == __name__:\n\u00a0 \u00a0 run_test()\n</code></pre> <p>When running the code with python (<code>python test.py</code>), <code>subprocess.run()</code> returns a Windows error code 3221226505. However, running the commands printed by <code>print(\" \".join(some_cmd))</code> succeeded without error.</p>"},{"location":"Notes/202201240000_Python%20subprocess%20returns%20error%20code%203221226505/#problem","title":"Problem","text":"<p>How to run the command with Python without error?</p>"},{"location":"Notes/202201240000_Python%20subprocess%20returns%20error%20code%203221226505/#solution","title":"Solution","text":"<p>Remove the double quote (\") in <code>arg2</code>:</p> <pre><code>arg2 = f'some_more_arg_{some_tag}_someString'\n</code></pre>"},{"location":"Notes/202201240000_Python%20subprocess%20returns%20error%20code%203221226505/#note","title":"Note","text":"<p>It's still unclear to me what's going on here, but it looks like the problem of the executable not able to properly handle the double quotes in the arguments.</p>"},{"location":"Notes/202201270000__ONNXRuntimeError_%20_%2010%20_%20INVALID_GRAPH/","title":"[ONNXRuntimeError] : 10 : INVALID_GRAPH","text":""},{"location":"Notes/202201270000__ONNXRuntimeError_%20_%2010%20_%20INVALID_GRAPH/#context","title":"CONTEXT","text":"<p>When running a Python script with onnxruntime, the following error occurred:</p> <pre><code>Failed with exception '[ONNXRuntimeError] : 10 : INVALID_GRAPH : This is an invalid model. Error in Node:Transpose_0 : No Op registered for Transpose with domain_version of 12'\n</code></pre>"},{"location":"Notes/202201270000__ONNXRuntimeError_%20_%2010%20_%20INVALID_GRAPH/#problem","title":"PROBLEM","text":"<p>How to resolve the error</p>"},{"location":"Notes/202201270000__ONNXRuntimeError_%20_%2010%20_%20INVALID_GRAPH/#solution","title":"SOLUTION","text":"<p>Update the onnxruntime package by running the following command:</p> <pre><code>pip install onnxruntime --upgrade\n</code></pre>"},{"location":"Notes/202201270000__ONNXRuntimeError_%20_%2010%20_%20INVALID_GRAPH/#note","title":"NOTE","text":"<p>The error seems to indicate that the model is using some operators in the newer version of onnxruntime that is not supported by the installed version. Upgrading the onnxruntime on the local machine seems to resolve the problem.</p>"},{"location":"Notes/202201270000_vtune_quick_notes/","title":"VTune Quick notes","text":""},{"location":"Notes/202201270000_vtune_quick_notes/#profiling-the-cpu-usage","title":"Profiling the CPU usage","text":"<p>To profile the command <code>MyProg.exe arg1 arg2 arg3</code>:</p> <pre><code>vtune.exe -collect hotspots -result-dir path/to/profile/dir -search-dir path/to/symbol/dir1 -search-dir path/to/symbol/dir2 -- MyProg.exe arg1 arg2 arg3\n</code></pre> <p>To generate a report CSV file <code>MyReport.csv</code>\u00a0 from the profiling result:</p> <pre><code>vtune.exe -report hotspots -result-dir path/to/profile/dir -group-by module,function -report-output MyReport.csv -format csv -csv-delimiter comma\n</code></pre>"},{"location":"Notes/202201270000_vtune_quick_notes/#analyzing-memory-access-analyzing-l2-cache-misses","title":"Analyzing memory access (analyzing L2 cache misses)","text":"<p>To profile the command <code>MyProg.exe arg1 arg2 arg3</code>:</p> <pre><code>vtune.exe -collect memory-access -result-dir path/to/profile/dir -search-dir path/to/symbol/dir1 -search-dir path/to/symbol/dir2 -- MyProg.exe arg1 arg2 arg3\n</code></pre> <p>To generate a report CSV file <code>MyReport.csv</code>\u00a0 from the profiling result:</p> <pre><code>vtune.exe -report hotspots -result-dir path/to/profile/dir -group-by module,function -report-output MyReport.csv -format csv -csv-delimiter comma\n</code></pre>"},{"location":"Notes/202203022053_Python_Regular_Expression/","title":"Python Regular Expression","text":""},{"location":"Notes/202203022053_Python_Regular_Expression/#basics","title":"Basics","text":"<p>Python's regular expression is based on extended Regular Expression</p> <p>The basic usage:</p> <pre><code>import re\npattern = r\"abc(\\w)efg\"\nin_string = r\"abcdefg\"\nm = re.search(pattern, in_string)\nif (m):\n    print(m.group(0)) # prints \"abcdefg\"\n    print(m.group(1)) # prints \"d\"\n</code></pre>"},{"location":"Notes/202203022053_Python_Regular_Expression/#greedy-vs-non-greedy","title":"Greedy vs non-greedy","text":"<p><code>+</code>, <code>*</code>, <code>?</code>, and <code>{m,n}</code> are greedy in the sense that it tries to match as much text as possible.</p> <p><code>+?</code>, <code>*?</code>, <code>??</code>, and <code>{m,n}?</code> are non-greedy in the sense that it tries to match as little text as possible.</p> <p>Example 1: <pre><code>import re\n\ns1 = 'aaa'\np11 = r'(a?)a*'\np12 = r'(a??)a*'\n\n# m11.group(1) = 'a' \n# RE tries to be greedy with 'a?' and found a match\nm11 = re.search(p11, s1) \n\n# m12.group(1) = ''  \n# RE tries to be non-greedy with 'a??' and found a match\nm12 = re.search(p12, s1) \n\ns2 = 'abb'\np21 = r'(a?)b*'\np22 = r'(a??)b*'\np23 = r'(a??)b+'\n\n# m21.group(1) = 'a'\n# RE tries to be greedy with 'a?' and found a match\nm21 = re.search(p21, s2) \n\n# m22.group(1) = ''  \n# RE tries to be non-greedy with 'a??' and found a match: \n# it can match 0 'a' and 0 'b'\nm22 = re.search(p22, s2) \n\n# m23.group(1) = 'a'\n# RE tries to be non-greedy with 'a??' but found no match. \n# Then it tries to consume 1 'a' and found a match\nm23 = re.search(p23, s2) \n</code></pre></p> <p>Example 2: <pre><code>my_string = '&lt;body&gt;Something something&lt;/body&gt;'\npattern1 = r'&lt;.+&gt;'\npattern2 = r'&lt;.+?&gt;'\n\n# m1.group(1) = '&lt;body&gt;Something something&lt;/body&gt;'\nm1 = re.search(pattern1, my_string) \n\n# m2.group(1) = '&lt;body&gt;'\nm2 = re.search(pattern2, my_string) \n</code></pre></p>"},{"location":"Notes/202203022053_Python_Regular_Expression/#lookahead-and-lookbehind-assertions","title":"Lookahead and lookbehind assertions","text":"<p><code>(?=...)</code>:  Match <code>abc</code> if it is followed by <code>def</code> (lookahead assertion) <pre><code>pattern = r\"abc(?=def)\"\nin1 = \"abcdef\"\nin2 = \"abcxyz\"\nm1 = re.search(pattern, in1)\nif(m1):\n    # m1.group(0) is 'abc'. The lookahead pattern (def) is not consumed.\n    print(m1.group(0)) \n\nm2 = re.search(pattern, in2)\nif(m2):\n    # no match for in2\n    print(m2.group(0)) \n</code></pre></p> <p><code>(?!...)</code>: Match <code>abc</code> if it is NOT followed by <code>def</code> (negative lookahead assertion) <pre><code>pattern = r\"abc(?!def)\n</code></pre></p> <p><code>(?&lt;=...)</code>: Match <code>def</code> if it is preceded by <code>abc</code> (lookbehind assertion) <pre><code>pattern = r\"(?&lt;=abc)def\"\n</code></pre></p> <p><code>(?&lt;!...)</code>: Match <code>def</code> if it is NOT preceded by <code>abc</code> (negative lookbehind assertion) <pre><code>pattern = r\"(?&lt;!abc)def\"\n</code></pre></p>"},{"location":"Notes/202203022053_Python_Regular_Expression/#named-groups","title":"Named groups","text":"<p><code>(?P&lt;XYZ&gt;)</code>: Define a named group whose name is <code>XYZ</code>.</p> <p><code>(?P=XYZ)</code>: Backreference to the named group <code>XYZ</code> in the same pattern</p> <pre><code>pattern = r'(?P&lt;SomeWord&gt;\\w+) \\w+ (?P=SomeWord)'\nsentence = 'day by day'\nm = re.search(pattern, sentence)\nif (m):\n    some_word = m.group('SomeWord')\n</code></pre>"},{"location":"Notes/202203022053_Python_Regular_Expression/#non-capturing-groups","title":"Non-capturing groups","text":"<p><code>(?:...)</code>: Define a non-capturing group.</p>"},{"location":"Notes/202203022053_Python_Regular_Expression/#reference","title":"Reference","text":"<ul> <li>https://docs.python.org/3/library/re.html</li> </ul>"},{"location":"Notes/202203022055_Regular_Expression/","title":"Regular Expression","text":"<p>There are two sets of regular expression rules:</p> <ul> <li>Basic Regular Expression (BRE)</li> <li>Extended Regular Expression (ERE)</li> </ul> BRE ERE Escape the next character \\ \\ Match any single character except newline . . Bracket expresion [] [] Grouping \\(\\) () Alternation \\| | Match 0 or more times * * Match 1 or more times \\{1,\\} + Match 1 or 0 times \\{0,1\\} ? Match exactly m times \\{m\\} {m} Match at least m but no more than n times \\{m,n\\} {m,n} Match the beginning of the string (when not in []) ^ ^ Match the end of the string (when not in []) $ $ <p>The modern applications implement ERE unless explicitly specified (like Linux command grep)</p> <p>Many applications also implement the following features on top of the above rules:</p> <ul> <li>Greedy vs non-greedy match (Python)</li> <li>Special sequences such as <code>\\d</code> and <code>\\w</code></li> <li>Flags/modifiers to change the matching behavior (e.g. ASCII-only matching or ignore case)</li> <li>Non-capturing group, named group (Python)</li> <li>Lookahead assertion, negative lookahead assertion (Python)</li> <li>Lookbehind assertion, negative lookbehind assertion (Python)</li> <li>Conditioned pattern (<code>(?(condition)yes-pattern|no-pattern)</code>)</li> </ul>"},{"location":"Notes/202203022055_Regular_Expression/#reference","title":"Reference","text":"<ul> <li>https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html</li> <li>Python's regular expression</li> <li>Perl's regular expression</li> <li>Vim's regular expression</li> <li>Visual Studio's regular expression</li> </ul>"},{"location":"Notes/202203131414_Kalman_Filter/","title":"Kalman Filter","text":""},{"location":"Notes/202203131414_Kalman_Filter/#context","title":"Context","text":"<p>Given a system that contains \\(N\\) unknown states, whose values at time \\(k\\) are denoted as</p> \\[ \\mathbf{x}_k \\in \\mathbb{R}^N \\] <p>We want to know the values of \\(\\mathbf{x}_k\\), but we were unable to directly observe \\(\\mathbf{x}_k\\). What we have is a noisy observation \\(\\mathbf{z}_k \\in \\mathbb{R}^N\\) for any time \\(k\\). </p> <p>Assume that we can model the transition of the unknown states \\(\\mathbf{x}_k\\) over time based on the following equation (known as the process equation):</p> \\[ \\mathbf{x}_k = \\mathbf{F}_k\\mathbf{x}_{k-1} + \\mathbf{B}_k\\mathbf{u}_k + \\mathbf{w}_k \\] <p>where</p> <ul> <li>\\(\\mathbf{F}_k \\in \\mathbb{R}^{N \\times N}\\) is the state transition model which is applied to the previous state \\(\\mathbf{x}_{k-1}\\)</li> <li>\\(\\mathbf{B}_k \\in \\mathbb{R}^{N \\times L}\\) is the control-input model which is applied to the control vector \\(\\mathbf{u}_k\\)</li> <li>\\(\\mathbf{u}_k \\in \\mathbb{R}^L\\) is the control input to the system</li> <li>\\(\\mathbf{w}_k \\in \\mathbb{R}^N\\) is the process noise which is assumed to be drawn from a zero mean multivariate normal distribution with covariance \\(\\mathbf{Q}_k\\): \\(\\mathbf{w}_k \\sim \\mathcal {N} \\left(0,\\mathbf{Q}_{k}\\right)\\)</li> </ul> <p>Also, assume that we can model the observation \\(\\mathbf{z}_k\\) of the true state \\(\\mathbf{x}_k\\) based on following equation (known as the measurement equation or observation equation):</p> \\[ \\mathbf{z}_k = \\mathbf{H}_k \\mathbf{x}_k + \\mathbf{v}_k \\] <p>where</p> <ul> <li>\\(\\mathbf{H}_k \\in \\mathbb{R}^{N \\times N}\\) is the observation model which maps the true state space into the observed space</li> <li>\\(\\mathbf{v}_k \\in \\mathbb{R}^N\\) is the observation noise which is assumed to be drawn from a zero mean multivariate normal distribution with covariance \\(\\mathbf{R}_k\\): \\(\\mathbf{v}_k \\sim \\mathcal {N} \\left(0,\\mathbf{R}_{k}\\right)\\)</li> </ul> <p>We want to have a good estimate of \\(\\mathbf{x}_k\\) based on the history of the observations \\(\\mathbf{z}_0, \\mathbf{z}_1, \\cdots, \\mathbf{z}_k\\)</p>"},{"location":"Notes/202203131414_Kalman_Filter/#problem","title":"Problem","text":"<p>Given that we know all of \\(\\mathbf{F}_k\\), \\(\\mathbf{B}_k\\), \\(\\mathbf{u}_k\\), \\(\\mathbf{Q}_k\\), \\(\\mathbf{H}_k\\), and \\(\\mathbf{R}_k\\), how to make a good estimate of \\(\\mathbf{x}_k\\) based on the history of the observations \\(\\mathbf{z}_0, \\mathbf{z}_1, \\cdots, \\mathbf{z}_k\\)?</p>"},{"location":"Notes/202203131414_Kalman_Filter/#solution","title":"Solution","text":"<p>Define the following variables:</p> <ul> <li>\\(\\hat{\\mathbf{x}}_{k|k} \\in \\mathbb{R}^N\\), the a posteriori state estimate at time \\(k\\) given observations up to and including at time \\(k\\)</li> <li>\\(\\mathbf{P}_{k|k} \\in \\mathbb{R}^{N \\times N}\\), the a posteriori error covariance matrix</li> <li>This can be considered a measure of the estimated accuracy of the state estimate.</li> </ul> <p>The objective is to compute \\(\\hat{\\mathbf{x}}_{k|k}\\) that minimize the residual error (\\(\\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k}\\)) by going through the following steps:</p> <ol> <li>Empirically specify the initial state \\(\\hat{\\mathbf{x}}_{0|0}\\) and \\(\\mathbf{P}_{0|0}\\)</li> <li>Repeat the following two steps for k = 1, 2, 3, ...</li> <li>Do the \"predict\" step (computing \\(\\hat{\\mathbf{x}}_{k|k-1}\\) and \\(\\mathbf{P}_{k|k-1}\\))</li> <li>Do the \"update\" step (computing \\(\\tilde{\\mathbf{y}}_k\\), \\(\\mathbf{S}_k\\), \\(\\mathbf{K}_k\\), \\(\\mathbf{S}_k\\), \\(\\hat{\\mathbf{x}}_{k|k}\\), \\(\\mathbf{P}_{k|k}\\), \\(\\tilde{\\mathbf{y}}_{k|k}\\))</li> </ol>"},{"location":"Notes/202203131414_Kalman_Filter/#initialization","title":"Initialization","text":"<p>The initial state is typically chosen as follows:</p> \\[ \\begin{align} \\hat{\\mathbf{x}}_{0|0} &amp;= \\operatorname{E} \\left( \\mathbf{x}_0 \\right) \\\\ \\mathbf{P}_{0|0} &amp;= \\operatorname{E} \\left[ (\\mathbf{x}_0 - \\hat{\\mathbf{x}}_{0|0})(\\mathbf{x}_0 - \\hat{\\mathbf{x}}_{0|0})^T \\right] \\end{align} \\]"},{"location":"Notes/202203131414_Kalman_Filter/#the-predict-phase","title":"The \"Predict\" Phase","text":"<p>The predict phase computes the followings:</p> \\[ \\begin{align} \\hat{\\mathbf{x}}_{k|k-1} &amp;= \\mathbf{F}_k\\hat{\\mathbf{x}}_{k-1|k-1}+\\mathbf{B}_k\\mathbf{u}_k \\\\ \\mathbf{P}_{k|k-1} &amp;= \\mathbf{F}_k \\mathbf{P}_{k-1|k-1} \\mathbf{F}_k^T+\\mathbf{Q}_k \\end{align} \\]"},{"location":"Notes/202203131414_Kalman_Filter/#the-update-phase","title":"The \"Update\" Phase","text":"<p>The update phase computes the followings:</p> \\[ \\begin{align} \\tilde{\\mathbf{y}}_k &amp;= \\mathbf{z}_k - \\mathbf{H}_k \\hat{\\mathbf{x}}_{k|k-1} \\\\ \\mathbf{S}_k &amp;= \\mathbf{H}_k \\mathbf{P}_{k|k-1} \\mathbf{H}_k^T + \\mathbf{R}_k \\\\ \\mathbf{K}_k &amp;= \\mathbf{P}_{k|k-1}  \\mathbf{H}_k^T  \\mathbf{S}_k^{-1} \\\\ \\hat{\\mathbf{x}}_{k|k} &amp;= \\hat{\\mathbf{x}}_{k|k-1} + \\mathbf{K}_k \\tilde{\\mathbf{y}}_k \\\\ \\mathbf{P}_{k|k} &amp;= \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k  \\right) \\mathbf{P}_{k|k-1} \\\\ \\tilde{\\mathbf{y}}_{k|k} &amp;= \\mathbf{z}_k - \\mathbf{H}_k  \\hat{\\mathbf{x}}_{k|k} \\end{align} \\] <p>where</p> <ul> <li>\\(\\tilde{\\mathbf{y}}_k\\) is the measurement pre-fit residual</li> <li>\\(\\mathbf{S}_k\\) is the pre-fit residual covariance</li> <li>\\(\\mathbf{K}_k\\) is the optimal Kalman gain</li> <li>\\(\\hat{\\mathbf{x}}_{k|k}\\) is the a posteriori state estimate</li> <li>\\(\\mathbf{P}_{k|k}\\) is the a posteriori estimate covariance</li> <li>\\(\\tilde{\\mathbf{y}}_{k|k}\\) is the measurement post-fit residual</li> </ul>"},{"location":"Notes/202203131414_Kalman_Filter/#notes","title":"Notes","text":""},{"location":"Notes/202203131414_Kalman_Filter/#estimation-of-the-noise-covariances","title":"Estimation of the noise covariances","text":"<p>If the noise covariances \\(\\mathbf{Q}_k\\) and \\(\\mathbf{R}_k\\) is not known, one practical approach is to use autocovariance least-squares (ALS) technique to estimate them.</p>"},{"location":"Notes/202203131414_Kalman_Filter/#kalman-filer-is-a-mmse-estimator","title":"Kalman filer is a MMSE estimator","text":"<p>The Kalman filter is a MMSE estimator that minimizes the error \\(\\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k}\\) under the following assumptions:</p> <ol> <li>The models (\\(\\mathbf{x}_k\\) and \\(\\mathbf{z}_k\\)) are accurate</li> <li>The values for \\(\\hat{ \\mathbf{x} }_{0|0}\\) and \\(\\mathbf{P}_{0|0}\\) accurately reflect the distribution of the initial state values</li> <li>The measurement error \\(\\mathbf{v}_k\\), the process noise \\(\\mathbf{w}_k\\), and the initial state \\(\\mathbf{x}_{0|0}\\) are mutually independent,</li> </ol> <p>To prove it, we first derive the error covariance \\(\\mathbf{P}_{k|k}\\) from its definition:</p> \\[ \\mathbf{P}_{k|k} = \\operatorname{cov} \\left( \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k} \\right) \\] <p>substitue in the definition of \\(\\hat{\\mathbf{x}}_{k|k}\\), \\(\\tilde{\\mathbf{y}}_k\\), and \\(\\mathbf{z}_k\\), we get</p> \\[ \\begin{align} \\mathbf{P}_{k|k} &amp;= \\operatorname{cov}  \\left(      \\mathbf{x}_k -      \\left[          \\hat{\\mathbf{x}}_{k|k-1} + \\mathbf{K}_k          \\left(              \\mathbf{H}_k \\mathbf{x}_k +              \\mathbf{v}_k  -              \\mathbf{H}_k \\hat{\\mathbf{x}}_{k|k-1}         \\right)     \\right] \\right)\\\\ &amp;= \\operatorname{cov}  \\left[     \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right)      \\left( \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k-1} \\right) -      \\mathbf{K}_k \\mathbf{v}_k \\right] \\end{align} \\] <p>With the assumption of the mutually independent \\(\\mathbf{v}_k\\), \\(\\mathbf{w}_k\\), and \\(\\mathbf{x}_{0|0}\\), we get</p> \\[ \\begin{align} \\mathbf{P}_{k|k} &amp;= \\operatorname{cov}  \\left[      \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right)      \\left( \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k-1} \\right) \\right] +  \\operatorname{cov} \\left[  \\mathbf{K}_k \\mathbf{v}_k \\right] \\\\ &amp;= \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right) \\operatorname{cov} \\left( \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k-1} \\right)  \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right)^T +  \\mathbf{K}_k \\operatorname{cov} \\left( \\mathbf{v}_k \\right) \\mathbf{K}_k^T \\end{align} \\] <p>By definition,</p> \\[ \\begin{align} \\mathbf{P}_{k|k-1} &amp;= \\operatorname{cov} \\left( \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k-1} \\right) \\\\ \\mathbf{R}_k &amp; = \\operatorname{cov} \\left( \\mathbf{v}_k \\right) \\end{align} \\] <p>therefore we get</p> \\[ \\begin{align} \\mathbf{P}_{k|k} &amp;=  \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right) \\mathbf{P}_{k|k-1} \\left( \\mathbf{I} - \\mathbf{K}_k \\mathbf{H}_k \\right)^T +  \\mathbf{K}_k \\mathbf{R}_k \\mathbf{K}_k^T \\\\ &amp;= \\mathbf{P}_{k|k-1} -  \\mathbf{K}_k \\mathbf{H}_k \\mathbf{P}_{k|k-1} -  \\mathbf{P}_{k|k-1}\\mathbf{H}^T_k \\mathbf{K}^T_k +  \\mathbf{K}_k \\left( \\mathbf{H}_k \\mathbf{P}_{k|k-1} \\mathbf{H}^T_k + \\mathbf{R}_k \\right) \\mathbf{K}^T_k \\\\ &amp;= \\mathbf{P}_{k|k-1} -  \\mathbf{K}_k \\mathbf{H}_k \\mathbf{P}_{k|k-1} -  \\mathbf{P}_{k|k-1}\\mathbf{H}^T_k \\mathbf{K}^T_k +  \\mathbf{K}_k \\mathbf{S}_k \\mathbf{K}^T_k \\end{align} \\] <p>Also, by definition:</p> \\[ \\operatorname{tr} \\left( \\mathbf{P}_{k|k} \\right) = E \\left[ || \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k} ||^2  \\right] \\] <p>Therefore, to miminze \\(E \\left[ || \\mathbf{x}_k - \\hat{\\mathbf{x}}_{k|k} ||^2 \\right]\\), we want to solve the following equation:</p> \\[ \\frac{ \\partial \\; \\operatorname{tr} (\\mathbf{P} _{k|k})}{\\partial \\;\\mathbf{K}_k} = -2 \\left( \\mathbf{H}_k \\mathbf{P}_{k|k-1} \\right)^T +  2 \\mathbf{K}_k \\mathbf{S}_k = 0 \\] <p>which yields</p> \\[ \\mathbf{K}_k = \\mathbf{P}_{k|k-1} \\mathbf{H}^T_k \\mathbf{S}^{-1}_k \\]"},{"location":"Notes/202203131414_Kalman_Filter/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Kalman filter</li> <li>D. Simon, Kalman filtering with state constraints: a survey of linear and nonlinear algorithms</li> </ul>"},{"location":"Notes/202204022204_port%20notes%20from%20Evernote%20to%20Obsidian/","title":"Port Notes from Evernote to Obsidian","text":""},{"location":"Notes/202204022204_port%20notes%20from%20Evernote%20to%20Obsidian/#prerequisite","title":"Prerequisite","text":"<ol> <li>Download and install Node.js<ol> <li>Because we will need to run <code>npx</code> later</li> </ol> </li> </ol>"},{"location":"Notes/202204022204_port%20notes%20from%20Evernote%20to%20Obsidian/#steps","title":"Steps","text":"<ol> <li>Create a config JSON file with the content shown in the #Sample config JSON File section. Then modify the following fields as needed:<ol> <li>\"enexSources\"</li> <li>\"outputDir\"</li> </ol> </li> <li> <p>Run the following command:</p> <pre><code>npx -p yarle-evernote-to-md@latest yarle --configFile &lt;path_to_the_config.json&gt;\n</code></pre> </li> </ol> <p>Note: * While the value of <code>enexSources</code> appears to be a list, <code>yarle</code> seems to work only if there is only one element in the list.</p>"},{"location":"Notes/202204022204_port%20notes%20from%20Evernote%20to%20Obsidian/#sample-config-json-file","title":"Sample Config JSON File","text":"<pre><code>{\n    \"enexSources\": [\n       \"C:\\\\Temp\\\\Some_Exported_Notebook.enex\"\n       ],\n    \"outputDir\": \"C:\\\\Some\\\\Path\\\\To\\\\Obsidian\\\\Vault\\\\Folder\",\n    \"isZettelkastenNeeded\": true,\n    \"plainTextNotesOnly\": false,\n    \"skipWebClips\": false,\n    \"useHashTags\": true,\n    \"outputFormat\": \"ObsidianMD\",\n    \"urlEncodeFileNamesAndLinks\": false,\n    \"skipEnexFileNameFromOutputPath\": false,\n    \"monospaceIsCodeBlock\": false,\n    \"keepMDCharactersOfENNotes\": false,\n    \"keepOriginalAmountOfNewlines\": false,\n    \"addExtensionToInternalLinks\": true,\n    \"nestedTags\": {\n      \"separatorInEN\": \"_\",\n      \"replaceSeparatorWith\": \"/\",\n      \"replaceSpaceWith\": \"-\"\n   },\n   \"resourcesDir\": \"resources\",\n   \"turndownOptions\": {\n      \"headingStyle\": \"atx\"\n   },\n   \"dateFormat\": \"YYYY-MM-DD\",\n   \"haveEnexLevelResources\": true,\n   \"haveGlobalResources\": false,\n    \"logseqSettings\":{\n        \"journalNotes\": false\n    },\n   \"obsidianSettings\": {\n      \"omitLinkDisplayName\": false\n    }\n\n}\n</code></pre>"},{"location":"Notes/202204022204_port%20notes%20from%20Evernote%20to%20Obsidian/#reference","title":"Reference","text":"<p>https://github.com/akosbalasko/yarle</p>"},{"location":"Notes/202204082321_Python_Quick_Reference/","title":"Python Quick Reference","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#terminologies","title":"Terminologies","text":"<p>Function v.s. Method:</p> Function Method Independent of any object Associated to an object All the parameters are passed explicitly The associated object is implicitly passed on May or may not return any data May or may not return any data <p>Example of a function</p> <pre><code># Definition\ndef print_hello_word():\n    print(\"Hello, world!\")\n\n# Usage\nprint_hello_word()\n</code></pre> <p>Example of a method (in the class \"MyClass\")</p> <pre><code># Definition\nclass MyClass:\n    def print_hello_world(self):\n        print(\"Hello, world!\")\n\n# Usage\nx = MyClass()\nx.print_hello_world()\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#operators","title":"Operators","text":"Operation Syntax Function Comments Addition a + b add(a, b) Concatenation seq1 + seq2 concat(seq1, seq2) Containment Test obj in seq contains(seq, obj) Division a / b truediv(a, b) Floor Division a // b floordiv(a, b) 13 // 5 = 2 Bitwise And a &amp; b and_(a, b) Bitwise Exclusive Or a ^ b xor(a, b) Bitwise Inversion ~ a invert(a) Bitwise Or a b or_(a, b) Exponentiation a ** b pow(a, b) Identity a is b is_(a, b) Identity a is not b is_not(a, b) Indexed Assignment obj[k] = v setitem(obj, k, v) Indexed Deletion del obj[k] delitem(obj, k) Indexing obj[k] getitem(obj, k) Left Shift a &lt;&lt; b lshift(a, b) Modulo a % b mod(a, b) Multiplication a * b mul(a, b) Negation (Arithmetic) - a neg(a) Negation (Logical) not a not_(a) Positive + a pos(a) Right Shift a &gt;&gt; b rshift(a, b) Slice Assignment seq[i:j] = values setitem(seq, slice(i, j), values) Slice Deletion del seq[i:j] delitem(seq, slice(i, j)) Slicing seq[i:j] getitem(seq, slice(i, j)) String Formatting s % obj mod(s, obj) Subtraction a - b sub(a, b) Truth Test obj truth(obj) Ordering a &lt; b lt(a, b) Ordering a &lt;= b le(a, b) Equality a == b eq(a, b) Difference a != b ne(a, b) Ordering a &gt;= b ge(a, b) Ordering a &gt; b gt(a, b) <p>Ternary condition operator:</p> <pre><code># v2.5+\nx = a if condition else b\n</code></pre> <p>The last printed expression is assigned to the variable <code>_</code></p> <pre><code>&gt;&gt;&gt; 3\n3\n&gt;&gt;&gt; 5 + _\n8\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#string","title":"String","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#string-declaration","title":"String Declaration","text":"<pre><code># Strings can be declared with either single quotes or double quotes.\ns1 = 'This is a book'\ns2 = \"This is a book\"\n\n# Strings declared with single quotes or double quotes are almost the same, except\n# how they treat the single quote or double quote within the string\ns1 = 'This isn\\'t a book'\ns2 = \"This isn't a book\"\ns3 = 'He said \"Yes\"'\ns4 = \"He said \\\"Yes\\\"\"\n\n# Strings support the commonly used special characters such as \\n (newline)\ns1 = 'Line1\\nLine2'\n\n# Multi-line string\ns1 = \"\"\"Line1\nLine2\"\"\"\n\n# Use trailing backslash to beautify the multi-line string\n# declaration without adding extra newlines\ns1 = \"\"\"\\\nLine1\nLine2\\\n\"\"\"\n\n# Format string using %-formatting\nname = \"Data.txt\"\nsize = 19.2\ns1 = \"The file name is %s and the size is %.2fMB\" % (name, size)\n\n# Format string using Formatted string literals (f-string) (v3.6+)\ns2 = f\"The file name is {name} and the size is {size:.2f}MB\"\n\n# Concatenate multiple strings across multiple lines using parenthesis\nprogram_cmd = (\"MyProg.exe\" +\n               \" --arg1 \" + Value1 +\n               \" --arg2 \" + Value2)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#string-operation","title":"String Operation","text":"<pre><code># Multiplication and concatenation\ns1 = 3 * 'un' + 'ium' # s1 = 'unununium'\n\n# Slicing\ns1 = 'abcdefg'\ns2 = s1[0:2]  # s2 = 'ab'\ns3 = s1[:2]   # s3 = 'ab'\ns4 = s1[4:]   # s4 = 'efg'\ns5 = s1[-2:]  # s5 = 'fg'\n\n# Remove trailing whitespaces and/or leading whitespaces, including newlines\ns6 = '  \\r\\n  \\r  abc def  \\n\\n  \\r\\n '\ns6.rstrip()   # remove trailing whitespaces (returns '  \\r\\n  \\r  abc def')\ns6.lstrip()   # remove leading whitespaces (returns 'abc def  \\n\\n  \\r\\n ')\ns6.strip()    # remove both leading and trailing whitespaces (returns 'abc def')\n\n# Return the string after the last slash\ns7 = 'https://en.wikipedia.org/wiki/Least_mean_squares_filter'\ns8 = s7.rsplit('/', 1)[-1]\n\n# Return the string before the first slash\ns9 = s7.split('/', 1)[0]\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#raw-string-literals","title":"Raw String Literals","text":"<pre><code># With prefix 'r', backslash will be treated as literal with only one exception:\n# to escape the quote\ns1 = r\"My \\\"Hello World!\\\" program is at C:\\Project\\HelloWorld\"\n\n# Raw string is handy when defining the regular expression patterns\nPattern = r\"int function\\((.+)\\)\"\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#list","title":"List","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#initialization","title":"Initialization","text":"<pre><code>List1 = [1, 2, 3, 4, 5]\nList2 = [\"%d\" % (x) for x in List1]\nList3 = range(1,6)       # Works only in Python 2.x (range() returns a list)\nList4 = list(range(1,6)) # Works only in Python 3.x (range() returns an iterator)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#useful-list-operations","title":"Useful List Operations","text":"<pre><code># Concatenation\nList2 = List1 + [6, 7, 8, 9]\n\n# Append\nList2.append( 10 )\n\n# Find the list size\nlen(List2)\n\n# Remove the first item whose value is x\nList2.remove(x) # raise ValueError if there is no such item\n\n# Remove the item of index n\nList2.pop(n)\n\n# Remove the last item\nList2.pop()\n\n# Clear the list\nList2[:] = []\n\n# Iterate through the list\nfor x in List2:\n    print x\n\n# Iterate through the list, with the information about the index\nfor (i, x) in enumerate(List2):\n    print i\n    print x\n\n# Iterate through multiple lists concurrently using zip();\n# stop when the shortest list reaches the end.\nfor x1,x2 in zip(List1, List2):\n    print x1, x2\n\n# Create a duplicated \"view\"\nx = [1 2 3]\ny = [x]*5    # y will be a list of 5 references to x.\n             # Note that each element in y references to the same x,\n             # so changing x will affect every entry in y\n\n# Loop through a list in batch\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nbatch_size = 3\nfor i in range(0, len(x), batch_size):\n    print(x[i:i+batch_size])\n\n# Add an item between each item already in the list\nx = [1, 2, 3, 4, 5]\ny = 'newItem'\nz = [y] * (len(x)*2-1)  # Create a list of length 2N-1 filled with the new item\nz[0::2] = x             # Fill z[2*n] with x[n]\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#nested-list","title":"Nested List","text":"<pre><code>List1 = ['a', 'b', 'c']\nList2 = [1, 2, 3]\nList3 = [List1, List2]\n\n# This returns ['a', 'b', 'c']\nList3[0]\n\n# This returns 'a'\nList3[0][0]\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#tuple","title":"Tuple","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#initialization_1","title":"Initialization","text":"<pre><code>x = (1, 2, \"text\")\nx = 1, 2, \"text\"   # Initialization by \"tuple packing\"\nx = ()             # Creating an empty tuple\nx = 1,             # Creating an singleton tuple using a trailing comma ','\nnot_a_tuple = (1)  # This won't create a tuple\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#useful-tuple-operations","title":"Useful Tuple Operations","text":"<pre><code>x[0]    # Access the first element\nx[-1]   # Access the last element\nx[1::2] # Access the all the elements from the 2nd to the end of the tuple,\n        # with a step size of 2.\n\n# Tuple unpacking: assign the elements in the tuple to individual variables.\n# The number of variables on the left hand side has to be equal to the number\n# of values in the tuple\na, b, c = x\n(a, b, c) = x\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#dictionarymaphash-table","title":"Dictionary/Map/Hash Table","text":"<p>The keys have to be of immutable type (e.g. numbers or strings, but not lists); the values can be any variable.</p> <p>If a tuple contains only immutable objects, then the tuple can be used as a key.</p>"},{"location":"Notes/202204082321_Python_Quick_Reference/#initialization_2","title":"Initialization","text":"<pre><code>MyMap = {\n    1 : \"January\",\n    2 : \"February\",\n    \"Key\" : \"Value\",\n}\n\nMyMap = dict([(1, \"January\"), (2, \"February\"), (\"Key\", \"Value\")])\n\nMySquareMap = { x : x**2 for x in (2, 4, 6) }\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#useful-dict-operations","title":"Useful Dict Operations","text":"<pre><code># Add an element\nMyMap[3] = \"March\"\n\n# Remove an element\ndel MyMap[1]      # This method raises KeyError if the key does not exist\nMyMap.pop(1, None)# This method returns None if the key does not exist\n\n# Find the number of key-value pairs\nNumElement = len(MyMap)\n\n# Check if a key exists\nif( 3 in MyMap ):\n    print(\"3 exists\\n\")\nelse:\n    print(\"3 does not exist\\n\")\n\n# Iterate through all elements\nfor k in MyMap:\n    print k\n\nfor k,v in MyMap.items()\n    print k, \"=&gt;\", v\n\n# Get all the keys\nMyKeys = MyMap.keys()\n\n# Filter dict items\nMyMap2 = {k:v for k,v in MyMap.items() if v &lt; 1000}\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#control-flow","title":"Control Flow","text":"<p><code>while</code> statement</p> <pre><code>a, b = 0, 1\nwhile b &lt; 10:\n    print(b)\n    a, b = b, a+b\n</code></pre> <p><code>if</code> statement</p> <pre><code>x = int(input(\"Please enter an integer: \"))\nif x &lt; 0:\n    x = 0\n    print('Negative changed to zero')\nelif x == 0:\n    print('Zero')\nelif x == 1:\n    print('Single')\nelse:\n    print('More')\n</code></pre> <p><code>for</code> statement</p> <pre><code>words = ['cat', 'window', 'defenestrate']\nfor w in words:\n    print(w, len(w))\n</code></pre> <p>To modify the list while iterating through its elements, it's highly recommended to first make a copy of the list and then iterate through the copy instead of the origin:</p> <pre><code>words = ['cat', 'window', 'defenestrate']\n\n# Loop over a slice copy \"words[:]\" of the original list \"words\"\nfor w in words[:]:\n    if len(w) &gt; 6:\n        words.insert(0, w)\n\n# Loop over the original list, resulting in an infinite loop keeping inserting\n# 'defenestrate'\nfor w in words:\n    if len(w) &gt; 6:\n        words.insert(0, w)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#break-continue-and-else-on-loops","title":"<code>break</code>, <code>continue</code>, and <code>else</code> on Loops","text":"<p>The <code>else</code> clause for a loop is executed when the loop terminates through exhaustion of the list (with <code>for</code>) or when the condition becomes false (with <code>while</code>), but not when the loop is terminated by a <code>break</code> statement. For example:</p> <pre><code>x = [0, 2, 4, 6, 8]\nfor i in x:\n    if i % 2 == 1:\n        print(\"x contains odd number\")\n        break\n    else:\n        print(\"x does not contain any odd number\")\n</code></pre> <p>The <code>continue</code> statement continues with the next iteration of the loop.</p>"},{"location":"Notes/202204082321_Python_Quick_Reference/#pass-statement","title":"<code>pass</code> Statement","text":"<p>The <code>pass</code> statement does nothing. It can be used when a statement is required syntactically but the program requires no action.</p> <pre><code>if (x &gt; 1):\n    # TODO: Implement this later\n    pass\nelse:\n    do_something()\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#iterable-object","title":"Iterable object","text":"<p>An iterable objec is an object which returns the successive items of the desired sequence when being iterated over. While it may behave like a list in some ways, it is essentially not a list.</p> <pre><code>x = range(5)\nprint(x)     # This prints 'range(0,5)'\n\ny = list(x)  # Convert an iterable object into a list\nprint(y)     # This prints '[0, 1, 2, 3, 4]'\n</code></pre> <p>Usage of <code>range()</code>:</p> <pre><code>x = range(5)     # Returns an iterable object that successively returns 0,1,2,3,4\nx = range(0,5)   # Returns an iterable object that successively returns 0,1,2,3,4\nx = range(0,5,2) # Returns an iterable object that successively returns 0,2,4\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#useful-operations","title":"Useful Operations","text":"<p>Print the elements in a list along with their indices.</p> <pre><code>words = ['a', 'b', 'c']\nfor i in range(len(words)):\n    print(i, words[i])\n</code></pre> <p>Move to next element</p> <pre><code>x = range(5)\n\n# Pop an element (and print the popped element to STDOUT)\nnext(x)\n\n# Pop an element and assign it to _, so that the popped element will not be\n# printed to STDOUT\n_ = next(x)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#filedirectory-operations","title":"File/Directory Operations","text":"<p>Basic file operations</p> <pre><code>import shutil\n\n# Copy a file\nshutil.copy2(src,dst) # dst can be a file or a directory\n\n# Copy a directory (dst must not already exist)\nshutil.copytree(src,dst)\n</code></pre> <p>Get current working directory</p> <pre><code># Get cwd\nimport os\ncwd = os.getcwd()\n\n# Replace '\\' with '/' if on Windows\ncwd = cwd.replace(os.sep, '/')\n</code></pre> <p>Check if the file/directory exists:</p> <pre><code># Python 3.4+\nfrom pathlib import Path\n\nmy_file = Path(\"/path/to/something\")\nfile_exists = my_file.is_file()\ndir_exists = my_file.is_dir()\npath_exists = my_file.exists()\n\n# Older Python\nimport os\nmypath = '/path/to/something'\nfile_exists = os.path.isfile(mypath)\ndir_exists = os.path.isdir(mypath)\npath_exists = os.path.exists(mypath)\n</code></pre> <p>List all files/dirs in a directory</p> <pre><code># Python 3.4+\nfrom pathlib import Path\nmypath = Path('/path/to/my/dir')\nonlydirs = [x for x in mypath.iterdir() if x.is_dir()]\nonlyfiles = [x for x in mypath.iterdir() if x.is_file()]\n\n# Older Python\nfrom os import listdir\nfrom os.path import isfile, isdir, join\nmypath = '/path/to/my/dir'\nfiles_and_dirs = listdir(mypath)\nonlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]\nonlydirs = [f for f in listdir(mypath) if isdir(join(mypath, f))]\n</code></pre> <p>Create directory if it does not exist</p> <pre><code># Python 3.4+\nimport pathlib\npathlib.Path('/my/directory').mkdir(parents=True, exist_ok=True)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#type-hints","title":"Type Hints","text":"<p>New in version 3.5.</p>"},{"location":"Notes/202204082321_Python_Quick_Reference/#basic-use","title":"Basic Use","text":"<pre><code>from typing import List, Dict, Tuple, Sequence\n\ndef my_func1(x: str, y: int, z: List[float]) -&gt; None:\n    pass\n\ndef my_func2(x: Dict[str,str]) -&gt; List[str]:\n    pass\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#type-alias","title":"Type Alias","text":"<pre><code>from typing import List\nVector = List[float]\n\ndef my_func1(x: Vector) -&gt; Vector:\n    pass\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#readwrite-files","title":"Read/Write Files","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#load-csv-file","title":"Load CSV File","text":"<pre><code>import csv\nwith open('myfile.csv', newline='') as csvfile:\n    spamreader = csv.reader(csvfile, delimiter=',', quotechar='|')\n    for row in spamreader:\n        print(', '.join(row))\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#load-wav-file","title":"Load WAV File","text":"<pre><code>from scipy.io import wavfile\n[fs, x] = wavfile.read(wav_path)\n\n# Convert x from int to float\nif x.dtype == 'int16':\n    n_bits = 16\nelif x.dtype =='int32':\n    n_bits = 32\nelse:\n    n_bits = -1\nif(n_bits&gt;0):\n    max_val = float(2 ** (n_bits -1))\n    x = x / (max_val+1)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#readwrite-text-file","title":"Read/Write text file","text":"<pre><code># Read file\nlines = []\nwith open('Input.txt', 'r') as text_file:\n    for line in text_file:\n        lines.append(line)\n\n# Write file\nwith open('Output.txt', 'w') as text_file:\n    for line in lines:\n        text_file.write(line)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#readwrite-json-file","title":"Read/Write JSON file","text":"<pre><code>import json\n\n# Read\njson_path = '/path/to/myfile.JSON'\nwith open(json_path) as jf:\n    jsonData = json.load(jf)\n\n# Write\nmy_data = {\n    \"Key1\": \"Val1\",\n    \"Key2\": 3.14159,\n}\nwith open(json_path, 'w') as jf:\n    json.dump(my_data, jf)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#parse-arguments","title":"Parse arguments","text":"<pre><code>import argparse\n\nparser = argparse.ArgumentParser(description=\"Description for this Python script\")\n\n# Define a positional argument 'input1'.\nparser.add_argument('input1', type=float)\n\n# Define a positional argument 'input2', but store it as 'in2',\n# and show it as 'N' in the help message\nparser.add_argument('input2', type=float, dest='in2', metavar='N')\n\n# Define an optional argument with more than 1 way to specify it\nparse.add_argument('-o', '--out', type=str, dest='out')\n\n# Mark an optional argument as required\nparse.add_argument('--in3', type=float, required=True)\n\n# If user specifies '--in4 c', in4 will be 'c';\n# If user specifies '--in4' without argument, in4 will be 'b'\n# If user does not specify '--in4', in4 will be 'a'\nparse.add_argument('--in4', type=str, nargs='?' const='a', default='b')\n\n# '--in5' expects 2 arguments; in5 will be a list of length 2\n# Note: \"nargs='1'\" yields a list of length 1 instead of a scalar\nparse.add_argument('--in5', type=str, nargs='2')\n\n# Parse the arguments. The arguments will become the fields of args\nargs = parser.parse_args()\n\n# Access the arguments\nprint(args.input1)\nprint(args.in2)\nprint(args.out)\nprint(args.in3)\nfor x in args.in5:\n    print(x)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#frequently-used-operations","title":"Frequently Used Operations","text":""},{"location":"Notes/202204082321_Python_Quick_Reference/#command-line-arguments","title":"Command-line Arguments","text":"<p>Reading the arguments</p> <pre><code>import sys\n\nprint(\"Number of arguments = %d\" % len(sys.argv))\n# sys.argv[0] is the script name, and the rest are the arguments\nprint(\"Argument List: %s\" % str(sys.argv))\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#execute-a-cmd-command","title":"Execute a CMD command","text":"<pre><code>import subprocess\nmy_cmd = \"run.bat %s\" % (my_bat_arguments)\nmy_cwd = \"path/to/workdir\"\nsubprocess.check_output(my_cmd, shell=True, cwd=my_cwd).decode()\n\n# Suppress stderr and stdout\nsubprocess.run(my_cmd, stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL)\n\n# Print messages only if the return code is not 0\nresult = subprocess.run(my_cmd, stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\nif(0 != result.returncode):\n    print(result.stdout.decode())\n\n# Print messages to file\nwith open(\"out.txt\", \"w\") as fh:\n    subprocess.run(my_cmd, stderr=subprocess.STDOUT, stdout=fh)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#profile-a-function","title":"Profile a function","text":"<pre><code>import cProfile\nimport pstats\n\ncmd = \"run_some_function()\"\n\npr = cProfile.Profile()\npr.run(cmd)\nwith open(\"my_prof.txt\", 'w') as stream:\n    p = pstats.Stats(pr, stream=stream)\n    p.sort_stats('cumulative')\n    \"\"\"Sort the stats by the cumulative time\"\"\"\n\n    p.print_stats(.2)\n    \"\"\"Print only the top 20% of the profile\"\"\"\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#progress-bar","title":"Progress Bar","text":"<p>Basic usage</p> <pre><code>from tqdm import tqdm\n\ninput_list = ['a', 'b', 'c', 'd']\n\n# Wrap an iterable object with tqdm()\nfor input in tqdm( input_list ):\n    do_some_work(input)\n</code></pre> <p>Set the progress based on stdout:</p> <pre><code>from tqdm import tqdm\nimport subprocess\nimport re\n\nwith subprocess.Popen(some_command, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, bufsize=1, universal_newlines=True) as p, \\\n                        tqdm(total=num_files) as pbar:\n    file_processed = 0\n    for line in p.stdout:\n        # Assuming that some_command will print the string\n        # \"Processing file &lt;Num&gt;\" to stdout\n        m = re.match(r'^Processing file (\\d+)', line)\n        if(m):\n            latest_processed = int(m.group(1))\n            if(latest_processed &gt; file_processed):\n                pbar.update(latest_processed - file_processed)\n                file_processed = latest_processed\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#load-a-lib-from-a-user-specified-location","title":"Load a lib from a user-specified location","text":"<pre><code>import sys\nsys.path.append('/path/to/my/lib')\n\n# Load /path/to/my/lib/mylib.py\nimport mylib\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#create-a-cartesian-product-of-multiple-iterables","title":"Create a Cartesian product of multiple iterables","text":"<pre><code>import itertools\n\nList1 = [1, 2, 3]\nList2 = ['a', 'b', 'c']\nList3 = [4, 5, 6]\n\nprod = itertools.product(List1, List2, List3)\nfor (x1, x2, x3) in prod:\n    myfunc(x1, x2, x3)\n</code></pre>"},{"location":"Notes/202204082321_Python_Quick_Reference/#get-the-current-time-as-a-string-of-custom-format","title":"Get the current time as a string of custom format","text":"<pre><code>from datetime import datetime\ntime_str = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n</code></pre>"},{"location":"Notes/202204161841_Conda_Quick_Reference/","title":"Conda Quick Reference","text":""},{"location":"Notes/202204161841_Conda_Quick_Reference/#update-anaconda","title":"Update Anaconda","text":"<p>ref: https://docs.anaconda.com/anaconda/install/update-version/</p> <pre><code>#update the conda package manager to the latest version\nconda update conda\n#use conda to update Anaconda to the latest version\nconda update anaconda\n</code></pre> <p>If <code>condat update conda</code> fails to update itself, try to specify a specific version of conda:</p> <pre><code>conda install conda=23.3.1\n</code></pre> <p>The latest version number of conda can be found at https://docs.conda.io/projects/conda/en/stable/release-notes.html</p>"},{"location":"Notes/202204161841_Conda_Quick_Reference/#environment","title":"Environment","text":"<p>ref: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html</p> <pre><code># Create a new environment named py39 with python version 3.9\nconda create -n py39 python=3.9\n\n# Activate the environment py39\nconda activate py39\n\n# De-activate the environment\nconda deactivate\n\n# Remove an environment\nconda remove -n py39 --all\n\n# List the existing environments\nconda env list\n</code></pre>"},{"location":"Notes/202204161841_Conda_Quick_Reference/#packages","title":"Packages","text":"<pre><code># List all packages\nconda list\n\n# List all packages in an environment named 'py39'\nconda list --name py39\n\n# List all the packages whose names contain the substring 'cip', such as 'scipy'\nconda list cip\n\n# Intall the scipy package\nconda install scipy\n\n# Install the scipy package from the conda-forge channel\nconda install -c conda-forge scipy\n\n# Install the scipy package of specific version\nconda install scipy==1.7.1\n\n# Update the scipy package\nconda update scipy\n\n# Update the scipy package from the conda-forge channel\nconda update -c conda-forge scipy\n</code></pre>"},{"location":"Notes/202204161841_Conda_Quick_Reference/#see-also","title":"See Also","text":"<ul> <li>202207081024_pip_quick_ref</li> </ul>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/","title":"Obsidian Notes Quick Reference","text":""},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#code-blocks","title":"Code blocks","text":"<p>Use a pair of N backticks (`) to form a code block (N \\(\\geq\\) 3).</p> <pre><code>```some-language-tag\nUse 4 backticks to form the code block\nso that I can write 3 backticks in the code block\n```\n</code></pre> <p>To show a code block inside a code block like the one above, use N=4 for outer code block so that the inner code block of N=3 will appear as plain text.</p> <p>List of supported language</p>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#applying-custom-css","title":"Applying Custom CSS","text":"<p>Steps:</p> <ol> <li>Go to Options --&gt; Appearance, find the \"CSS snippets\" section. </li> <li>Click the \"folder\" icon  to open the folder that hosts all the CSS snippet files. Add the new CSS file to the folder.</li> <li>Click the \"refresh\" icon  to show the newly added CSS file in the \"CSS snippets\" section. Enable the newly added CSS styles.</li> </ol>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#supported-front-matter-keys","title":"Supported Front Matter Keys","text":"<p>Obsidian front matter (YAML) natively supports the following keys:</p> <ul> <li><code>tags</code> </li> <li><code>aliases</code> </li> <li><code>cssclass</code></li> <li><code>publish</code></li> </ul>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#callouts","title":"Callouts","text":"<p>Starting from v0.14.0, Obsidian supports the callout blocks . The basic syntax is</p> <pre><code>&gt; [!CALLOUT_TYPE] TITLE\n&gt; CONTENT\n</code></pre> <p>The supported <code>CALLOUT_TYPE</code> includes</p> <ul> <li><code>info</code></li> <li><code>note</code></li> <li><code>abstract</code><ul> <li>Alias: <code>summary</code>, <code>tldr</code></li> </ul> </li> <li><code>todo</code></li> <li><code>tip</code><ul> <li>Alias: <code>hint</code>, <code>important</code></li> </ul> </li> <li><code>success</code><ul> <li>Alias: <code>check</code>, <code>done</code></li> </ul> </li> <li><code>question</code><ul> <li>Alias: <code>help</code>, <code>faq</code></li> </ul> </li> <li><code>warning</code><ul> <li>Alias: <code>caution</code>, <code>attention</code></li> </ul> </li> <li><code>failure</code><ul> <li>Alias: <code>fail</code>, <code>missing</code></li> </ul> </li> <li><code>danger</code><ul> <li>Alias: <code>error</code></li> </ul> </li> <li><code>bug</code></li> <li><code>example</code></li> <li><code>quote</code><ul> <li>Alias: <code>cite</code></li> </ul> </li> </ul> <p>The <code>CALLOUT_TYPE</code> is case-insensitive.</p> <pre><code>&gt; [!INFO] \n&gt; This is an info callout block without title. Markdown **styles** _can_ ==be== parsed here.\n</code></pre> <p>[!INFO]  This is an info callout block without title. Markdown styles can ==be== parsed here.</p> <pre><code>&gt; [!INFO] My Info Block\n&gt; This is an info callout block with custom title. \n</code></pre> <p>[!INFO] My Info Block This is an info callout block with custom title. </p>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#color-highlighting","title":"Color Highlighting","text":"<p>The ==color highlighting== is not supported by Obsidian as of v0.13.23. However, deathau used some custom CSS to implement the highlighting:</p> <ul> <li><code>==Default highlighting==</code>: ==Default highlighting==</li> <li><code>&lt;mark class=\"pink\"&gt;pink&lt;/mask&gt;</code>: pink <li><code>&lt;mark class=\"green\"&gt;green&lt;/mask&gt;</code>: green <li><code>&lt;mark class=\"blue\"&gt;blue&lt;/mask&gt;</code>: blue"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#default-hotkeys","title":"Default Hotkeys","text":"Navigation Function Shortcut Create new note <code>Ctrl+N</code> Open command palette <code>Ctrl+P</code> Open quick switcher <code>Ctrl+O</code> Search in all files <code>Ctrl+Shift+F</code> Open graph view <code>Ctrl+G</code> Navigate back <code>Ctrl+Alt+\u2190</code> Navigate forward <code>Ctrl+Alt+\u2192</code> Search current file <code>Ctrl+F</code> Toggle edit/view mode <code>Ctrl+E</code> Open settings <code>Ctrl+,</code> Editing Function Shortcut Bold <code>Ctrl+B</code> Italic <code>Ctrl+I</code> Insert link <code>Ctrl+K</code> Indent <code>Ctrl+]</code> Unindent <code>Ctrl+[</code>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#creating-new-notes-with-default-templates","title":"Creating new notes with default templates","text":"<p>As of v0.14.5, it is not possible to specify a default template for new notes </p>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#embedding-another-note","title":"Embedding Another Note","text":"<p>Use the following syntax to embed another note:</p> <pre><code>![[note_name]]\n</code></pre>"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#hiding-some-contents","title":"Hiding Some Contents","text":""},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#option-1-use-htmls-details-tag","title":"Option 1: Use HTML's <code>&lt;details&gt;</code> tag:","text":"<pre><code>&lt;details&gt;\n    &lt;summary&gt;Some Quick Summary&lt;/summary&gt;\n    &lt;p&gt;The content here seems to be treated as raw HTML. ==Markdown== *does not* work here.\n&lt;/details&gt;\n</code></pre> Some Quick Summary <p>The content here seems to be treated as raw HTML. ==Markdown== *does not* work here."},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#option-2-use-obsidians-callouts-feature","title":"Option 2: Use Obsidian's #Callouts feature","text":"<pre><code>&gt; [!Note]- Some content folded by default\n&gt; ==Markdown== *works* here. \n&gt; \n&gt; $$\n&gt; f(x) = y\n&gt; $$\n</code></pre> <p>[!Note]- Some content folded by default ==Markdown== works here. </p> \\[ f(x) = y \\]"},{"location":"Notes/202204252244_Obsidian_Notes_Quick_Reference/#reference","title":"Reference","text":"<ul> <li>Obsidian Help: Format your notes</li> </ul>"},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/","title":"Python Numpy Quick Reference","text":""},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/#array","title":"Array","text":""},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/#initialization","title":"Initialization","text":"<pre><code>import numpy as np\n\n# 1-D array\nx = np.array([1, 2, 3])\n\n# 2x3 2-D array \nx = np.array( [ [1, 2, 3], [4, 5, 6] ] )\n\n# Specify the data type\nx = np.array([1, 2, 3], dtype=complex)\n\n# Specify a range [1, 7) with step size 0.5\nx = np.arange(1, 7, 0.5)\n</code></pre>"},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/#basic-operation","title":"Basic Operation","text":"<pre><code>a = np.array([1 2 3])\nb = np.array([4 5 6])\n\n# Operations with scalar: Apply the scalar to every element\nc = a + 1 # = array([2 3 4])\nc = 2**a # = array([2 4 8])\n\n# Elementwise operations\nc = a + b # = array([5 7 9])\nc = a * b # = array([4 10 18])\nc = a &gt; b # = array([False False False], dtype=bool)\nc = a / b # = array([0.25 0.4 0.5])\n\n# Matrix multiplication\nc = np.matmul(a, b)\nc = a @ b # Python 3.5+\n\n# Matrix concatenation\na = np.array([ [1, 2], [3, 4] ])       # 2x2\nb = np.array([ [5, 6] ])               # 1x2\nc = np.concatenate((a, b), axis=0)   # Concatenate 2x2 and 1x2 arrays to 3x2\nc = np.concatenate((a, b.T), axis=1) # Concatenate 2x2 and 2x1 arrays to 2x3\n\n# Check if x[i] matches any of the elements in y\nz = np.isin(x, y)  # z[i] = True if x[i] is found in y\n</code></pre>"},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/#useful-array-operations","title":"Useful Array Operations","text":"<pre><code>x = np.array([ [1, 2, 3], [4, 5, 6] ], np.int32)\n\n# Show the type of x. This command returns 'numpy.ndarray'\ntype(x)     \n\n# Show the dimensions of x. This returns a tuple '(2, 3)' for the given x\nx.shape     \n\n# Show the data type of x. This returns 'dtype('int32')'\nx.dtype     \n\n# Access the element of row index = 1, column index = 2. \n# This returns 6 for the given x.\nx[1, 2]     \n\n# Slicing. y becomes array([2, 5]). Note this produces \n# a 'view' of the array instead of producing a copy. \n# In other words, changing y[0] will also change x[0,1]\ny = x[:,1]  \n\n # Replace any entry where x&lt;=4 with 4\ny = np.where(x&gt;4, x, 4) \n\n # Remove the dimensions whose lengths are 1.\ny = np.squeeze(x) \n\n # Get the N largest values in the array x\nlargest_x = x.argsort()[-N:][::-1] \n\n# Get the indices of the N largest values in the array x\nlargest_ind = np.argpartition(x, -N)[-N:] \n\n# Inner product (without complex conjugation) over the \n# last axes of x and y. Inner product of (X1xX2xX3xM) \n# array and (Y1xY2xM) array yields a (X1xX2xX3xY1xY2) array\ny = np.array([ [7, 8, 9], [0, 1, 2] ], np.int32)\nz = np.inner(x, y)\n\n# Rearrange the dimensions of an array\nz = np.transpose(x, axes=[1,0])\nz = x.transpose(1,0)\n\n# Remove the dimensions whose size is 1\nx = np.random.rand(3,1,2)  # shape (3,1,2)\ny = np.squeeze(x) # shape (3,2)\nx = np.array( [ [123] ] ) # shape (1,1)\ny = np.squeeze(x) # shape (), which is an 0d-array\n\n# Remove the specified dimensions if their sizes are 1\nx = np.random.rand(1,3,1,1)  # shape (1,3,1,1)\ny = np.squeeze(x, axis=(2,3)) # shape(1,3). \n</code></pre>"},{"location":"Notes/202204270851_Python_Numpy_Quick_Reference/#readwrite-txt-file","title":"Read/Write TXT File","text":"<pre><code>import numpy as np\n\nx = np.array([ [1, 2, 3], [4, 5, 6] ])\nfile_path = 'path/to/my/dump.txt'\nnp.savetxt(file_path, x, fmt='%.3e')\n\ny = np.loadtxt(file_path, dtype=float)\n</code></pre>"},{"location":"Notes/202204281942_Customize%20Git%20Bash%20Prompt/","title":"Customize Git Bash Prompt","text":""},{"location":"Notes/202204281942_Customize%20Git%20Bash%20Prompt/#context","title":"Context","text":"<p>When using Git for Windows, the user wants to customize the Bash prompt. The customization should be done outside of the Git for Windows installation folder so that the change won't be overwritten when the user installs a new version of Git for Windows.</p>"},{"location":"Notes/202204281942_Customize%20Git%20Bash%20Prompt/#problem","title":"Problem","text":"<p>How to change the Bash prompt?</p>"},{"location":"Notes/202204281942_Customize%20Git%20Bash%20Prompt/#solution","title":"Solution","text":"<p>Create a new <code>.sh</code> file at the following location:</p> <pre><code>~/.config/git/git-prompt.sh\n</code></pre> <p>then edit the newly created file to define the prompt variable <code>PS1</code>. An example for the file content:</p> <pre><code>PS1='\\[\\033]0;$TITLEPREFIX:$PWD\\007\\]' # set window title\nPS1=\"$PS1\"'\\n'                 # new line\nPS1=\"$PS1\"'\\[\\033[32m\\]'       # change to green\nPS1=\"$PS1\"'\\u@\\h '             # user@host&lt;space&gt;\nPS1=\"$PS1\"'\\[\\033[35m\\]'       # change to purple\nPS1=\"$PS1\"'$MSYSTEM '          # show MSYSTEM\nPS1=\"$PS1\"'\\[\\033[33m\\]'       # change to brownish yellow\nPS1=\"$PS1\"'\\w'                 # current working directory\n</code></pre>"},{"location":"Notes/202204281942_Customize%20Git%20Bash%20Prompt/#note","title":"Note","text":"<p>Git for Windows loads <code>/etc/profile.d/git-prompt.sh</code> for the prompt definition, which loads <code>~/.config/git/git-prompt.sh</code> for the <code>PS1</code> definition (if exists). As long as Git for Windows follows the same convention for the new versions, the customization will not be affected by the new version of Git for Windos.</p>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/","title":"Frequency-domain Adaptive Filtering","text":""},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#context","title":"Context","text":"<p>Given:</p> <ul> <li>\\(x(n) \\in \\mathbb{C}\\) is the input signal at time \\(n\\)</li> <li>\\(d(n) \\in \\mathbb{C}\\) is the desired output of a filter at time \\(n\\)</li> <li>\\(\\mathbf{w}(n) = \\left[w_0(n), w_1(n), ... w_{M-1}(n) \\right]^T \\in \\mathbb{C}^{M \\times 1}\\) is the M-tap linear adaptive filter trying to filter \\(x(n)\\) into \\(d(n)\\) at time \\(n\\)</li> </ul> <p>The conventional Least Mean Square algorithm updates \\(w(n)\\) using the following equation:</p> \\[ \\mathbf{w}(n+1) = \\mathbf{w}(n) + 2 \\mu e(n) \\mathbf{x}^*(n) \\] <p>where</p> <ul> <li>\\(\\mu \\in \\mathbb{R}\\) is the scalar adaptation step size</li> <li>\\(\\mathbf{x}(n) = \\left[x(n), x(n-1), ... x(n-M+1) \\right]^T \\in \\mathbb{C}^{M \\times 1}\\) is the vector of the most recent M samples of \\(x(n)\\)</li> <li>\\(e(n) = d(n) - y(n) \\in \\mathbb{C}\\) is the error signal<ul> <li>\\(y(n) = \\mathbf{w}^T(n)\\mathbf{x}(n)\\) is the output of the filter \\(\\mathbf{w}(n)\\)</li> </ul> </li> <li>\\(\\left\\{\\cdot\\right\\}^*\\) is conjugate</li> </ul> <p>and the algorithm updates \\(\\mathbf{w}(n)\\) every time a new sample pair \\({x(n), d(n)}\\) is received.</p> <p>When the steady state of \\(\\mathbf{w}(n)\\) and the statistics of \\(x(n)\\) are reasonably stable over time, the benefit of updating \\(\\mathbf{w}(n)\\) at every \\(n\\) may not justify the computational cost.</p>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#problem","title":"Problem","text":"<p>How to adapt \\(\\mathbf{w}(n)\\) in a less computationally complex way?</p>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#solution","title":"Solution","text":"<p>Apply the following two steps to reduce the computational complexity:</p> <ol> <li>Update \\(\\mathbf{w}(n)\\) once per L input samples (known as the \"block LMS algorithm\").</li> <li>Use some methods (e.g. overlap-save method) to compute the linear convolution in frequency domain</li> </ol> <p>To update \\(\\mathbf{w}(n)\\) once per L input samples, the following update equation is used:</p> \\[ \\mathbf{w}(n+L) = \\mathbf{w}(n) + \\mu \\sum_{m=0}^{L-1} e(n+m) \\mathbf{x}^*(n+m) \\] <p>where</p> <ul> <li>\\(e(n+m) = d(n+m) - y(n+m)\\) is the error signal at time \\((n+m)\\)</li> <li>\\(y(n+m) = \\mathbf{w}^T(n)\\mathbf{x}(n+m)\\) is the output of the filter at time \\((n+m)\\) using the filter coefficients at time \\(n\\)</li> </ul>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#using-overlap-save-method","title":"Using Overlap-save Method","text":"<p>To combine the block LMS algorithm with the overlap-save method, here we choose \\(L = M\\). Based on overlap-save method, if we define</p> <ul> <li>\\(\\mathbf{W}(k) = \\mathcal{F} \\left( \\left[ w_0(kM), w_1(kM), ... , w_{M-1}(kM), 0, 0, ... , 0 \\right] \\right)^T \\in \\mathbb{C}^{2M \\times 1}\\)</li> <li>\\(\\mathbf{\\tilde{x}}(k) = \\left[ x(kM-M), x(kM-M+1), ..., x(kM+M-1) \\right]^T \\in \\mathbb{C}^{2M \\times 1}\\)</li> <li>\\(\\mathbf{\\tilde{X}}(k) = \\mathcal{F} \\left( \\mathbf{\\tilde{x}}(k) \\right) \\in \\mathbb{C}^{2M \\times 1}\\)<ul> <li>\\(\\mathcal{F} \\left\\{ \\cdot \\right\\}\\) is the DFT operator</li> </ul> </li> <li>\\(\\mathbf{\\tilde{y}}(k) = \\left[ y(kM), ..., y(kM+M-1) \\right]^T \\in \\mathbb{C}^{M \\times 1}\\)</li> </ul> <p>then \\(\\mathbf{\\tilde{y}}(k)\\) can be computed as</p> \\[ \\begin{align*} \\mathbf{\\tilde{y}}(k) = \\text{last} \\; M \\; \\text{components of} \\; \\mathcal{F}^{-1} \\left( \\mathbf{\\tilde{X}}(k) \\cdot \\mathbf{W}(k) \\right) \\end{align*} \\] <p>where</p> <ul> <li>\\(\\mathcal{F}^{-1} \\left\\{ \\cdot \\right\\}\\) is the inverse DFT operator</li> </ul> <p>Similarly, if we define</p> <ul> <li>\\(\\mathbf{d}(k) = \\left[ d(kM), ... , d(kM+M-1) \\right]^T \\in \\mathbb{C}^{M \\times 1}\\)</li> <li>\\(\\mathbf{e}(k) = \\left[ e(kM), ... , e(kM+M-1) \\right]^T = \\mathbf{d}(k) - \\mathbf{y}(k)\\)</li> <li>\\(\\mathbf{E}(k) = \\mathcal{F} \\left( \\left[0,...,0, \\mathbf{e}^T(k) \\right]^T \\right) \\in \\mathbb{C}^{2M \\times 1}\\)</li> <li>\\(\\mathbf{g}(k) = \\sum_{m=0}^{M-1} e(kM+m) \\mathbf{x}^*(kM+m)  \\in \\mathbb{C}^{M \\times 1}\\)</li> </ul> <p>If we represent \\(\\mathbf{g}(k)\\) as a finite sequence \\(g_i\\):</p> \\[ \\begin{align*} \\mathbf{g}(k) &amp;= \\left[ g_0, g_1, ... g_{M-1} \\right] \\\\ g_i &amp;= \\sum_{m=0}^{M-1} e(kM+m) x^*(kM-i+m) \\end{align*} \\] <p>Then we can see that \\(\\mathbf{g}(k)\\) is essentially the correlation between \\(x(n)\\) and \\(e(n)\\) around \\(n = kM\\), and \\(\\mathbf{g}(k)\\) can be computed as</p> \\[ \\mathbf{g}(k) = \\text{first} \\; M \\; \\text{components of} \\; \\mathcal{F}^{-1} \\left( \\mathbf{\\tilde{X}}^*(k) \\cdot \\mathbf{E}(k) \\right) \\] <p>To update the filter in frequency domain, we compute</p> \\[ \\begin{align} \\mathbf{G}(k) &amp;= \\mathcal{F} \\left( \\left[\\mathbf{g}^T(k), 0, ...0 \\right]^T \\right) \\in \\mathbb{C}^{2M \\times 1} \\\\ \\mathbf{W}(k+1) &amp;= \\mathbf{W}(k) + 2 \\mu \\mathbf{G}(k) \\end{align} \\] <p>YYC Note: It's unclear whether updating the filter in frequency domain saves any computation. It seems to me that, for every update, you have to either do DFT( g(k) ) or do DFT( w(k) ).</p>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#other-approaches","title":"Other approaches:","text":"<ul> <li>Using overlap-add method</li> <li>Using circular convolution</li> <li>Using sliding DFT</li> <li>Using subband implementation</li> <li>Using IIR algorithms and nonlinear error functions</li> </ul>"},{"location":"Notes/202204301015_Frequency-domain_Adaptive_Filtering/#reference","title":"Reference","text":"<ul> <li>http://users.isy.liu.se/en/rt/fredrik/spcourse/multirate.pdf </li> </ul>"},{"location":"Notes/202204301817_Overlap-save_method/","title":"Overlap-save method","text":""},{"location":"Notes/202204301817_Overlap-save_method/#context","title":"Context","text":"<p>Given a discrete signal \\(x[n]\\) and a finite impulse response (FIR) filter \\(h[n]\\), the discrete convolution between \\(x[n]\\) and \\(h[n]\\) is:</p> \\[ \\begin{align} y[n] = x[n] * h[n] &amp;\\triangleq \\sum_{m=-\\infty}^{\\infty} h[m] \\cdot x[n-m] \\\\ &amp;= \\sum_{m=0}^{M-1} h[m] \\cdot x[n-m] \\end{align} \\] <p>where \\(h[n] = 0\\) for \\(n\\) outside the region \\([0, M-1]\\).</p> <p>The complexity of computing a sample of \\(y[n]\\) is \\(M\\) multiplications and \\((M-1)\\) additions. When \\(M\\) is large and \\(x[n]\\) is very long, it is very costly to compute the entire \\(y[n]\\).</p>"},{"location":"Notes/202204301817_Overlap-save_method/#problem","title":"Problem","text":"<p>If the algorithmic latency is not a critical issue, is there any way to reduce the computational complexity by conducting the convolution in the frequency domain?</p>"},{"location":"Notes/202204301817_Overlap-save_method/#solution","title":"Solution","text":"<p>The computational complexity can be reduced by doing the followings:</p> <ol> <li>Slice the signal \\(x[n]\\) into overlapping patches</li> <li>Compute the circular convolution between the patch and \\(h[n]\\)</li> <li>Pick the samples of the circular convolution that are not affected by the circular aliasing.</li> </ol> <p>First, define a finite-length signal \\(x_k[n]\\) as</p> \\[ x_k[n] \\triangleq  \\left\\{ \\begin{array}{rl} x[n+kL] &amp; 0 \\leq n \\leq (L-1)+(M-1) \\\\ 0 &amp; \\mbox{otherwise} \\end{array}\\right. \\] <p>Note that</p> <ul> <li>\\(x_k[n]\\) is of finite length \\(L+M-1\\)</li> <li>There is an overlap of \\((M-1)\\) samples in the original \\(x[n]\\) between \\(x_k[n]\\) and \\(x_{k+1}[n]\\).</li> </ul> <p>And the discrete convolution between \\(x_k[n]\\) and \\(h[n]\\) can be written as</p> \\[ \\begin{align} y_k[n] &amp;= x_k[n] * h[n] \\\\ &amp;= \\sum_{m=0}^{M-1} h[m] \\cdot x_k[n-m] \\end{align} \\] <p>Now, if we compute the N-point circular convolution between \\(x_k[n]\\) and \\(h[n]\\) with a period \\(N \\geq L+M-1\\), the circular convolution result \\(\\tilde{y_k}[n]\\) will be equivalent to the linear convolution result \\(y_k[n]\\) in the region \\([M-1, L+M-2]\\). Note that the N-point circular convolution can be computed efficiently as follows, according to the circular convolution theorem:</p> \\[ \\tilde{y_k}[n] = DFT_N^{-1}( DFT_N(x_k[n]) \\cdot DFT_N(h[n]) ) \\] <p>where</p> <ul> <li>\\(DFT_N\\) and \\(DFT_N^{-1}\\) are the N-point Discrete Fourier transform and the N-point inverse Discrete Fourier transform, respectively.</li> </ul> <p>Also, we can easily prove that, for any \\(n \\geq M-1\\), there exists one and only one integer \\(k\\) such that</p> \\[ kL + M - 1 \\leq n \\leq (k+1)L + M - 2 \\] <p>As a result, all \\(y[n]\\) for \\(n &gt; M-1\\) can be efficiently computed by</p> \\[ y[n] = y_k[n-kL] = \\tilde{y_k}[n-kL] \\] <p>for some \\(k \\geq 0\\).</p> <p>Note:</p> <ul> <li>While the algorithm works for any \\(N \\geq L+M-1\\), choosing \\(N &gt; L+M-1\\) only adds unnecessary computational cost.</li> <li>The typical approach is to choose \\(N\\) to be an integer power-of-2, then determine \\(L\\) by \\(L = N-M+1\\).<ul> <li>The wiki page suggests that the optimal \\(N\\) is in the range \\([4M, 8M]\\).</li> </ul> </li> </ul>"},{"location":"Notes/202204301817_Overlap-save_method/#complexity-analysis","title":"Complexity Analysis","text":"<p>The complexity of computing each sample of \\(y[n]\\) can be estimated by the average cost of \\(\\tilde{y_k}\\) patch divided by \\(N-M+1\\).</p> <p>The computational complexity for computing \\(\\tilde{y_k}\\) patch is roughly \\(N\\mbox{log}_2(N) + N\\) (unit: multiplier-accumulator (MAC)), consisting</p> <ul> <li>one N-point FFT:  \\(\\frac{N}{2}\\mbox{log}_2(N)\\) for radix-2 implementation</li> <li>one N-point IFFT: \\(\\frac{N}{2}\\mbox{log}_2(N)\\) for radix-2 implementation</li> <li>Product of DFT(\\(x_k\\) ) and DFT(\\(h\\)): \\(N\\)</li> </ul> <p>Note that, when the FIR filter \\(h[n]\\) does not change over time, DFT(\\(h\\)) only needs to be computed once throughout the entire computation of \\(y[n]\\), and therefore it is a negligible constant when \\(x[n]\\) is very long.</p> <p>Each \\(\\tilde{y_k}\\) patch yields \\(N-M+1\\) samples of valid \\(y[n]\\), and therefore the complexity of computing each sample of \\(y[n]\\) is roughly</p> \\[ \\frac{N \\mbox{log}_2(N) + N}{N-M+1} \\] <p>For a case of M=201 and N=1024, the overlap-save method takes 13.67 MACs to compute one output sample, while direct computation takes 201 MACs.</p>"},{"location":"Notes/202204301817_Overlap-save_method/#see-also","title":"See also","text":"<ul> <li>202207280929_overlap_add_method</li> </ul>"},{"location":"Notes/202204301817_Overlap-save_method/#reference","title":"Reference","text":"<ul> <li>Complexity of FFT:<ul> <li>https://dsp.stackexchange.com/questions/46429/how-many-multiplications-and-additions-does-it-take-to-compute-an-fft-of-a-signa</li> <li>Fast Fourier transform</li> </ul> </li> <li>Wikipedia: Overlap-save method</li> </ul>"},{"location":"Notes/202204301844_lagrange_multiplier/","title":"Lagrange multiplier","text":""},{"location":"Notes/202204301844_lagrange_multiplier/#context","title":"Context","text":"<p>Given a function \\(f : \\mathbb{R}^n \\rightarrow \\mathbb{R}\\) and a constraint \\(g : \\mathbb{R}^n \\rightarrow \\mathbb{R}\\) , we define the n-dimensional input as \\(x = (x_1, x_2, ..., x_n)\\), and we choose the constraint as \\(g(x) = 0\\)</p>"},{"location":"Notes/202204301844_lagrange_multiplier/#problem","title":"Problem","text":"<p>How to find the extrema of \\(f(x)\\) subject to \\(g(x) = 0\\)?</p>"},{"location":"Notes/202204301844_lagrange_multiplier/#solution","title":"Solution","text":"<p>For an extremum of \\(f\\) to exist on \\(g\\), the gradient of \\(f\\) must be of the same direction as the gradient of \\(g\\). In other words, the extremum (if exists) locates at where</p> \\[ \\nabla f = - \\lambda \\nabla g \\] <p>or</p> \\[ \\nabla f + \\lambda \\nabla g = 0 \\] <p>for some \\(\\lambda\\). \\(\\lambda\\) is called the Lagrange multiplier.</p> <p>If there are \\(m\\) constraints that</p> \\[ \\begin{align} g_1(x) &amp;= 0 \\\\ g_2(x) &amp;= 0 \\\\ &amp; \\vdots \\\\ g_m(x) &amp;= 0 \\\\ \\end{align} \\] <p>Then the extremum (if exists) locates at where</p> \\[ \\nabla f + \\lambda_1 \\nabla g_1 + \\lambda_2 \\nabla g_2 + \\cdots + \\lambda_m \\nabla g_m = 0 \\]"},{"location":"Notes/202204301844_lagrange_multiplier/#reference","title":"Reference","text":"<ul> <li>http://mathworld.wolfram.com/LagrangeMultiplier.html</li> <li>https://en.wikipedia.org/wiki/Lagrange_multiplier </li> </ul>"},{"location":"Notes/202204301911_git_quick_reference/","title":"Git Quick Reference","text":""},{"location":"Notes/202204301911_git_quick_reference/#common-diff-options","title":"Common diff options","text":"<pre><code>--numstat       Shows number of added and deleted lines\n\n--name-only     Show only names of changed files.\n\n--name-status   Show only names and status of changed files. \n                See the description of the --diff-filter option \n                on what the status letters mean.\n\n--diff-filter=[(A|C|D|M|R|T|U|X|B)\u2026[*]]\n                Select only files that are Added (A), Copied (C), \n                Deleted (D), Modified (M), Renamed (R), have their \n                type (i.e. regular file, symlink, submodule, \u2026) \n                changed (T), are Unmerged (U), are Unknown (X), or \n                have had their pairing Broken (B).\n\n-S&lt;string&gt;      Look for differences that introduce or remove an \n                instance of &lt;string&gt;.\n\n-G&lt;regex&gt;       Look for differences whose added or removed line \n                matches the given &lt;regex&gt;.\n\n-b\n--ignore-space-change\n                Ignore changes in amount of whitespace.\n\n-w\n--ignore-all-space\n                Ignore whitespace when comparing lines.\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#git-log-formatting","title":"Git Log Formatting","text":"<pre><code>git log --pretty=&lt;format&gt;\n</code></pre> <p>List of the valid <code>&lt;format&gt;</code>:</p> <ul> <li><code>oneline</code></li> <li><code>short</code></li> <li><code>medium</code></li> <li><code>full</code></li> <li><code>fuller</code></li> <li><code>email</code></li> <li><code>raw</code></li> <li><code>format:&lt;string&gt;</code></li> <li><code>tformat:&lt;string&gt;</code></li> </ul> <p><code>format:&lt;string&gt;</code> and <code>tformat:&lt;string&gt;</code> work a bit like <code>printf</code>. User composes <code>&lt;string&gt;</code> to specify how the information should be shown. See Git-log: Pretty Format for the valid placeholders can be used in <code>&lt;string&gt;</code>.</p> <p>The difference between <code>format:&lt;string&gt;</code> and <code>tformat:&lt;string&gt;</code> is that <code>format:&lt;string&gt;</code> uses a separator between commits while <code>tformat:&lt;string&gt;</code> uses a terminator between commits.</p>"},{"location":"Notes/202204301911_git_quick_reference/#git-log-searching","title":"Git Log Searching","text":"<p>Show the commits that that contain/add/remove <code>&lt;string&gt;</code> or <code>&lt;pattern&gt;</code></p> <pre><code>git log -S&lt;string&gt; -i -p\ngit log -G&lt;pattern&gt; -i -p\n</code></pre> <p>Note:</p> <ul> <li>Option <code>-i</code> for case-insensitive search</li> <li>Option <code>-p</code> to show the file diff</li> <li>The results are printed by Unix command <code>LESS</code>, which supports the following commands/operations<ul> <li><code>-i</code>: toggle case-insensitive search</li> <li><code>/</code>: search</li> <li><code>1G</code>, <code>j</code>, <code>k</code>: movement commands like Vim</li> </ul> </li> </ul> <p>Exclude directories or files</p> <pre><code>git log -- . ':!path/to/ignore'\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#some-branch-operations","title":"Some Branch Operations","text":"<p>Rebase branch <code>ABC</code> onto branch <code>master</code></p> <pre><code>git rebase master ABC\ngit rebase master ABC -i\ngit rebase --onto master ABCParent ABC\n</code></pre> <p>The option <code>-i</code> (<code>--interactive</code>) allows user to edit the list of commits to be rebased.</p> <p>NOTE: <code>git merge</code> only merges the specified branches to the current branch. To merge branch <code>ABC</code> into branch <code>master</code>, user has to first change to <code>master</code> and perform <code>git merge</code> with the other branch.</p> <p>Given the following repo graph:</p> <pre><code>  C1 &lt;-- C2 &lt;-- C5 &lt;-- C6 (master)\n           \\\n            \\-- C3 &lt;-- C4 &lt;-- C9 (ABCParent)\n                  \\\n                   \\-- C7 &lt;-- C8 (ABC)\n</code></pre> <p>Rebase commands:</p> <ul> <li><code>git rebase master ABC</code> \"replays\" <code>C3</code>, <code>C7</code>, and <code>C8</code> onto <code>C6</code></li> <li><code>git rebase --onto master ABCParent ABC</code> \"replays\" <code>C7</code>, and <code>C8</code> onto <code>C6</code></li> </ul> <p>Create a new branch <code>ABC</code> at the commit <code>XYZ</code> <pre><code>git branch ABC XYZ\n</code></pre></p> <p>Reset the branch <code>ABC</code> to the commit <code>XYZ</code> <pre><code>git branch -f ABC XYZ\n</code></pre></p> <p>Rename a branch <code>ABC</code> to new name <code>XYZ</code> <pre><code>git branch -m ABC XYZ\n</code></pre></p>"},{"location":"Notes/202204301911_git_quick_reference/#git-bisect","title":"Git Bisect","text":"<pre><code>git bisect start &lt;bad_commit&gt; &lt;good_commit&gt;\n\n# Do bisect using the script. Note that the initial &lt;bad_commit&gt; and &lt;good_commit&gt;\n# are assumed to be correctly labeled and are NOT checked.\ngit bisect run my_script my_script_arguments\n\ngit bisect reset\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#submodule","title":"Submodule","text":"<p>Ref: https://git-scm.com/book/en/v2/Git-Tools-Submodules</p> <pre><code># Clone a repo with submodules\ngit clone --recurse-submodules &lt;repo&gt; &lt;dir&gt;\n\n# Initialize the (nested) submodules in an already cloned repo:\ngit submodule update --init --recursive\n\n# Check out a commit and sync all the submodules to the state associated \n# to that commit\ngit checkout --recurse-submodules &lt;commit&gt;\n\n# Configure git to automatically check out with the --recurse-submodules flag\ngit config submodule.recurse true\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#commit-only-part-of-a-file-interactive-staging","title":"Commit Only Part of a File (Interactive Staging)","text":"<p>Use <code>git add -p file</code> (<code>-p</code> or <code>--patch</code>) to determine whether to stage each hunk of the changes.</p> <p>Use <code>git add -i</code>  (<code>-i</code> or <code>--interactive</code>) to enter a more verbose mode to allow user to select the hunks of the changes from individual files.</p> <p>Git will show a hunk of the change and ask user to select an action upon the shown hunk:</p> <ul> <li>y - stage this hunk</li> <li>n - do not stage this hunk</li> <li>a - stage this and all the remaining hunks in the file</li> <li>d - do not stage this hunk nor any of the remaining hunks in the file</li> <li>g - select a hunk to go to</li> <li>/ - search for a hunk matching the given regex</li> <li>j - leave this hunk undecided, see next undecided hunk</li> <li>J - leave this hunk undecided, see next hunk</li> <li>k - leave this hunk undecided, see previous undecided hunk</li> <li>K - leave this hunk undecided, see previous hunk</li> <li>s - split the current hunk into smaller hunks</li> <li>e - manually edit the current hunk</li> <li>? - print help</li> </ul>"},{"location":"Notes/202204301911_git_quick_reference/#git-sparse-checkout","title":"Git sparse-checkout","text":"<p>Enable the sparse-checkout <pre><code>git config core.sparsecheckout true\n</code></pre></p> <p>The filter file is located at <code>.git/info/sparse-checkout</code>. Each line of <code>.git/info/sparse-checkout</code> defines a filter, and the latter definition overwrites the former ones. For example, the following <code>.git/info/sparse-checkout</code>  will check out all files except those in the folder <code>/Tools/</code> <pre><code>/*              # check out all files\n!/Tools/        # Do not check out the folder /Tools/, this filter\n                # overwrites the filter defined in the above lines.\n</code></pre></p> <p>Update the working tree: <pre><code>git read-tree -mu HEAD\n</code></pre></p>"},{"location":"Notes/202204301911_git_quick_reference/#creating-patch-and-applying-to-a-different-repository","title":"Creating patch and applying to a different repository","text":"<pre><code>git format-patch -k &lt;revision range&gt;\ngit am -3 -k --keep-cr &lt;patches&gt;\n</code></pre> <p><code>git format-patch</code> prepares the commits as patches for e-mail submission</p> <ul> <li>Use <code>-k</code> to instruct git not to add the label <code>[PATCH]</code> in the subject line. This is useful when the commit header also uses the format of <code>[TAG_NAME]</code> to categorize the commit (e.g. <code>[Bug]</code>, <code>[Refactor]</code>).</li> </ul> <p>NOTE: <code>git format-patch</code> generates the patches by specifying the file path with respect to the root of the current git repo. In other words, with the same <code>git format-patch</code> command under a git repo, the patches generated under <code>&lt;GitRepoRoot&gt;/a/b/c</code> are identical with those generated under <code>&lt;GitRepoRoot&gt;</code>.</p> <p><code>git am</code> applies the \"patch emails\" (those generated by <code>git format-patch</code>) to git repository</p> <ul> <li>Use <code>-3</code> to 3-way merge the patch. This option makes <code>git am</code> to try merging when conflict is found.</li> <li>Use <code>-k</code> to instruct git to not remove the email cruft in the subject line. This is useful when the commit header also uses the format of <code>[TAG_NAME]</code>, for git considers those <code>[TAG_NAME]</code> as some crufts to be removed.</li> <li>Use <code>--keep-cr</code> to instruct git to keep the CR when applying the patch. This option will resolve some problems that the patch for a DOS file cannot be applied.</li> <li>Use <code>--ignore-whitespace</code> to workaround some cases that <code>git diff</code> cannot find the context lines in the files to be patched. WARNING: This option may mess the line-endings in the file of DOS format. Use with caution.</li> </ul> <p>NOTE: <code>git am</code> applies the patches by recognizing the file path with respect to the root of the current git repo. In other words, with the same <code>git am</code> command under a git repo, the result of <code>git am</code> will be the same regardless of the current working directory and/or the location of the patch files.</p> <p>While it is undocumented, <code>git format-patch</code> seems to work with the following syntax</p> <pre><code>git format-patch &lt;revision range&gt; &lt;files&gt;\n</code></pre> <p>So the following command generates the patches only related to the files in <code>path/of/interest/</code> and the sub directories:</p> <pre><code>git format-patch -k &lt;revision range&gt; path/of/interest/**\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#applying-patches-to-a-different-repository-with-different-directory-structure","title":"Applying Patches to a different repository with different directory structure","text":"<p>If there are directory changes for the files of interest between the repo to generate the patch and the repo to apply the patch, use <code>-p&lt;N&gt;</code> and <code>--directory=&lt;root&gt;</code> to tweak the path where the patch will be applied.</p> <p>Example 1: We want to apply the change made in <code>&lt;Repo1&gt;/a/b/c/MyFILE</code> to <code>&lt;Repo2&gt;/x/y/z/MyFILE</code>. The corresponding git commands for creating and applying patches will be</p> <pre><code># In &lt;Repo1&gt;\ngit format-patch -k &lt;revision range&gt; a/b/c/MyFILE\n\n# In &lt;Repo2&gt;\ngit am -k -p4 --directory=x/y/z &lt;patches&gt;\n</code></pre> <p>The option <code>-p&lt;N&gt;</code> is to \"remove <code>&lt;N&gt;</code> leading slashes from traditional diff paths.\" Effectively, given the file specified in the patch is at <code>./a/b/c/MyFILE</code> with respect to the root of the git repo:</p> <ul> <li><code>-p1</code>: <code>git am</code> expects to find the file at ./a/b/c/MyFILE (with respect to the root of the git repo)</li> <li><code>-p2</code>: <code>git am</code> expects to find the file at ./b/c/MyFILE</li> <li><code>-p4</code>: <code>git am</code> expects to find the file at ./MyFILE</li> </ul> <p>The option <code>--directory=&lt;root&gt;</code> is to \"prepend <code>&lt;root&gt;</code> to all filenames\", and the prepending takes place after <code>-p&lt;N&gt;</code>. In other words:</p> <ul> <li><code>-p1 --directory=x/y/z</code>: <code>git am</code> expects to find the file at ./x/y/z/a/b/c/MyFILE</li> <li><code>-p4 --directory=x/y/z</code>: <code>git am</code> expects to find the file at ./x/y/z/MyFILE</li> </ul>"},{"location":"Notes/202204301911_git_quick_reference/#controlling-gitk-color","title":"Controlling Gitk Color","text":"<pre><code>$ diff ~/.config/git/gitk.bak ~/.config/git/gitk\n21,22c21,22\n&lt; set bgcolor SystemWindow\n&lt; set fgcolor SystemWindowText\n---\n&gt; set bgcolor black\n&gt; set fgcolor grey\n26c26\n&lt; set diffcolors {red \"#00a000\" blue}\n---\n&gt; set diffcolors {red \"#00a000\" cyan}\n30c30\n&lt; set selectbgcolor SystemHighlight\n---\n&gt; set selectbgcolor blue\n52c52\n&lt; set linkfgcolor blue\n---\n&gt; set linkfgcolor cyan\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#remote","title":"Remote","text":"<p>Ref: * https://git-scm.com/docs/git-remote * http://stackoverflow.com/questions/16408300/what-are-the-differences-between-local-branch-local-tracking-branch-remote-bra</p> <p>Terminology:</p> <ul> <li>Remote repository: A git repo on a remote machine</li> <li>Remote branch: A git branch on the remote repository</li> <li>Remote-tracking branch: A git branch on the local repository set up for tracking a remote branch. This branch usually named in the format of <code>remotes/&lt;RepoName&gt;/&lt;BranchName&gt;</code></li> <li>Local non-tracking branch: A git branch on the local repository that is not set to track any other branch.</li> <li>Local tracking branch: A git branch on the local repository that is set to track another branch (usually a remote-tracking branch).</li> </ul> <p>Start tracking branches in a remote repository</p> <pre><code>git remote add -t &lt;BranchName&gt; -m &lt;MasterBranchName&gt; -f -- &lt;RepoName&gt; &lt;url&gt;\n</code></pre> <ul> <li><code>-t &lt;BranchName&gt;</code>: Specify the branch in the remote repo to be tracked. There can be more than one <code>-t</code>. If no <code>-t</code> is specified, all branches in the remote repo will be tracked.</li> <li><code>-m &lt;MasterBranchName&gt;</code>: Specify the \"master\" branch in the remote repo. Practically, a symbolic-ref <code>refs/remotes/&lt;RepoName&gt;/HEAD</code> will be set up to point at remote\u2019s <code>&lt;MasterBranchName&gt;</code> branch.</li> <li><code>-f</code>: fetch the remote repo after the remote information is set up.</li> <li><code>&lt;RepoName&gt;</code>: The name of the remote repo appearing in the git log.</li> <li>In gitk it appears as <code>remotes/&lt;RepoName&gt;/&lt;BranchName&gt;</code>.</li> <li><code>&lt;url&gt;</code>: The path to the remote repo. It can be a HTTP path or a file path.</li> </ul> <p>Push a new local branch to a remote repository and track it too <pre><code>git push -u &lt;RepoName&gt; &lt;BranchName&gt;\n</code></pre></p> <p>Create a local tracking branch to track a remote-tracking branch: <pre><code>git checkout -b &lt;LocalBranchName&gt; &lt;RepoName&gt;/&lt;BranchName&gt;\n</code></pre> Technically <code>&lt;LocalBranchName&gt;</code> can be different from <code>&lt;BranchName&gt;</code>, but conventionally (and for convenience) <code>&lt;LocalBranchName&gt;</code> tends to be the same as <code>&lt;BranchName&gt;</code>.</p> <p>Stop tracking a remote branch (done by deleting the corresponding remote-tracking branch)</p> <pre><code>git branch -d -r &lt;RepoName&gt;/&lt;BranchName&gt;\n</code></pre> <p>Delete a remote branch</p> <pre><code>git push &lt;RepoName&gt; --delete &lt;BranchName&gt;\n</code></pre> <p>Remove the remote-tracking branches whose corresponding remote branches were deleted in the remote repo</p> <pre><code>git remote prune &lt;RepoName&gt;\ngit fetch -p &lt;RepoName&gt;\ngit pull -p &lt;RepoName&gt;\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#bare-repository","title":"Bare Repository","text":"<p>Change active branch in a bare repository</p> <pre><code>git symbolic-ref HEAD refs/heads/&lt;BranchName&gt;\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#file-listing","title":"File Listing","text":"<p>List the untracked files:</p> <pre><code>git ls-files --others --exclude-standard\n</code></pre> <p>List the staged changes:</p> <pre><code>git diff --cached --name-only\n</code></pre> <p>List the unstaged changes:</p> <pre><code>git diff --name-only\n</code></pre> <p>List the staged/unstaged changes and untracked files (good for checking if there is any uncommitted local changes)</p> <pre><code>git status --porcelain\n</code></pre> <p>List the files in the git repo:</p> <pre><code># List the files under the current directory (recursively)\ngit ls-tree -r HEAD\n\n# List all files regardless of the current directory.\ngit ls-tree -r HEAD --full-tree\n\n# List the files and only print the file path\ngit ls-tree -r HEAD --name-only\n</code></pre>"},{"location":"Notes/202204301911_git_quick_reference/#status-reporting","title":"Status Reporting","text":"<p>Get the name of the current branch (when not on a detached HEAD)</p> <pre><code>git rev-parse --abbrev-ref HEAD\n</code></pre> <p>Show git root directory</p> <pre><code>git rev-parse --show-toplevel\n</code></pre> <p>List all branches that contain commit <code>&lt;commit&gt;</code></p> <pre><code>git branch --contain &lt;commit&gt; # search local branches\ngit branch -r --contain &lt;commit&gt; # search remote-tracking branches\n</code></pre> <p>Find the common ancestor of <code>&lt;commit1&gt;</code> and <code>&lt;commit2&gt;</code>:</p> <pre><code>git merge-base &lt;commit1&gt; &lt;commit2&gt;\n</code></pre> <p>Find merge commit where <code>&lt;commit&gt;</code> is merged into <code>&lt;branch&gt;</code></p> <ul> <li> <p>Option 1:</p> <pre><code>git rev-list &lt;SHA-1_for_c&gt;..master --ancestry-path &gt; a.txt\ngit rev-list &lt;SHA-1_for_c&gt;..master --first-parent &gt; f.txt\ncomm -1 -2 a.txt f.txt\n# The last common line shows the desired merge commit.\n</code></pre> </li> <li> <p>Option 2: use the git alias (adding it to <code>.gitconfig</code>) in bash</p> <pre><code>[alias]\n    find-merge = \"!sh -c 'commit=$0 &amp;&amp; branch=${1:-HEAD} &amp;&amp; (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'\"\n    show-merge = \"!sh -c 'merge=$(git find-merge $0 $1) &amp;&amp; [ -n \\\"$merge\\\" ] &amp;&amp; git show $merge'\"\n</code></pre> </li> </ul>"},{"location":"Notes/202204301911_git_quick_reference/#misc","title":"Misc","text":"<p>Allow empty commit:</p> <pre><code>git commit --allow-empty\n</code></pre> <p>Rediscover lost commits (ref: restoring lost commits)</p> <pre><code>git fsck --lost-found\ngit reflog\n</code></pre> <p>Check out the files modified in <code>COMMIT_X</code>:</p> <pre><code>git checkout -- $(git diff COMMIT_X^ COMMIT_X --name-only --relative)\n</code></pre> <p>Unstage a staged file:</p> <pre><code>git reset FILEPATH\n</code></pre> <p>Detect whether a string is a valid commit</p> <pre><code>git cat-file -t master\ngit cat-file -t 29a8ed626f\n</code></pre> <p>Force to create a merge commit</p> <pre><code>git merge --no-ff\n</code></pre> <p>Overwrite the current commit's timestamp</p> <pre><code>git commit --amend --no-edit --date \"TIMESTAMP\"\n</code></pre> <p>Check if a local branch exists</p> <pre><code>git show-ref --verify --quiet refs/heads/\"&lt;BranchName&gt;\"\n</code></pre> <ul> <li>Recommend to quote <code>&lt;BranchName&gt;</code> in case it contains special characters</li> <li>With <code>--quiet</code>, the command prints nothing regardless of the existence of <code>&lt;BranchName&gt;</code>. Use the returned error code to determine the result<ul> <li>Error code 0: branch exists</li> <li>Error code 256: branch does not exist</li> </ul> </li> <li>Without <code>--quiet</code>, the command prints different message based on the existence of <code>&lt;BranchName&gt;</code>:<ul> <li>branch exists: \"<code>&lt;CommitHash&gt; refs/heads/&lt;BranchName&gt;</code>\"</li> <li>branch does not exist: \"<code>fatal: 'refs/heads/&lt;BranchName&gt;' - not a valid ref</code>\"</li> </ul> </li> </ul> <p>Find large objects in the git repo (Ref: Stackoverflow)</p> <pre><code>git rev-list --objects --all \\\n| git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' \\\n| sed -n 's/^blob //p' \\\n| sort --numeric-sort --key=2 \\\n| cut -c 1-12,41- \\\n| $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest\n</code></pre> <p>Replicate the repo at <code>/path/to/new/repo/</code> with an undesired file (<code>Unwanted.dat</code>) removed: (Ref: Stackoverflow)</p> <pre><code>git filter-branch --prune-empty -d /path/to/new/repo \\\n  --index-filter \"git rm --cached -f --ignore-unmatch Unwanted.dat\" \\\n  --tag-name-filter cat -- --all\n</code></pre>"},{"location":"Notes/202205010852_google_test_quick_reference/","title":"Google C++ Test Quick Reference","text":""},{"location":"Notes/202205010852_google_test_quick_reference/#terminology-definition","title":"Terminology Definition","text":"<p><pre><code>TEST(test_case_name, test_name) {\n ... test body ...\n}\n</code></pre> * <code>TEST()</code> is a marco * There may be multiple tests under one test case.</p>"},{"location":"Notes/202205010852_google_test_quick_reference/#filters","title":"Filters","text":"<ul> <li><code>./foo_test</code> Has no flag, and thus runs all its tests.</li> <li><code>./foo_test --gtest_filter=*</code> Also runs everything, due to the single match-everything * value.</li> <li><code>./foo_test --gtest_filter=FooTest.*</code> Runs everything in test case FooTest.</li> <li><code>./foo_test --gtest_filter=*Null*:*Constructor*</code> Runs any test whose full name contains either \"Null\" or \"Constructor\".</li> <li><code>./foo_test --gtest_filter=-*DeathTest.*</code> Runs all non-death tests.</li> <li><code>./foo_test --gtest_filter=FooTest.*-FooTest.Bar</code> Runs everything in test case FooTest except FooTest.Bar. </li> </ul>"},{"location":"Notes/202205010856_latex_quick_reference/","title":"LaTex Quick Reference","text":""},{"location":"Notes/202205010856_latex_quick_reference/#greek-and-hebrew-letters","title":"Greek and Hebrew letters","text":"\\(\\alpha\\) \\alpha \\(\\beta\\) \\beta \\(\\chi\\) \\chi \\(\\delta\\) \\delta \\(\\epsilon\\) \\epsilon \\(\\eta\\) \\eta \\(\\gamma\\) \\gamma \\(\\iota\\) \\iota \\(\\kappa\\) \\kappa \\(\\lambda\\) \\lambda \\(\\mu\\) \\mu \\(\\nu\\) \\nu \\(o\\) o \\(\\omega\\) \\omega \\(\\phi\\) \\phi \\(\\pi\\) \\pi \\(\\psi\\) \\psi \\(\\rho\\) \\rho \\(\\sigma\\) \\sigma \\(\\tau\\) \\tau \\(\\theta\\) \\theta \\(\\upsilon\\) \\upsilon \\(\\xi\\) \\xi \\(\\zeta\\) \\zeta \\(\\digamma\\) \\digamma \\(\\varepsilon\\) \\varepsilon \\(\\varkappa\\) \\varkappa \\(\\varphi\\) \\varphi \\(\\varpi\\) \\varpi \\(\\varrho\\) \\varrho \\(\\varsigma\\) \\varsigma \\(\\vartheta\\) \\vartheta"},{"location":"Notes/202205010856_latex_quick_reference/#latex-math-constructs","title":"LaTex Math Constructs","text":"\\(\\frac{x}{y}\\) <code>\\frac{x}{y}</code> \\(\\overline{x}\\) <code>\\overline{x}</code> \\(\\underline{x}\\) <code>\\underline{x}</code> \\(\\sqrt{x}\\) <code>\\sqrt{x}</code> \\(\\sqrt[n]{x}\\) <code>\\sqrt[n]{x}</code> \\({n \\choose k}\\) <code>{n \\choose k}</code> ## Delimiters -- -- -- -- -- \\(\\{\\) \\{ \\(\\}\\) \\} \\(\\vert\\) \\vert \\([\\) [ \\(]\\) ] <p>Also the vertical bar (\"|\"): \\(|\\) </p> <p>Use <code>\\left</code> and <code>\\right</code> to pair the delimiters and match their heights:</p> <pre><code>x = \\left[\\begin{array}{cc}\n  1 &amp; 2 \\\\\n  3 &amp; 4 \\\\\n\\end{array}\\right]\n</code></pre> \\[ x = \\left[\\begin{array}{cc}   1 &amp; 2 \\\\   3 &amp; 4 \\\\ \\end{array}\\right] \\] <p>Use <code>\\left.</code> or <code>\\right.</code> to start or end a pair without using a delimiter:</p> <pre><code>\\delta(t) = \\left\\{\\begin{array}{ccl}\n  1 &amp; \\cdots &amp; t = 0 \\\\\n  0 &amp; \\cdots &amp; \\mbox{otherwise}\n\\end{array}\\right.\n</code></pre> \\[ \\delta(t) = \\left\\{\\begin{array}{ccl}   1 &amp; \\cdots &amp; t = 0 \\\\   0 &amp; \\cdots &amp; \\mbox{otherwise} \\end{array}\\right. \\]"},{"location":"Notes/202205010856_latex_quick_reference/#variable-sized-symbols-displayed-formulae-show-larger-version","title":"Variable-sized symbols (displayed formulae show larger version)","text":""},{"location":"Notes/202205010856_latex_quick_reference/#standard-function-names","title":"Standard Function Names","text":"\\(\\operatorname{MyFunc}\\) \\operatorname{MyFunc} \\(\\cos\\) \\cos \\(\\sin\\) \\sin \\(\\exp\\) \\exp \\(\\arg\\) \\arg"},{"location":"Notes/202205010856_latex_quick_reference/#binary-operationrelation-symbols","title":"Binary Operation/Relation Symbols","text":""},{"location":"Notes/202205010856_latex_quick_reference/#operators","title":"Operators","text":"\\(\\ast\\) \\ast \\(\\star\\) \\star \\(\\cdot\\) \\cdot \\(\\circ\\) \\circ \\(\\times\\) \\times"},{"location":"Notes/202205010856_latex_quick_reference/#equal-signs","title":"Equal Signs","text":"\\(\\triangleq\\) \\triangleq \\(\\equiv\\) \\equiv \\(\\cong\\) \\cong \\(\\sim\\) \\sim \\(\\neq\\) \\neq"},{"location":"Notes/202205010856_latex_quick_reference/#arrow-symbols","title":"Arrow symbols","text":""},{"location":"Notes/202205010856_latex_quick_reference/#miscellaneous-symbols","title":"Miscellaneous symbols","text":"\\(\\infty\\) \\infty \\(\\nabla\\) \\nabla \\(\\partial\\) \\partial \\(\\eth\\) \\eth \\(\\forall\\) \\forall \\(\\exists\\) \\exists \\(\\cdots\\) \\cdots \\(\\vdots\\) \\vdots \\(\\ldots\\) \\ldots \\(\\ddots\\) \\ddots \\(\\Im\\) \\Im \\(\\Re\\) \\Re \\(\\imath\\) \\imath \\(\\jmath\\) \\jmath \\(\\ell\\) \\ell"},{"location":"Notes/202205010856_latex_quick_reference/#math-mode-accents","title":"Math mode accents","text":"\\(\\acute{a}\\) \\acute{a} \\(\\breve{a}\\) \\breve{a} \\(\\ddot{a}\\) \\ddot{a} \\(\\grave{a}\\) \\grave{a} \\(\\tilde{a}\\) \\tilde{a} \\(\\bar{a}\\) \\bar{a} \\(\\check{a}\\) \\check{a} \\(\\dot{a}\\) \\dot{a} \\(\\hat{a}\\) \\hat{a} \\(\\vec{a}\\) \\vec{a} \\(\\acute{\\acute{A}}\\) \\acute{\\acute{A}} \\(\\breve{\\breve{A}}\\) \\breve{\\breve{A}} \\(\\ddot{\\ddot{A}}\\) \\ddot{\\ddot{A}} \\(\\grave{\\grave{A}}\\) \\grave{\\grave{A}} \\(\\tilde{\\tilde{A}}\\) \\tilde{\\tilde{A}} \\(\\bar{\\bar{A}}\\) \\bar{\\bar{A}} \\(\\check{\\check{A}}\\) \\check{\\check{A}} \\(\\dot{\\dot{A}}\\) \\dot{\\dot{A}} \\(\\hat{\\hat{A}}\\) \\hat{\\hat{A}} \\(\\vec{\\vec{A}}\\) \\vec{\\vec{A}}"},{"location":"Notes/202205010856_latex_quick_reference/#styles","title":"Styles","text":"\\(\\mathcal{ABC}\\) \\mathcal{ABC} \\(\\mathbb{ABC}\\) \\mathbb{ABC} \\(\\mathfrak{ABC}\\) \\mathfrak{ABC} \\(\\mathsf{ABC}\\) \\mathsf{ABC} \\(\\mathbf{ABC}\\) \\mathbf{ABC}"},{"location":"Notes/202205010856_latex_quick_reference/#array-environment-examples","title":"Array environment, examples","text":"<p>Quick summary</p> <ul> <li>Use <code>\\left</code> + Delimiter and <code>\\right</code> + Delimiter to label the boundary of a block of math. In this way the delimiter will scale properly if the block of math occupies more than one line.</li> <li>Use <code>\\begin{array}</code> and <code>\\end{array}</code> to specify a block of array</li> <li>The curly braces after <code>\\begin{array}</code> specifies the alignment of each entry in a row. <code>{cr}</code> means the first column is center aligned and the 2nd column is aligned to the right.</li> <li>Within the array block, <code>&amp;</code> separates the entry in a row, and <code>\\\\</code> indicates a new row.</li> </ul> <p>Latex code:</p> <pre><code>\\left(\n  \\begin{array}{cc}\n    2\\tau &amp; 7\\phi - \\frac5{12} \\\\  \n    3\\psi &amp; \\frac{\\pi}8\n  \\end{array}\n\\right)\n\\left(\n  \\begin{array}{c}\n    x \\\\\n    y\n  \\end{array}\n\\right)\n~\\mbox{and}~\n\\left[\n  \\begin{array}{cc|r}\n    3 &amp; 4 &amp; 5 \\\\\n    1 &amp; 3 &amp; 729\n  \\end{array}\n\\right]\n</code></pre> <p>Result:</p> \\[ \\left(   \\begin{array}{cc}     2\\tau &amp; 7\\phi - \\frac5{12} \\\\       3\\psi &amp; \\frac{\\pi}8   \\end{array} \\right) \\left(   \\begin{array}{c}     x \\\\     y   \\end{array} \\right) ~\\mbox{and}~ \\left[   \\begin{array}{cc|r}     3 &amp; 4 &amp; 5 \\\\     1 &amp; 3 &amp; 729   \\end{array} \\right] \\]"},{"location":"Notes/202205010856_latex_quick_reference/#misc","title":"Misc","text":""},{"location":"Notes/202205010856_latex_quick_reference/#linebreak","title":"Linebreak","text":"<p>Use <code>\\\\</code></p> <pre><code>\\begin{align}\nx &amp;= 1 \\\\\ny &amp;= 2\n\\end{align}\n</code></pre> \\[ \\begin{align} x &amp;= 1 \\\\ y &amp;= 2 \\end{align} \\]"},{"location":"Notes/202205010856_latex_quick_reference/#alignment","title":"Alignment","text":"<p>Use <code>\\begin{align*}</code> and <code>\\end{align*}</code> to specify the block that requires alignment; use <code>&amp;</code> to specify the location to be aligned. The '*' after 'align' indicates that this equation will not be numbered.</p> <pre><code>\\begin{align*}\n  y &amp;= x + x \\\\\n    &amp;= 2x\n\\end{align*}\n</code></pre> \\[ \\begin{align*}   y &amp;= x + x \\\\     &amp;= 2x \\end{align*} \\]"},{"location":"Notes/202205010856_latex_quick_reference/#equation-box","title":"Equation Box","text":"<pre><code>\\boxed{y = Ax}\n</code></pre> \\[ \\boxed{y = Ax} \\]"},{"location":"Notes/202205010856_latex_quick_reference/#equation-numbering","title":"Equation Numbering","text":"<p>Equation block defined with <code>\\begin{equation}</code> and <code>\\end{equation}</code> will be numbered, while the block defined with <code>\\begin{equation*}</code> and <code>\\end{equation*}</code> will not. Same syntax applies to <code>\\begin{align*}</code></p>"},{"location":"Notes/202205010856_latex_quick_reference/#spacing","title":"Spacing","text":"<pre><code>1 \\, 2\n1 \\! 2\n1 \\&gt; 2\n1 \\; 2\n1 \\quad 2\n1 \\qquad 2\n</code></pre> \\[ \\begin{align} &amp; 1 \\, 2 \\\\ &amp; 1 \\! 2 \\\\ &amp; 1 \\&gt; 2 \\\\ &amp; 1 \\; 2 \\\\ &amp; 1 \\quad 2 \\\\ &amp; 1 \\qquad 2 \\\\ \\end{align} \\]"},{"location":"Notes/202205010856_latex_quick_reference/#entering-text","title":"Entering text","text":"<p>use <code>\\text</code> <pre><code>Y(k) = \\text{DFT of} \\; y(n)\n</code></pre></p> \\[ Y(k) = \\text{DFT of} \\; y(n) \\]"},{"location":"Notes/202205010856_latex_quick_reference/#reference","title":"Reference","text":"<ul> <li>Latex Mathematical Symbols</li> </ul>"},{"location":"Notes/202205022339_linux_command_quick_reference/","title":"Linux Command Quick Reference","text":""},{"location":"Notes/202205022339_linux_command_quick_reference/#find-files","title":"Find Files","text":"<p>Search Specific Types of Files that Contains a Keyword</p> <pre><code># Case sensitive\ngrep -r -e &lt;RegExpPattern&gt; --include=*.{cpp,h}\ngrep -r -e &lt;RegExpPattern&gt; --include=\"*.cpp\" --include=\"*.h\"\n\n# Case insensitive\ngrep -r -i -e &lt;RegExpPattern&gt; --include=*.{cpp,h}\n</code></pre> <p>Note: The following syntax does not work</p> <pre><code>grep -r -e &lt;RegExpPattern&gt; --include=\"*.{cpp,h}\"\n</code></pre> <p>Find all the files under <code>path/to/dir</code> that are modified within N days </p> <pre><code>find path/to/dir -mtime -N -ls\n</code></pre> <p>Find all the files under <code>path/to/dir</code> that are modified older than (N+1) days </p> <pre><code>find path/to/dir -mtime +N -ls\n</code></pre> <p>Find all .cpp and .h files whose permission is rw for user <pre><code>find . -type f -iregex \".\\*\\\\.\\\\(cpp\\\\|h\\\\)\" -perm -u=rw\n</code></pre></p>"},{"location":"Notes/202205022339_linux_command_quick_reference/#search-a-binary-file-or-utf-16-file","title":"Search a Binary File or UTF-16 File","text":"<p>Convert utf-16 file to utf-8 before using grep</p> <pre><code>iconv -f utf-16 -t utf-8 file.txt | grep -e &lt;RegExpPattern&gt;\n</code></pre> <p>Search a binary file as text <pre><code>grep --text -e &lt;RegExpPattern&gt; file.bin\n</code></pre></p>"},{"location":"Notes/202205022339_linux_command_quick_reference/#split-a-string-eg-path-into-multiple-lines","title":"Split a String (e.g. <code>$PATH</code>) into Multiple Lines","text":"<pre><code>echo $PATH | tr ':' '\\n'\n</code></pre>"},{"location":"Notes/202205022339_linux_command_quick_reference/#count-the-lines-of-cpp-codes-in-a-folder","title":"Count the lines of CPP codes in a folder","text":"<pre><code>find . -name '*.cpp' -o -name '*.h' | xargs wc -l\n</code></pre>"},{"location":"Notes/202205022339_linux_command_quick_reference/#use-of-xargs","title":"Use of <code>xargs</code>","text":"<p>Delete all the <code>.c</code> files</p> <pre><code>find . -name \"*.c\" -print0 | xargs -0 rm -rf\n</code></pre> <p>Append <code>.bak</code> to all the <code>.c</code> files</p> <pre><code>find . -name \"*.c\" -print0 | xargs -0 -I '{}' mv '{}' '{}'.bak\n</code></pre> <p>Find all <code>.c</code> files that contain string 'stdlib.h'</p> <pre><code>find . -name '*.c' | xargs grep 'stdlib.h'\n</code></pre>"},{"location":"Notes/202205022339_linux_command_quick_reference/#use-of-sed","title":"Use of <code>sed</code>","text":"<p>(To be edited)</p>"},{"location":"Notes/202205022339_linux_command_quick_reference/#reading-binary-file","title":"Reading Binary file","text":"<p>Print the first 44 bytes in hex, starting from 20th byte, 16 bytes each line</p> <pre><code>xxd -s 20 -l 44 -c 16 MyFile.bin\n</code></pre>"},{"location":"Notes/202205022339_linux_command_quick_reference/#reading-text-filepipe","title":"Reading text file/pipe","text":"<p>Print the first 3 lines or the last 3 lines of the file</p> <pre><code>head -n 3 MyFile.txt\ntail -n 3 MyFile.txt\n</code></pre> <p>Print the first 100 bytes or the last 100 bytes of the file</p> <pre><code>head -c 100 MyFile.txt\ntail -c 100 MyFile.txt\n</code></pre> <p>Print only the first 3 <code>ls -l</code> result</p> <pre><code>ls -l *.txt | head -n 3\n</code></pre>"},{"location":"Notes/202205022339_linux_command_quick_reference/#diff-the-stdout-of-two-commands","title":"Diff the STDOUT of two commands","text":"<pre><code>diff &lt;(command1) &lt;(command2)\ndiff &lt;(ll *.wav) &lt;(ll *.txt)\n</code></pre>"},{"location":"Notes/202205022343_math_signs_symbols_notations/","title":"Mathematical Signs, Symbols, and Notations","text":""},{"location":"Notes/202205022343_math_signs_symbols_notations/#sets","title":"Sets","text":"Symbol Symbol in Tex Explanation \\(\\mathbb{B}\\) \\mathbb{B} The set of boolean values (0,1) \\(\\mathbb{C}\\) \\mathbb{C} The set of complex values \\(\\mathbb{N}\\) \\mathbb{N} The set of natural numbers (0,1,2,...) \\(\\mathbb{Q}\\) \\mathbb{Q} The set of rational numbers \\(\\mathbb{R}\\) \\mathbb{R} The set of real numbers \\(\\mathbb{R}_{&gt; 0}\\) \\mathbb{R}_{&gt; 0} The set of positive real numbers \\(\\mathbb{Z}\\) \\mathbb{Z} The set of integers \\(\\mathbb{Z}_p\\) \\mathbb{Z}_p The set of integers modulo \\(p\\) (0,1,2,...,p-1) \\(\\mathbb{Z}^+\\) \\mathbb{Z}^+ The set of positive integers \\(\\mathbb{Z}^*\\) \\mathbb{Z}^* The set of nonzero integers"},{"location":"Notes/202205022343_math_signs_symbols_notations/#notations","title":"Notations","text":"Notation Explanation \\(i \\in \\mathbb{Z} : i \\in \\left[1, N \\right]\\) \\(i\\) is an integer such that \\(i\\) is within interval 1, N"},{"location":"Notes/202205022343_math_signs_symbols_notations/#reference","title":"Reference","text":"<ul> <li>ISO 31-11</li> <li>List of mathematical symbols </li> <li>https://math.stackexchange.com/questions/tagged/notation </li> </ul>"},{"location":"Notes/202205022348_matlab_quick_reference/","title":"Matlab Quick Reference","text":""},{"location":"Notes/202205022348_matlab_quick_reference/#using-waitbar","title":"Using <code>waitbar</code>","text":"<pre><code>h = waitbar(0,'');\nset(findall(h,'type','text'),'Interpreter','none');\nfor n=1:10\n    waitbar(n/10, h, sprintf(Progress: %d/10,n) );\nend\nclose(h)\n</code></pre>"},{"location":"Notes/202205022348_matlab_quick_reference/#plot-a-data-like-a-heat-map","title":"Plot a data like a heat map","text":"<p>Use imagesc:</p> <pre><code>data = load('some_csv_file.csv');\nimagesc(data);\ncolorbar;        % Add a colorbar to the plot\ncolormap('jet'); % Change the color map to \"jet\" type\ncaxis([-5 -2]);  % Set the range of values mapped by the colormap.\naxis xy;         % change the direction of y-axis\n</code></pre>"},{"location":"Notes/202205022348_matlab_quick_reference/#print-the-current-figure-to-file","title":"Print the current figure to file","text":"<pre><code>isOctave = exist('OCTAVE_VERSION', 'builtin') ~= 0;\nfigHandle = gcf;\nif(isOctave)\n  print( sprintf('-f%d', figHandle.Number), '-djpg', print_fpath,  '-S800,600' );\nelse\n  figHandle.PaperUnits = 'points';\n  figHandle.PaperPosition = [0,0, figHandle.Position(3:4)]*3/4;\n  figHandle.PaperSize = figHandle.Position(3:4)*3/4;\n  figHandle.PaperPositionMode = 'manual';\n  print( sprintf('-f%d', figHandle.Number), '-djpeg90', '-r0', print_fpath);\nend\n</code></pre> <p>The flag <code>-r0</code> sets the resolution to be the screen resolution. And configuring <code>PaperPosition</code> and <code>PaperSize</code> based on <code>Position</code> allows the output image size to be consistent with the image shown on the screen (here the <code>figHandle.Units</code> is assumed to be <code>Pixels</code> by default). A magic scaling factor of 3/4 is required in order to print an N-pixel image on screen to an N-pixel image in file. Whether this scaling factor is related to the screen resolution (after setting the <code>-r0</code> flag) is to be investigated.</p>"},{"location":"Notes/202205022348_matlab_quick_reference/#link-all-x-axis","title":"Link all X axis","text":"<pre><code>figHandles = findobj('Type','figure');\nhall = findall(figHandles,'type','axes','tag','');\nlinkaxes(hall, 'x');\n</code></pre> <p>Use the criteria of empty <code>'tag'</code> to filter out the axis handles that are the legends.</p>"},{"location":"Notes/202205022348_matlab_quick_reference/#set-yscale-to-log-in-a-histogram-plot","title":"Set yscale to log in a Histogram Plot","text":"<pre><code>axHandle = gca;\n\n% A code snippet from MathWork to make the plot work with logscale on\n% Y-axis\nph = get(axHandle,'children');\n% Determine number of histogram patches\nN_patches = length(ph);\nfor i = 1:N_patches\n    % Get patch vertices\n    vn = get(ph(i),'Vertices');\n    % Adjust y location\n    vn(:,2) = vn(:,2) + 1;\n    % Reset data\n    set(ph(i),'Vertices',vn)\nend\nset(axHandle,'yscale','log')\n</code></pre>"},{"location":"Notes/202205022348_matlab_quick_reference/#create-a-circulant-matrix-from-a-vector","title":"Create a Circulant Matrix from a Vector","text":"<p>To create a circulant matrix like the following:</p> \\[ \\left[ \\begin{array}{ccccc}   1  &amp;  16 &amp; 8  &amp;  4  &amp;  2  \\\\   2  &amp;  1  &amp; 16 &amp;  8  &amp;  4  \\\\   4  &amp;  2  &amp; 1  &amp; 16  &amp;  8  \\\\     8  &amp;  4  &amp; 2  &amp;  1  &amp; 16  \\\\   16 &amp;  8  &amp; 4  &amp;  2  &amp;  1   \\end{array}   \\right] \\] <p>Run</p> <pre><code>x = [1 2 4  8 16];\na = gallery('circul', x);\n</code></pre> <p>Note: if <code>x</code> is an array, <code>gallery()</code> will first convert it to a vector (equivalent to <code>x(:)</code>).</p>"},{"location":"Notes/202205022348_matlab_quick_reference/#running-from-perl-and-keeping-perl-waiting-until-matlab-is-done","title":"Running from Perl and Keeping Perl Waiting until Matlab is done","text":"<pre><code>system(\"matlab -nodisplay -nosplash -nodesktop -wait -r \\\"run myscript; exit\\\"\");\n</code></pre> <p>Without the flags of <code>-nodisplay -nosplash -nodesktop -wait</code>, Perl runs Matlab in a forked process and will not wait for Matlab to finish its run.</p>"},{"location":"Notes/202205022348_matlab_quick_reference/#reference","title":"Reference","text":"<ul> <li>List of matrices </li> </ul>"},{"location":"Notes/202205030007_perl_quick_reference/","title":"Perl Quick Reference","text":""},{"location":"Notes/202205030007_perl_quick_reference/#matchsearch","title":"Match/Search","text":"<pre><code>my $PATTERN = \"PATTERNS\" #See following examples\n$SEARCHING_STRING =~ m/$PATTERN/ #This will return the match result\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#quantifiers","title":"Quantifiers","text":"<p>Ref: Quantifiers</p> <pre><code>*           Match 0 or more times\n##           Match 1 or more times\n?           Match 1 or 0 times\n{n}         Match exactly n times\n{n,}        Match at least n times\n{n,m}       Match at least n but not more than m times\n</code></pre> <p>Example</p> <pre><code>my $PATTERN = \"mz*r\"; # Matches \"mr\", \"mzr\", \"mzzr\", \"mzzzzzzzr\"\nmy $PATTERN = \"mz+r\"; # Matches \"mzr\", \"mzzr\", \"mzzzzzzzr\", but not \"mr\"\nmy $PATTERN = \"mz{2, 4}r\"; # Matches \"mzzr\", \"mzzzr\", \"mzzzzr\"\nmy $PATTERN = \"m(zz)*r\"; # Matches \"mr\", \"mzzr\", \"mzzzzr\", but not \"mzzzr\"\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#metacharacters","title":"Metacharacters","text":"<pre><code>\\     Quote the next metacharacter\n^     Match the beginning of the line (if ^ appears at the beginning of the regular expression)\n.     Match any character (except newline)\n$     Match the end of the line or before newline at the end (if $ appears at the end of the regular expression)\n|     Alternation\n()    Grouping\n[]    Character class\n</code></pre> <p>To find a pattern with \"zz\" OR \"qq\", \"is\" OR \"was\": use |</p> <pre><code>my $PATTERN = \"m(zz|qq)r\";\nmy $PATTERN = \"It (is|was) a good choice\";\n</code></pre> <p>To find any element of a set: use [ ], and - to describe a range</p> <pre><code>my $PATTERN = \"[a-zA-Z_]\"; # a,b,c,...,z and A,B,C,...,Z and _\nmy $PATTERN = \"[0-9]\"; # 0,1,2,...,9\nmy $PATTERN = \"[!@#$\\-%^]\" # Note that if you want to include \"-\", you need to type \"\\-\"\n</code></pre> <p>To find any element NOT in a set: use [ ] with ^ AT THE BEGINNING</p> <pre><code>my $PATTERN = \"[^13579] # anything NOT 1,3,5,7,9\n</code></pre> <p>To find all char: use .</p> <pre><code>my $PATTERN = \"m.r\" # \"m r\", mar, mBr, m#r, m2r will match.\n</code></pre> <p>To find char .: use [.]</p> <pre><code>my $PATTERN = \"m[.]r\" # now only m.r will match.\n</code></pre> <p>To ignore char case: use /$PATTERN/i</p> <pre><code>$SEARCHING_STRING =~ m/$PATTERN/i\n</code></pre> <p>To ignore line changing: use /$PATTERN/s</p> <pre><code>my $SEARCHING_STRING = \"I changed \\n a \\n line.\";\nmy $PATTERN = \"changed.*line\"; #Notice that by using .* we allows any number of any char between \"changed\" and \"line\"\n$SEARCHING_STRING =~ m/$PATTERN/s\n#you can ignore char case and line changine by using /$PATTERN/is\n</code></pre> <p>To recursively find all matching pattern: use /$PATTERN/g</p>"},{"location":"Notes/202205030007_perl_quick_reference/#regexp-quote-like-operators","title":"Regexp Quote-Like Operators","text":"<p>Use <code>qr//</code> to define a variable to be used as the regular expression pattern later.</p> <pre><code>my $re = qr/my.STRING/is;\n$string =~ /foo${re}bar/;\n$string =~ /$re/;\n</code></pre> <p>See http://perldoc.perl.org/perlop.html#Regexp-Quote-Like-Operators</p>"},{"location":"Notes/202205030007_perl_quick_reference/#named-capture-group","title":"Named Capture Group","text":"<p>Use the syntax <code>(?&lt;name&gt;...)</code> to associate the capture group with a name.</p> <pre><code>my $date = '2015-01-02';\n$date =~ m/ (?&lt;year&gt;\\d+) \\-\n            (?&lt;month&gt;\\d+) \\-\n            (?&lt;day&gt;\\d+)\n          /x;\n\n# Obtain the named capture group from system variable %+\nmy $day = $+{day};\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#use-variables-as-literal-in-match-operator","title":"Use Variables as Literal in Match Operator","text":"<p>Sometimes user wants to match a <code>$variable</code> with <code>$variable</code> being treated as a literal string (e.g. matching the file path without Perl seeing '\\' and '/' as special character). To do so, use one of the following approaches:</p> <ul> <li> <p>Approach 1: Use <code>quotemeta()</code> to escape the string</p> <pre><code>my $variable = \"path/to/file\";\n$variable = quotemeta($variable);\n$file =~ /$variable/;\n</code></pre> </li> <li> <p>Approach 2: Use <code>\\Q \\E</code></p> <pre><code>my $variable = \"path/to/file\";\n$file =~ /\\Q$variable\\E/;\n</code></pre> </li> </ul>"},{"location":"Notes/202205030007_perl_quick_reference/#reference","title":"Reference","text":""},{"location":"Notes/202205030007_perl_quick_reference/#reference-declaration","title":"Reference declaration","text":"<pre><code>$scalarref = \\$foo;\n$arrayref = \\@array;\n$href = \\%hash;\n$coderef = \\&amp;handler;\n$globref = \\*foo;\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#initialize-a-reference-of-an-anonymous-array-or-hash","title":"Initialize a reference of an anonymous array or hash","text":"<pre><code># Use (a,b,c) to initialize an array\n# Use [a,b,c] to initialize a reference of an anonymous array\n$arrayref = [1, 2, ['a', 'b', 'c']];\n$arrayref = [ @array ]; # A new array reference having all data in @array\n\n# Use ('key' =&gt; 'val') to initialize an hash\n# Use {'key' =&gt; 'val'} to initialize an reference of an anonymous hash\n$href = {\n'Adam' =&gt; 'Eve',\n'Clyde' =&gt; 'Bonnie'\n};\n$href = { %hash }; # A new ha    sh reference having all data in %hash\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#rules-using-reference","title":"Rules using Reference","text":"<ol> <li>Anywhere you'd put an identifier (or chain of identifiers) as part of a variable or subroutine name, you can replace the identifier with a simple scalar variable containing a reference of the correct type. The dereference of the scalar variable happens before it does any key lookups.</li> <li>Anywhere you'd put an identifier (or chain of identifiers) as part of a variable or subroutine name, you can replace the identifier with a BLOCK returning a reference of the correct type.</li> <li>The left side of the arrow can be any expression returning a reference, including a previous dereference. Also, The arrow is optional between brackets subscripts.</li> </ol>"},{"location":"Notes/202205030007_perl_quick_reference/#access-the-reference-of-a-hash","title":"Access the reference of a hash","text":"<pre><code>%hash = %$href; # '$href' replaces the hash variable name. See Rule 1.\n$value = $href-&gt;{$key}; # '-&gt;' dereferences $href. See Rule 3\n$value = $$href{$key};\n@slice = @$href{$key1, $key2, $key3}; # note: no arrow!\n@keys = keys %$href;\n</code></pre> <p>For details, visit: http://perldoc.perl.org/perlref.html</p>"},{"location":"Notes/202205030007_perl_quick_reference/#array","title":"Array","text":""},{"location":"Notes/202205030007_perl_quick_reference/#initialization","title":"Initialization","text":"<pre><code>my @array = (1,2,3,4);\nmy @array = (1...4);\nmy @array = qw/first second third/;\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#useful-array-operations","title":"Useful Array Operations","text":"<pre><code>my $arrsize = scalar @array; # Array size.\nmy $arrsize = @array;  # assigning an array to a scalar gives you its element count\nmy $lastindex = $#array;\nmy @arrayAB = (@arrayA, @arrayB); # merging\nmy $Third_to_the_last = $array[-3]; # Accessing n-th to the last element\nmy @removed_items = splice( @array, offset, length, @replaced_with ); # Remove (or replaced with @replace_with) $array[offset] ~ $array[offset+length-1]\ndelete $array[0]; # deleting an element\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#array-of-reference","title":"Array of reference","text":"<pre><code>my @list = (\\$a, \\@b, \\%c);\nmy @list = \\($a, @b, %c); # same thing!\n</code></pre> <p>Array of arrays: (The element of the array is references to arrays, not arrays) Array of hashes: (The element of the array is references to hashes, not hashes)</p> <p>If you want to have an array to access multiple hashes, use reference of hashes as the entry of the array:</p> <pre><code>push(@array, {%hash} )\n</code></pre> <p>DO NOT write like the followings:</p> <pre><code>push(@array, %hash) # (See \"Assign a hash to an array\")\npush(@array, \\%hash) # This will not copy the input hash but only record the address of the given hash.\n</code></pre> <p>Assign a hash to an array:</p> <pre><code>my @array = %hash;\n# The resulting @array will be:\n# $array[0] = $key_0, $array[1] = $hash{ $key_0 }\n# $array[2] = $key_1, $array[3] = $hash{ $key_1 }\n# ...\n# However, $key_0 is not necessary the first key when %hash is initialized.\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#hash","title":"Hash","text":"<pre><code>my %hash = ();\n%hash = ( 'key1', 'value1', 'key2', 'value2', 'key3', 'value3');\n%hash = ( 'key1' =&gt; 'value1',\n'key2' =&gt; 'value2',\n'key3' =&gt; 'value3' );\n$hash{ $key } = $value;\nmy %hash_copy = %hash;\ndelete $hash{$key}\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#useful-hash-operations","title":"Useful Hash Operations","text":"<p>Hash size</p> <pre><code>my $hash_size = keys( %hash );\n</code></pre> <p>Process through each keys</p> <pre><code>while ( my ($key, $value) = each(%hash) ) { print \"$key =&gt; $value\\n\"; }\nfor my $key ( keys %hash ) {\n    my $value = $hash{$key};\n    print \"$key =&gt; $value\\n\";\n}\n</code></pre> <p>3 status of the hash keys</p> <pre><code>if exists $hash{ $key };           # check the existence of the key. the corresponding value may be undefined\nif defined $hash{ $key };\nif $hash{ $key };\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#hash-references","title":"Hash references","text":"<pre><code>my $href = 0;\n$href = \\%hash;\n$href-&gt;{ $key } = $value; # $hash_ref is a reference of a hash.\nmy $href_copy = $href;\nmy $href_size = 0; $href_size += scalar keys %$href;\ndelete $href-&gt;{$key};\nwhile ( my ($key, $value) = each(%$href) ) { print \"$key =&gt; $value\\n\"; }\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#string","title":"String","text":"<p>(Ref: \"Learning Perl\", 3rd edition, Chap 2.3)</p>"},{"location":"Notes/202205030007_perl_quick_reference/#single-quoted-string","title":"Single-quoted String","text":"<p>Rule: Any character other than a single quote (') or a backslash () between the quote marks (including newline characters, if the string continues onto successive lines) stands for itself inside a string.</p> <p>Examples:</p> Single-quoted String Represents Char Count 'can\\'t' can't 5 'line1 _ line2' line1 _ line2 11 (including newline) 'blah\\blah' blah\\blah 9 'blah\\blah' blah\\blah 9 <p>It is recommended to always use double backslash (\\) in the single-quoted string to represent one backslash to avoid confusion.</p>"},{"location":"Notes/202205030007_perl_quick_reference/#double-quoted-string","title":"Double-quoted String","text":"<p>Double-quoted string uses backslah () to specify the control characters. The supported control characters are:</p> Control character Description \\n Newline \\r Carriage Return \\t Tab \\f Formfeed \\b Backspace \\a Bell \\e Escape (ASCII escape character) \\007 Any octal ASCII value (here, 007 = bell) \\x7f Any hex ASCII value (here, 7f = delete) \\cC A \"control\" character (here, Ctrl-C) \\ Backslash \\\" Double quote \\l Lowercase next letter \\L Lowercase all following letters until \\E \\u Uppercase next letter \\U Uppercase all following letters until \\E \\Q Quote non-word characters by adding a backslash until \\E \\E Terminate \\L, \\U, or \\Q"},{"location":"Notes/202205030007_perl_quick_reference/#string-input","title":"String Input","text":"<pre><code>my $STORE_VAR = &lt;STDIN&gt;\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#loops","title":"Loops","text":"<p><code>while</code> and <code>until</code></p> <pre><code>while (CONDITION) { ROUTINE } #Keep doing \"ROUTINE\" before CONDITION fails.\nuntil (CONDITION) { ROUTINE } #Keep doing \"ROUTINE\" before CONDITION comes true.\n</code></pre> <p>Loop variables: <code>next, last, redo:</code></p> <pre><code>while (EXPR) {\n    ### redo always comes here\n    do_something;\n} continue {\n    ### next always comes here (both next and normal while loop come here)\n    do_something_else;\n    # then back the top to re-check EXPR\n}\n### last always comes here\n</code></pre> <p><code>foreach</code>:</p> <pre><code>foreach $item (@array) { ... }\n</code></pre> <p>Rewrite each array element using <code>for</code> loop:</p> <pre><code>@data = (1..100);\nfor (@data){ $_ = sprintf '%03d', $_; }\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#special-character","title":"Special character","text":"<pre><code>\\t tab (HT, TAB)\n\\n newline (LF, NL)\n\\r return (CR)\n\\f form feed (FF)\n\\a alarm (bell) (BEL)\n\\e escape (think troff) (ESC)\n\\033 octal char (think of a PDP-11)\n\\x1B hex char\n\\x{263a} wide hex char (Unicode SMILEY)\n\\c[ control char\n\\N{name} named char\n\\l lowercase next char (think vi)\n\\u uppercase next char (think vi)\n\\L lowercase till \\E (think vi)\n\\U uppercase till \\E (think vi)\n\\E end case modification (think vi)\n\\Q quote (disable) pattern metacharacters till \\E\n\\w Match a \"word\" character (alphanumeric plus \"_\")\n\\W Match a non-\"word\" character\n\\s Match a whitespace character (space, tab, newline)\n\\S Match a non-whitespace character\n\\d Match a digit character\n\\D Match a non-digit character\n\\pP Match P, named property. Use \\p{Prop} for longer names.\n\\PP Match non-P\n\\X Match eXtended Unicode \"combining character sequence\",\nequivalent to (?:\\PM\\pM*)\n\\C Match a single C char (octet) even under Unicode.\nNOTE: breaks up characters into their UTF-8 bytes,\nso you may end up with malformed pieces of UTF-8.\nUnsupported in lookbehind.\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#predefined-variable","title":"Predefined Variable","text":"Variable Comment $! Error messages @ARGV Program arguments @_ Within a subroutine the array @_ contains the parameters passed to that subroutine $ARG, $_ The default input and pattern-searching space $ltdigitsgt Contains the subpattern from the corresponding set of parentheses in the last pattern matched, not counting patterns matched in nested blocks that have been exited already. (Mnemonic: like \\digits.) These variables are all read-only. $MATCH, $&amp; The string matched by the last successful pattern match (not counting any matches hidden within a BLOCK or eval() enclosed by the current BLOCK) $PREMATCH, $` The string preceding whatever was matched by the last successful pattern match (not counting any matches hidden within a BLOCK or eval enclosed by the current BLOCK) $POSTMATCH, $' The string following whatever was matched by the last successful pattern match (not counting any matches hidden within a BLOCK or eval() enclosed by the current BLOCK) $PROGRAM_NAME, $0 Contains the name of the file containing the Perl script being executed. $[ The index of the first element in an array, and of the first character in a substring. Default is 0. (You can set to 1 ot make Perl behave more like Matlab) $OSNAME, $^O The name of the operating system under which this copy of Perl was built. <code>MSWin32</code> for windows, <code>msys</code> for Git for Windows, <code>linux</code> for linux, and <code>darwin</code> for Mac OS X. $CHILD_ERROR, $? The status returned by the last pipe close, backtick (`` ) command, successful call to wait() or waitpid(), or from the system() operator. <p>Note: <code>@ARGV</code> is different from C tradition. Perl tradition:</p> <pre><code>@program.pl A B C D@\n$ARGV[0] = A\n</code></pre> <p>C tradition:</p> <pre><code>program.exe A B C D\nargv[0] = program.exe\n</code></pre> <p>Note: The following pairs are equivalent:</p> Implementation 1 Implementation 2 while (&lt;&gt;) while (defined($_ = &lt;&gt;)) /^Subject:/ $_ =~ /^Subject:/ tr/a-z/A-Z/ $_ =~ tr/a-z/A-Z/ chop chop($_) <p>Example of $MATCH, $PREMATCH, and $POSTMATCH:</p> <pre><code>$_ = 'abcdefghi';\n/def/;\nprint \"$`:$&amp;:$'\\n\"; # prints abc:def:ghi\n</code></pre> <p>For details and other predefined variables, visit: http://www.perl.com/doc/manual/html/pod/perlvar.html</p>"},{"location":"Notes/202205030007_perl_quick_reference/#filedirectory-operations","title":"File/Directory Operations","text":"<p>Open a directory:</p> <pre><code>$dirpath = \"/home/username/public_html/$DirName\";\nopendir(my $DirHandle,$dirpath);\n</code></pre> <p>Get filenames from a opened directory:</p> <p><pre><code>@filenames = ( sort readdir($DirHandle) );\n</code></pre> or</p> <pre><code>while (defined($file = readdir($DirHandle))) { ... }\n</code></pre> <p>Basic file system operations</p> <pre><code># create the directories if they don't exist before (similar to \"mkdir -p\" in Linux)\nuse File::Path qw(make_path);\nmake_path(\"$path\"); # double quote the path to handle whitespace.\n\n# copy\nuse File::Copy;\ncopy(\"$src\", \"$dest\"); # double quote the path to handle whitespace.\n\n# copy entire directory\nuse File::Copy::Recursive qw(dircopy);\ndircopy(\"$src_dir\", \"$dest_dir\");\n\n# rename\nrename(\"$oldname\", \"$newname\")\n\n# delete file\nunlink $path;\n\n# delete empty directory\nrmdir $path;\n\n# delete nonempty directory\nuse File::Path qw(remove_tree)\nremove_tree $path;\n</code></pre> <p>Convert the Linux/UNIX path to DOS/Windows path</p> <pre><code>use File::Spec\nFile::Spec-&gt;canonpath($path)\n</code></pre> <p>Check if the variable is a valid filename/directory</p> <pre><code>if -f $file\nif -d $fdir\n# When the argument of -f test (-d test) is not given, the default argument is $_. Therefore in a subroutine you can write:\n# sub findfile {\n#     return if -d\n# }\n# where the first argument of subroutine \"findfile\" is the testing filename\n</code></pre> <p>Seperate the base, dir, and extension of an given entire filename ($file):</p> <pre><code>use File::Basename\nmy ($base, $dir, $ext) = fileparse($file,\"\\.[^.]*\");\n</code></pre> <p>Find a file in given directories (@dirs) and perform some wanted task on it:</p> <pre><code>use File::Find;\nfind(\\&amp;Wanted, @dirs);\n# When subroutine \"Wanted\" is called:\n# $_ is set to the current file name\n# $File::Find::dir is set to the current directory\n# $File::Find::name is set to \"$File::Find::dir/$_\"\n# you are chdir()'d to $File::Find::dir\n# If Wanted() sets $File::Find::prune on a directory, then find() will not descend into that directory.\n</code></pre> <p>List files of specific pattern</p> <pre><code>my @perl_files = glob(\"*.pl\");\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#options","title":"Options","text":""},{"location":"Notes/202205030007_perl_quick_reference/#short-options","title":"Short options","text":"<pre><code>use Getopt::Std;\nmy %OPTS;\ngetopts('a:bcr:', \\%OPTS);\nmy $fr = ( defined($OPTS{'r'}))? $OPTS{'r'} : $ARGV[0];\n# abcr are vaild options, 'a' and 'r' , if used, requires an argument.\n# Use function \"defined($OPTS{'r'})\" to check if the options -r is used\n# If used, the argument (if required) will be the value of $OPTS{'r'}\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#long-options","title":"Long options","text":"<p>http://perldoc.perl.org/Getopt/Long.html</p> <pre><code>use Getopt::Long;\nmy $data   = \"file.dat\";\nmy $length = 24;\nmy $weight = 0.0;\nmy $verbose;\nmy @lib;\nmy $libArrRef;\nmy %def;\nmy $defHashRef;\nGetOptions (\"length=i\"   =&gt; \\$length,     # numeric, integer\n            \"length=o\"   =&gt; \\$length,     # numeric, Perl-style extended integer\n            \"weight:f\"   =&gt; \\$weight,     # numeric, floating point, the option value is optional (user can use --weight without providing the value)\n            \"file=s\"     =&gt; \\$data,       # string\n            \"verbose\"    =&gt; \\$verbose,    # flag\n            \"library=s\"  =&gt; \\@lib,        # string, accept multiple input\n            \"library=s@\" =&gt; \\$libArrRef,  # string, accept multiple input\n            \"define=s\"   =&gt; \\%def,        # string, assign value of the form \"key=value\" to the hash\n            \"define=s%\"  =&gt; \\$defHashRef  # string, assign value of the form \"key=value\" to the hash\n) or die(\"Error in command line arguments\\n\");\n</code></pre> <p>Example of the option with no value:</p> <pre><code>Define:\n  GetOptions(\"verbose\" =&gt; \\$verbose);\nUsage:\n  --verbose\n</code></pre> <p>Example of the option with one value:</p> <pre><code>Define:\n  GetOptions(\"file=s\"     =&gt; \\$data);       # string\nUsage:\n  --file myfile.txt\n</code></pre> <p>Example of the option with one value, with the option value being optional</p> <pre><code>Define:\n  GetOptions(\"file:s\"     =&gt; \\$data);       # string\nUsage:\n  --file myfile.txt\n  --file\n</code></pre> <p>Default values for the optional option value:</p> <ul> <li>numeric: default value is 0</li> <li>string: default value is empty string.</li> </ul> <p>The Perl-style extended integer includes</p> <ul> <li>an octal string (e.g. 0777),</li> <li>a hexadecimal string (e.g. 0xffff);</li> <li>a binary string (e.g. 0b10010);</li> </ul> <p>Example of the option with multiple input:</p> <pre><code>Define:\n  GetOptions(\"library=s@\" =&gt; \\$libArrRef);  # string, accept multiple input\nUsage:\n  --library lib1 --library lib2\n</code></pre> <p>Example of the option with hash values:</p> <pre><code>Define\n  GetOptions(\"define=s\"   =&gt; \\%def);        # string, assign value of the form \"key=value\" to the hash\n  GetOptions(\"define=s%\"  =&gt; \\$defHashRef); # string, assign value of the form \"key=value\" to the hash\nUsage:\n  --define os=linux --define vendor=redhat\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#long-options-calling-subroutines-to-handle-options","title":"Long Options: Calling Subroutines to Handle Options","text":"<pre><code>use Getopt::Long;\nmy $verbose;\nGetOptions ( 'verbose' =&gt; \\$verbose,\n         'quiet'   =&gt; sub { $verbose = 0 },\n             'opt=i'   =&gt; \\&amp;handler);\n\nsub handler {\n  my ($opt_name, $opt_value) = @_;\n  print(\"Option name is $opt_name and value is $opt_value\\n\");\n}\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#frequently-used-functions","title":"Frequently Used Functions","text":""},{"location":"Notes/202205030007_perl_quick_reference/#open-fileclose-file","title":"Open file/Close file","text":"<pre><code>my $fh;\nopen( $fh, \"&gt;$fname\") or die \"Couldn't open file $fname:$!\\n\";\n# &gt; refers a \"write\" file; &lt; refers a \"read\" file; &gt;&gt; referes \"append\"\n# Avoid declaring filehandle in the way like open( FID, \"&gt;$fname\"). Such filehandle\n# is global and may be unintentionally overwritten by another open() in the sub routines.\nclose( $fh );\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#read-from-file-handle-fh","title":"Read from file handle $fh","text":"<pre><code>while( $line = &lt;$fh&gt; ) { ... }\n\nmy @lines = &lt;$fh&gt;;\n\n######## Pass a filehandle to function: ########\nmyfunc( *FID );\nsub myfunc {\n    local *FILEHANDLE = shift;\n}\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#sub-functions","title":"Sub Functions","text":"<pre><code>sub usage {\n    my $nARG = @_; # Number of arguments\n    my $Q = shift; # Load single parameter of the function.\n    my ($p, $N) = @_; # Load multiple parameters of the function.\n    my @ABC;\n    ...\n    return @ABC;\n}\n# Use defined( ) to check if an argument is initialized.\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#use-switch","title":"Use <code>switch</code>","text":"<pre><code>use Switch;\nswitch ($val) {\n    case 1 { print \"number 1\" }\n    case \"a\" { print \"string a\" }\n    case [1..10,42] { print \"number in list\" }\n    case (@array) { print \"number in list\" }\n    case /\\w+/ { print \"pattern\" }\n    case qr/\\w+/ { print \"pattern\" }\n    case (%hash) { print \"entry in hash\" }\n    case (\\%hash) { print \"entry in hash\" }\n    case (\\&amp;sub) { print \"arg to subroutine\" }\n    else { print \"previous case not true\" }\n}\n</code></pre> <p>or</p> <pre><code>SWITCH: for ($State) {\n/MyCase1/x &amp;&amp; do { &lt;process case1&gt;; last SWITCH; };\n/MyCase2/x &amp;&amp; do { &lt;process case2&gt;; last SWITCH; };\ndie \"Unknown State: $State\"; # Default:\n} # End of SWITCH\n# Perl does not have built-in switch statement, and the module \"Switch\"\n# seems to have some problems matching the switch value $val and the\n# case value. This example is an alternative of switch statement. It\n# takes 'an element in $State' (where only one element within), assign\n# the taken element to $_, then the regular expression is observed and\n# automatically compare the regexp with $_ since no further instruction\n# is given.\n# One may use constant in the regexp:\n# Use constant {S1 =&gt; 1, S2 =&gt;2 };\n# SWITCH: for ($State) {\n# /^${\\S1}$/x &amp;&amp; do { &lt;process case1&gt;; last SWITCH; };\n# /^${\\S2}$/x &amp;&amp; do { &lt;process case1&gt;; last SWITCH; };\n# };\n# Put \"^\" at the beginning and \"$\" at the end to make sure $State\n# precisely matches the case statement; ${\\S1} is to convert the constant\n# into a scalar in the regular expression. See \"Constant in regular expression\"\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#push","title":"Push","text":"<pre><code>my $TotalNum_element = push(@ARRAY, VALUES);\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#cut-the-rn-at-line-end","title":"Cut the \\r\\n at line end","text":"<pre><code>chomp($tmp); $tmp =~ s/\\r//;\n# chomp() blindly removes the last char of the input\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#weed-out-comments","title":"Weed out comments","text":"<pre><code>@foo = grep(!/^#/, @bar);\nor\n@foo = grep {!/^#/} @bar;\n# Basically this just returns all lines not initial with '#'\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#do-something-to-each-element-of-an-array","title":"Do something to each element of an array","text":"<pre><code>map BLOCK LIST\nmap EXPR,LIST ( or map( EXPR,LIST ) )\nmy @char map\n# Use unary + before { on a hash reference, and unary + applied to the\n# first thing in a BLOCK (after {), for perl to guess right all the\n# time. (See map in the perlfunc manpage.)\n\ngrep BLOCK LIST\ngrep EXPR,LIST\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#merge-two-arrays-into-one-array","title":"Merge Two arrays into one array","text":"<pre><code>map( push(@array1, $_), @array2); # array1 followed by array2\npush(@ARRAY1, @ARRAY2);\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#remove-duplicate-elements-from-an-array","title":"Remove duplicate elements from an array","text":"<pre><code># create a hash entry whose key is the current visiting element of the array\n# and the value is 1.\nmy %hash = map { $_, 1 } @array;\nmy @unique = keys %hash;\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#find-the-uniondifferenceintersection-of-two-arrays","title":"Find the union/difference/intersection of two arrays","text":"<pre><code># Find the union\nsub uniq {\n    my %seen;\n    grep { !$seen{$_}++ } @_;\n}\nmy @unique = uniq(@array1, @array2);\n\n# Find the difference (exist in @array1 but not in @array2)\nmy %hash2 = map{$_=&gt;1} @array2;\nmy @array1Only = grep(!defined $hash2{$_}, @array1);\n\n# Find the intersection\nmy %hash2 = map{$_=&gt;1} @array2;\nmy @intersection = grep($hash2{$_}, @array1);\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#count-the-occurrence","title":"Count the occurrence","text":"<p>Count the occurrence of each element in an array</p> <pre><code>my %Seen = ();\nmy @unique = grep( ! $Seen{ $_ }++ , @array);\n# $_ here will be each element of @array\n# \"! $Seen{ $_ }\" is first evaluated before $Seen{$_} is increased by 1.\n# If $_ has never be seen before, then $Seen{$_} should be 0 at this moment.\n</code></pre> <p>Count the occurrence of \"the value of a key\" in an \"array of (references of) hashes</p> <pre><code>my %Seen = ();\nmy @unique = grep( ! $Seen{ $_-&gt;{$key} }++ , @array);\n# Every hash in @array has a common key '$key' and I would like to count\n# the occurrence of its value. \"@unique\" will be the array of hashes whose\n# value of the key $key is unique; %Seen will be:\n# %Seen = ( value1 =&gt; occurrence of value1,\n# value2 =&gt; occurrence of value2,\n# ...\n# )\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#constant","title":"Constant","text":"<pre><code>use constant PI =&gt; 4 * atan2(1, 1);\nuse constant DEBUG =&gt; 0;\nuse constant {\n        SEC =&gt; 0,\n        MIN =&gt; 1,\n        HOUR =&gt; 2,\n        MDAY =&gt; 3,\n        MON =&gt; 4,\n        YEAR =&gt; 5,\n        WDAY =&gt; 6,\n        YDAY =&gt; 7,\n        ISDST =&gt; 8,\n};\n\nmy $debug_status = (DEBUG);\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#constant-in-regular-expression","title":"Constant in regular expression","text":"<pre><code>/${\\MYCONSTANT}/\n# \\MYCONSTANT is the reference of MYCONSTANT\n# ${$href} will dereference $href\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#length-of-a-variable","title":"Length of a variable","text":"<pre><code>my $len = length( EXPR ); # The length in character.\nmy $len = scalar @array # The length of an array\nmy $len = @array # The length of an array\nmy $lastindex = $#array # The last entry index of an array\nmy $len = scalar keys %hash # The length of a hash\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#sort","title":"Sort","text":"<pre><code>@articles = sort @files; # sort lexically\n@articles = sort {$a cmp $b} @files; # same thing, but with explicit sort routine\n@articles = sort {uc($a) cmp uc($b)} @files; # now case-insensitively\n@articles = sort {$b cmp $a} @files; # same thing in reversed order\n@articles = sort {$a &lt;=&gt; $b} @files; # sort numerically ascending\n@articles = sort {$b &lt;=&gt; $a} @files; # sort numerically descending\n\n# this sorts the has '%age' by value instead of key\n# using an in-line function\n@eldest = sort { $age{$b} &lt;=&gt; $age{$a} } keys %age;\n\n# sort using explicit subroutine name\nsub byage {\n    $age{$a} &lt;=&gt; $age{$b}; # presuming numeric\n}\n@sortedclass = sort byage @class;\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#operators","title":"Operators","text":"<p>NOT ! (DON'T USE '~')</p> <p>left terms and list operators (leftward) left -&gt; nonassoc ++ -- right ** right ! ~ \\ and unary + and - left =~ !~ left * / % x left + - . left &lt;&lt; &gt;&gt; nonassoc named unary operators nonassoc &lt; &gt; &lt;= &gt;= lt gt le ge nonassoc == != &lt;=&gt; eq ne cmp left &amp; left | ^ left &amp;&amp; left || nonassoc .. ... right ?: right = += -= *= etc. left , =&gt; nonassoc list operators (rightward) right not left and left or xor</p>"},{"location":"Notes/202205030007_perl_quick_reference/#block-comment","title":"Block comment","text":"<pre><code>=MY_COMMENT_TITLE\n...\n...\n=cut\n# Use lower case, put it at the beginning of the line, or perl will not\n# recognize it.\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#encoding","title":"Encoding","text":"<p>Two domains:</p> <ul> <li>Octet: 8 bits of data; term for bytes passed to or from a non-Perl context, such as a disk file, standard I/O stream, database, command-line argument, environment variable, socket etc</li> <li>Character: A character in the range 0 .. 2**32-1 (or more); what Perl's strings are made of.</li> </ul> <p>Encoding and Decoding</p> <pre><code>use Encode qw(decode encode);\n\n$octets  = encode(ENCODING, STRING[, CHECK])\n$octets  = encode(\"utf8\", $string);\n\n$string = decode(ENCODING, OCTETS[, CHECK])\n$string = decode(\"iso-8859-1\", $octets);\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#miscellaneous","title":"Miscellaneous","text":"<p>Multiple Initialization:</p> <pre><code>my ($var1, $var2, $var3);\n</code></pre> <p>Pass a subroutine into the other subroutine:</p> <pre><code>func1( \\&amp;func2, ... )\n</code></pre> <p>(To be re-evaluated) In Windows OS, call <code>myscript.pl</code> from another perl script:</p> <pre><code>my $stdout = `start /B myscript.pl`;\n</code></pre> <ul> <li>In Windows, directly call <code>myscript.pl</code> in another perl script sometimes results in an error message about Windows not recognizing <code>myscript.pl</code>. Reason unknown.</li> <li>use <code>start /B</code> to invoke <code>myscript.pl</code> in the same commandline window so that the STDOUT from <code>myscript.pl</code> can be captured.</li> </ul>"},{"location":"Notes/202205030007_perl_quick_reference/#templates","title":"Templates","text":""},{"location":"Notes/202205030007_perl_quick_reference/#usage-message","title":"Usage Message","text":"<pre><code>use Getopt::Long;\nuse File::Basename;\n\nmy $PrintHelp = 0;\nGetOptions(\n  'help|h' =&gt; \\$PrintHelp,\n) or die(\"Error in command line arguments\\n\");\n\n# input ------------------------------------------------------------------\n\n# Print the usage message if one of the followings is true:\n#   - user sets no argument and no options\n#   - user sets option --help or -h\nif (0 == @ARGV || 1 == $PrintHelp) {\n  usage();\n  exit;\n}\n\n# sub-routnes ------------------------------------------------------------\n\nsub usage {\n  my $fname = basename($0);\n  my $usage_message = &lt;&lt;USAGE_MESSAGE;\n\n  $fname : descriptions.\n\nSYNTAX\n\n  $fname [OPTIONS] &lt;path&gt;\n\nOPTIONS\n\n  --help, -h          Print this help message and exit.\n\nEXAMPLE\n\nUSAGE_MESSAGE\n\n  print STDOUT $usage_message;\n}\n</code></pre>"},{"location":"Notes/202205030007_perl_quick_reference/#good-practice","title":"Good Practice","text":"<ul> <li>Do not make perl quietly delete a whole directory.</li> <li>Rationale: There are too many ways to get the path wrong, causing perl to accidentally delete important things.</li> <li>Alternatives:</li> <li>(still at risk) Ask user to confirm the path to be deleted.</li> <li>(very conservative) Never make perl to delete directories.</li> <li>Use perl built-in functions to manage the file system</li> <li>Rationale: Using the OS system commands like <code>rm</code> in the linux system or <code>del</code> in the Windows system results in various portability issues.</li> </ul>"},{"location":"Notes/202205030007_perl_quick_reference/#reference_1","title":"Reference","text":"<ul> <li>Active Perl</li> <li>Learn Perl</li> <li>Perl Beginners First Response</li> </ul>"},{"location":"Notes/202205042048_powershell_quick_reference/","title":"PowerShell Quick Reference","text":""},{"location":"Notes/202205042048_powershell_quick_reference/#dictionarymap","title":"Dictionary/Map","text":""},{"location":"Notes/202205042048_powershell_quick_reference/#initialization","title":"Initialization","text":"<pre><code>$MyTable = @{\n    'Key1' = Value1;\n    'Key2' = Value2;\n    'Key3' = Value3;\n}\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#useful-operations","title":"Useful Operations","text":"<pre><code># Access individual item\n$Value1 = $MyTable.'Key1';\n\n# Iterate through the table\nforeach($k in $MyTable.keys) {\n    Write-Output $k + \" =&gt; \" + $MyTable.$k\n}\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#file-io","title":"File I/O","text":""},{"location":"Notes/202205042048_powershell_quick_reference/#creating-a-directory-if-it-does-not-exist","title":"Creating a directory if it does not exist","text":"<pre><code># Option 1\ntry {\n  dir c:\\temp *&gt;$null\n} catch {\n  mkdir c:\\temp\n}\n\n# Option 2\n$tempstdout = dir c:\\temp -ErrorAction SilentlyContinue\nif( 1 -ne $? ) {\n  mkdir c:\\temp\n}\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#check-if-a-filedir-exists","title":"Check if a file/dir exists","text":"<pre><code># Only works for file\n[System.IO.File]::Exists(\"C:\\temp\\temp.txt\")\n\n# Works for both file and dir\nTest-Path \"C:\\temp\"\n</code></pre> <p>Note that these commands do not work on the remote device.</p>"},{"location":"Notes/202205042048_powershell_quick_reference/#downloading-file-from-internet","title":"Downloading File From Internet","text":"<pre><code># Option 1\nInvoke-WebRequest -Uri \"$MyUrl\" -OutFile \"$MySaveTo\"\n\n# Option 2\n(New-Object Net.WebClient).DownloadFile(\"$MyUrl\", \"$MySaveTo\")\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#misc","title":"Misc","text":""},{"location":"Notes/202205042048_powershell_quick_reference/#redirecting-outputs","title":"Redirecting outputs","text":"<pre><code>dir &gt;$null 2&gt;&amp;1\ndir *&gt;$null\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#writing-a-powershell-script-that-takes-command-line-options","title":"Writing a PowerShell script that takes command line options","text":"<pre><code>param (\n  [string]$WorkDir = \"\",\n  [Parameter(Mandatory=$true)][string]$File = \"\",\n  [string]$FileArg = \"\",\n  [switch]$WaitExit = $false\n)\n\n# Beginning of the script body\n# ...\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#running-an-executable-in-an-elevated-window","title":"Running an executable in an elevated window","text":"<pre><code>$myArg = @{\n  FilePath        = \"$MyExePath\"\n  verb            = \"RunAs\"\n  ArgumentList    = \"$MyExeArgs\"\n}\nStart-Process @myArg\n</code></pre>"},{"location":"Notes/202205042048_powershell_quick_reference/#misc_1","title":"Misc","text":"<pre><code># Convert the file path to the absolute path\n$File = [System.IO.Path]::GetFullPath($File);\n\n# Resolve some non-existent path (like \"~\")\n$path = $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath(\"~\\.vimrc\")\n</code></pre>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/","title":"Python matplotlib Quick Reference","text":""},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#basic-plot","title":"Basic Plot","text":"<p>Plot a 1200x700 figure; show two subplots; label x-axis and y-axis; show grid</p> <pre><code>import matplotlib.pyplot as plt\n\nx = list(range(100))\ny = [n*n for n in x]\nz = [n*n*n for n in x]\n\nplt.figure(figsize=(12, 7), dpi=100)\nplt.subplot(211)\nplt.plot(x, y)\nplt.title('y v.s. x')\nplt.grid()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.subplot(212)\nplt.plot(x, z)\nplt.title('z v.s. x')\nplt.grid()\nplt.xlabel('x')\nplt.ylabel('z')\nplt.tight_layout() # Use tight_layout() to prevent overlaping of \n                   # the xlabel and the title\nplt.show()\n</code></pre>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#additional-setup","title":"Additional Setup","text":"<pre><code>import matplotlib.pyplot as plt\n\nx = list(range(100))\ny = [n*n for n in x]\n\nplt.figure()\nplt.plot(x,y)\n\n# Change x scale and y scale\nplt.xscale('log', base=10)\nplt.yscale('log', base=2)\n</code></pre>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#heat-map","title":"Heat Map","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndata = np.loadtxt('path/to/my/data.txt')\n# Use \"extent=(left,right,bottom,top)\" to control the xticks and yticks\n# Use \"interpolation='none'\" to create a more accurate representation \n# of the original data\nplt.imshow(data, origin='lower', interpolation='none', aspect='auto', extent=(left,right,bottom,top))\nplt.colorbar()\nplt.show()\n</code></pre> <p>ref: https://stackoverflow.com/questions/18696122/change-values-on-matplotlib-imshow-graph-axis</p>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#histogram","title":"Histogram","text":"<p>Creating a histogram plot for array \\(x\\)</p> <pre><code>import matplotlib.pyplot as plt\n\nnum_bins = 10\nplt.hist(x, bins=num_bins)\nplt.show()\n\nbin_edges = np.arange(-5,5)\nplt.hist(x, bins=bin_edges)\nplt.show()\n</code></pre> <p>Creating a histogram plot given the histogram data (count and bin edges)</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nhist, bins = np.histogram(x, bins=50)\n\n# Specify the bar width\nwidth = 0.7 * (bins[1] - bins[0])                   \n\n# Specify the bar center as the center of the adjacent bar edges\ncenter = (bins[:-1] + bins[1:]) / 2                 \n\n# Create a bar chart as the histogram plot\nplt.bar(center, hist, align='center', width=width)  \nplt.show()\n</code></pre> <p>ref: https://stackoverflow.com/questions/5328556/histogram-matplotlib</p>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#save-plot","title":"Save Plot","text":"<pre><code>import matplotlib.pyplot as plt\n\nx = list(range(100))\ny = [n*n for n in x]\nfh = plt.figure()\nplt.plot(x,y)\n\n# Save the \"current figure\"\nplt.savefig('myplot.jpg')\n\n# Save the figure referenced by the figure handle\nfh.savefig('myplot.jpg')\n</code></pre>"},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#misc","title":"Misc","text":""},{"location":"Notes/202205042050_python_matplotlib_quick_reference/#link-the-axe-between-plots","title":"Link the axe between plots","text":"<pre><code>plt.figure(figsize=(12,7), dpi=100)\nax1 = plt.subplot(211)\nplt.plot(x1)\nplt.subplot(212, sharex=ax1)\nplt.plot(x2)\n</code></pre>"},{"location":"Notes/202205042054_python_pandas_quick_reference/","title":"Python pandas Quick Reference","text":""},{"location":"Notes/202205042054_python_pandas_quick_reference/#dataframe","title":"DataFrame","text":""},{"location":"Notes/202205042054_python_pandas_quick_reference/#basics","title":"Basics","text":"<pre><code>import pandas as pd\n\n# Initialization\ndf = pd.DataFrame(columns=['A', 'B', 'C'])\n\n# sort by column\ncol_name = 'A'\ndf = df.sort_values(col_name)\n</code></pre>"},{"location":"Notes/202205042054_python_pandas_quick_reference/#adding-new-row","title":"Adding new row","text":"<p>TL;DR: Do NOT grow your DataFrame in loops.</p> <p>Grow the data in a list, then create the DataFrame with the finalized list.</p> <p>ref: https://stackoverflow.com/questions/13784192/creating-an-empty-pandas-dataframe-and-then-filling-it</p>"},{"location":"Notes/202205042054_python_pandas_quick_reference/#access","title":"Access","text":"<ul> <li>Access the rows by integer position: df.iloc[r]</li> <li>Access the rows and columns by integer position: df.iloc[r, c]</li> <li>The input r and c can be:<ul> <li>scalar integer: df.iloc[0]</li> <li>list of integer: df.iloc[ [0, 1, 2] ]</li> <li>slice object: df.iloc[:3]</li> <li>boolean array of the same length as the index: df.iloc[ [True, False, False] ]</li> <li>callable that takes the DataFrame as input and returns one of the above valid input type</li> </ul> </li> </ul>"},{"location":"Notes/202205042054_python_pandas_quick_reference/#misc","title":"Misc","text":"<p>Find the rows that contains a specific string pattern <code>pattern</code> in the column <code>MyColumnName</code></p> <pre><code>selected_rows = df['MyColumnName'].str.contains('pattern', na=False)\n\nprint( df.loc[selected_rows] )\n</code></pre> <p>Use multiple conditions to filter the rows</p> <pre><code>selected_rows = df['MyColumnName'].str.contains('pattern1', na=False)\nselected_rows &amp;= df['MyColumnName'].str.contains('pattern2', na=False)\nselected_rows &amp;= ~df['MyColumnName'].str.contains('pattern3', na=False)\n\nprint( df.loc[selected_rows] )\n</code></pre>"},{"location":"Notes/202205042054_python_pandas_quick_reference/#csv","title":"CSV","text":"<p>\"Merge\" two data CSV files that</p> <ul> <li>the first line is the column header</li> <li>at least 1 common column exists in both CSV files</li> </ul> <pre><code>import pandas as pd\n\na = pd.read_csv('file1.csv')\nb = pd.read_csv('file2.csv')\na = a.merge(b, on=\"CommonColumn\", how=\"outer\")\na.to_csv('output.csv', index=False)\n</code></pre> <ul> <li>Notes:<ul> <li>The parameter <code>how</code> determines how the merge is performed. See https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.merge.html</li> </ul> </li> </ul> <p>\"Merge\" two data CSV files that</p> <ul> <li>the first line is the column header</li> <li>the column headers are the same</li> <li>the rows are from different data sets</li> </ul> <pre><code>import pandas as pd\n\nmerged_data = pd.DataFrame()\na = pd.read_csv('file1.csv')\nb = pd.read_csv('file2.csv')\n\n# Introduce a new column 'DataSource', if necessary, to indicate the\n# source of the entry\na['DataSource'] = 'file1'\nb['DataSource'] = 'file2'\n\nmerged_data = merged_data.append(a, ignore_index=True, sort=False)\nmerged_data = merged_data.append(b, ignore_index=True, sort=False)\nmerged_data.to_csv('output.csv', index=False)\n</code></pre>"},{"location":"Notes/202205042056_python_scipy_quick_reference/","title":"Python scipy Quick Reference","text":""},{"location":"Notes/202205042056_python_scipy_quick_reference/#load-wav-file","title":"Load WAV File","text":"<pre><code>from scipy.io import wavfile\nimport numpy as np\n\n[fs, x] = wavfile.read(path)\n# Make sure the loaded signal is of shape (L,M), where L is the number of\n# samples and M is the number of mics\nif(1 == len(x.shape)):\n    x = x[:, np.newaxis]\n\n# Make sure the samples are of type float\nnum_bits = 0\nif x.dtype == 'int16':\n    num_bits = 16\nelif: x.dtype == 'int32':\n    num_bits = 32\n\nif(0 != num_bits):\n    max_val = float(2 ** (num_bits-1))\n    x = x / max_val\n</code></pre>"},{"location":"Notes/202205042056_python_scipy_quick_reference/#write-wav-file","title":"Write WAV File","text":"<pre><code>from scipy.io import wavfile\n\nfs = 16000\nf1 = 440\nf2 = 660\nf = np.array( [ [440, 660] ] )  # Shape: (1, 2)\nt = np.arange(2 * fs) / fs    # Shape: (32000,)\nx = 0.5 * np.sin( 2 * np.pi * f * t[:, np.newaxis] )  # Shape: (1, 2) x (32000,1) = (32000,2)\n\n# arguments: file path, sample rate, data array. \n# data array should be in the shape of (num_samples, num_channels)\nwavfile.write('test.wav', fs, x)\n</code></pre>"},{"location":"Notes/202205042056_python_scipy_quick_reference/#plot-spectrogram","title":"Plot Spectrogram","text":"<pre><code>from scipy import signal\nimport matplotlib.pyplot as plt\n\nfs = 16000\nfft_size = 768*2\nf, t, Sxx = signal.spectrogram(x, fs, nfft=fft_size)\n\nplt.pcolormesh(t, f, Sxx, cmap='hot')\nplt.ylabel('Frequency (Hz)')\nplt.xlabel('Time (sec)')\nplt.show()\n</code></pre>"},{"location":"Notes/202205042056_python_scipy_quick_reference/#short-time-fourier-transform-stft","title":"Short-Time Fourier Transform (STFT)","text":"<pre><code>from scipy import signal\nimport numpy as np\n\n# Define FFT window size\nfft_size = 512\n\n# Create time-domain signal x\nfs = 16000\nf1 = 440\nf2 = 660\nt = np.arange(fft_size * 20) / fs\nx = np.sin( 2 * np.pi * f1 * t ) + np.sin( 2 * np.pi * f2 * t )\n\n# Define windowing function\nstft_win = signal.get_window('hann', fft_size, fftbins=True)\nstft_win = np.sqrt(stft_win)\n\n# Run STFT to get the spectrogram Zxx, with shape FxT (F: number of freq bins; T: number of audio frames)\nfxx, txx, Zxx = signal.stft(x, fs, nperseg=fft_size, window=stft_win)\n\n# Run inverse STFT (ISTFT) to get the reconstructed signal xrec in time domain\ntrec, xrec = signal.istft(Zxx, fs, nperseg=fft_size, window=stft_win)\n\n# Print the max diff between x and xrec. Expect an infinitesimal number like 1e-15\nx_diff = x - xrec\nprint(max(x_diff))\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/","title":"Sox Quick Reference","text":""},{"location":"Notes/202205042222_sox_quick_reference/#basic-synopsis","title":"Basic Synopsis","text":"<pre><code>sox [global-options] [inflie-options] infile1 [[infile-options] infile2] ... [outfile-options] outfile [effect [effect-options]] ...\n</code></pre> <p>Highlights:</p> <ul> <li>The options (e.g. global options <code>-h</code>, options for input file <code>-v</code>, and options for input/output file <code>-b</code>) always have a leading dash ('-' or '--'), while the effects (e.g. <code>vol</code>) do not</li> <li>The global options can be specified anywhere before the first effect</li> <li>The effects should be specified after the <code>outfile</code> and will be applied to the <code>outfile</code> after the inputs are combined.</li> </ul>"},{"location":"Notes/202205042222_sox_quick_reference/#input-file-combining","title":"Input File Combining","text":"<p>SoX supports the following methods to combine multiple input files:</p> <ul> <li>concatenate: <ul> <li>Default method for SoX. Or explicitly specified by global option <code>--combine concatenate</code></li> <li>Input files must have the same sampling rate and the same number of channels.</li> <li>\\(N\\) input files of duration \\(T_1, T_2, \\cdots, T_N\\) will be concatenated to one output of duration \\((T_1+T_2+\\cdots+T_N)\\)</li> </ul> </li> <li>mix:<ul> <li>Specified by global option <code>--combine mix</code> or <code>-m</code></li> <li>Input files must have the same sampling rate.</li> <li>The \\(k\\)-th channel at output is the sum of the \\(k\\)-th channel of all \\(N\\) input files</li> <li>If infile option <code>--volume</code> is not specified for individual input files, a normalization factor of \\(\\frac{1}{N}\\) will be applied by default.</li> </ul> </li> <li>mix-power:<ul> <li>Specifiled by global option <code>--combine mix-power</code></li> <li>Similar to mix, but the default normalization factor is \\(\\frac{1}{\\sqrt{N}}\\)</li> </ul> </li> <li>merge:<ul> <li>Specified by global option <code>--combine merge</code> or <code>-M</code></li> <li>Input files must have the same sampling rate</li> <li>\\(N\\) input files of  \\(K_1, K_2, \\cdots, K_N\\) channels will be merged to one output of  \\((K_1 + K_2 + \\cdots + K_N)\\) channels</li> </ul> </li> <li>multiply: <ul> <li>Specified by global option <code>--combine multiply</code> or <code>-T</code></li> <li>Input files must hoave the same sampling rate</li> <li>The \\(k\\)-th channel at output is the product of the \\(k\\)-th channel of all \\(N\\) input files. If the number of channels in the input files is not the same, the missing channels are considered to contain all zero.</li> </ul> </li> </ul>"},{"location":"Notes/202205042222_sox_quick_reference/#scaling-audio-file","title":"Scaling Audio File","text":""},{"location":"Notes/202205042222_sox_quick_reference/#scaling-input-by-infile-option-v","title":"Scaling Input by infile option <code>-v</code>","text":"<pre><code># scale in1 by 2x and scale in2 by 0.5x and then combine them\nsox -v 2 in1.wav -v 0.5 in2.wav out.wav\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#scaling-output-by-effect-vol","title":"Scaling Output by effect <code>vol</code>","text":"<pre><code># scale out.wav by 2x\nsox in.wav out.wav vol 2\n\n# scale out.wav by 3dB\nsox in.wav out.wav vol 3dB\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#normalizing-audio-with-global-option-norm","title":"Normalizing Audio with global option  <code>--norm</code>","text":"<pre><code># Normalize audio to magnitude +/-1.0\nsox --norm in.wav out.wav\n\n# Normalize audio to magnitude +/-0.5, or -6dBFS\nsox --norm=-6 in.wav out.wav\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#trimming-audio-file","title":"Trimming Audio File","text":"<p>To trim an audio file to preserve the original audio between the timestamp {N1, N2} (unit: seconds):</p> <pre><code># use add an equal sign (=) before N2 to denote that N2 is the end\n# timestamp rather than the length\nsox in.wav out.wav trim N1 =N2\n</code></pre> <p>To trim an audio file to discard the audio before timestamp N1 (unit: seconds) and keep L1 seconds of audio after N1:</p> <pre><code>sox in.wav out.wav trim N1 L1\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#remixing-the-channels","title":"Remixing the channels","text":"<p><code>remix</code> command allows the user to remix the audio channels of one file</p> <pre><code>sox in.wav out.wav remix 1-3,5 4 0\n</code></pre> <p>The above command creates <code>out.wav</code> with 3 channels where</p> <ul> <li><code>out.wav</code> channel 1 = mix of <code>in.wav</code> channel 1,2,3 and 5 (by averaging them)</li> <li><code>out.wav</code> channel 2 = <code>in.wav</code> channel 4</li> <li><code>out.wav</code> channel 3 = silence</li> </ul> <p>To manually control the scaling factor when mixing the channels:</p> <pre><code>sox in.wav out.wav remix 1v1.0,2v0.5,3v0.5,5v0.2\n</code></pre> <p>Now <code>out.wav</code> channel 1 = 1.0(<code>in.wav</code> channel 1) + 0.5(<code>in.wav</code> channel 2) + 0.5(<code>in.wav</code> channel 3) + 0.2(<code>in.wav</code> channel 5)</p>"},{"location":"Notes/202205042222_sox_quick_reference/#obtaining-the-length-of-the-file","title":"Obtaining the length of the file","text":"<pre><code># Return the length in HH:MM:SS format\nsox --i -d in.wav\n\n# Return the length in seconds\nsox --i -D in.wav\n\n# Return the length in number of samples\nsox --i -s in.wav\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#padding-silence","title":"Padding silence","text":"<pre><code># Pad 1 seconds silence at the beginning and 2 seconds silence at \n# the end of the in.wav\nsox in.wav out.wav pad 1.0 2.0\n\n# Pad 3 seconds silence at 4 minutes into the in.wav\nsox in.wav out.wav pad 3.0@4:00\n\n# Pad 5000 samples of silence at 4 minutes into the in.wav\nsox in.wav out.wav pad 5000s@4:00\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#changing-sampling-rate","title":"Changing sampling rate","text":"<pre><code>sox in.wav -r 16000 out.wav\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#adding-white-noise","title":"Adding white noise","text":"<pre><code># Generate noise.wav that is of the same format (duration, \n# number of channels, etc) as in.wav\nsox in.wav noise.wav synth whitenoise vol 0.02\n\n# Generate out.wav by mixing in.wav and noise.wav with their \n# original volume\nsox -m -v 1.0 in.wav -v 1.0 noise.wav out.wav\n</code></pre>"},{"location":"Notes/202205042222_sox_quick_reference/#generating-a-silence-or-a-tone","title":"Generating a silence or a tone","text":"<pre><code># Generate a 5 second, 16kHz, 2-channel, audio file containing silence.\nsox -n -r 16000 -c 2 silence.wav trim 0 5\n\n# Generate a 5 second, 8kHz, audio file containing a sine-wave of 300Hz:\nsox -n -r 8000 sine.wav synth 5 sine 300\n\n# Generate a 5 second, 8kHz, audio file containing a sine-wave swept \n# from 300 to 3300 Hz:\nsox -n -r 8000 sine.wav synth 5 sine 300-3300\n</code></pre> <p>Note:</p> <ul> <li><code>-n</code> is the \"null file\" option and is considered as a file containing infinite amount of silence. This option is usually used with some finite-length effects such as <code>trim</code> or <code>synth</code></li> </ul>"},{"location":"Notes/202205042222_sox_quick_reference/#specify-wav-format","title":"Specify WAV format","text":"<pre><code># Generate a 5 second, 8kHz, audio file containing a sine-wave of 300Hz\nsox -n -r 8000 sine.wav synth 5 sine 300\n\n# Generate the wave file in 16-bit PCM\nsox -n -r 8000 -b 16 -e signed-integer sine.wav synth 5 sine 300\n</code></pre> <p>Some other common encodings:</p> <ul> <li><code>unsigned-integer</code>: PCM data stored as unsigned integers. Commonly used with an 8-bit encoding size</li> <li><code>floating-point</code>: PCM data stored as IEEE 753 single precision (32-bit) or double precision (64-bit) floating-point (\u2018real\u2019) numbers</li> <li><code>a-law</code>: International telephony standard for logarithmic encoding to 8 bits per sample</li> </ul>"},{"location":"Notes/202205042222_sox_quick_reference/#convert-pcm-format-to-wav","title":"Convert PCM format to WAV","text":"<p>Convert a PCM file of 1 channel, 16-bit, 48kHz sampling rate, signed-integer encoding to WAV</p> <pre><code>sox -t raw -c 1 -b 16 -r 48000 -e signed in.pcm out.wav\n</code></pre> <p>It is required to specify the file type <code>-t raw</code>. Otherwise <code>sox</code> will fail due to <code>.pcm</code> being an unrecognized format. See soxformat for the list of the supported formats.</p>"},{"location":"Notes/202205042222_sox_quick_reference/#reference","title":"Reference","text":"<ul> <li>http://sox.sourceforge.net/sox.html </li> <li>https://linux.die.net/man/7/soxformat</li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/","title":"Vim Quick Reference","text":""},{"location":"Notes/202205042227_vim_quick_reference/#terminology","title":"Terminology","text":""},{"location":"Notes/202205042227_vim_quick_reference/#buffer-window-tab","title":"buffer, window, tab","text":"<p>A buffer is the in-memory text of a file.</p> <p>A window is a viewport on a buffer.</p> <p>A tab page is a collection of windows.</p>"},{"location":"Notes/202205042227_vim_quick_reference/#word-vs-word","title":"word v.s. WORD","text":"<p>A word consists of a \"sequence of letters, digits and underscores\", or a \"sequence of other non-blank characters\", separated with white space (spaces, tabs, \\&lt;EOL&gt;). An empty line is also considered to be a word.</p> <p>A WORD consists of a \"sequence of non-blank characters\", separated with white space.  An empty line is also considered to be a WORD.</p> <p>Example:</p> <ul> <li><code>%abc,def%</code> is considered as 5 words or 1 WORD.<ul> <li>5 words: \"<code>%</code>\", \"<code>abc</code>\", \"<code>,</code>\", \"<code>def</code>\", \"<code>%</code>\"<ul> <li>\"<code>abc</code>\" and \"<code>def</code>\" are the \"words\" that are a \"sequence of letters, digits and underscores\"</li> <li>\"<code>%</code>\" and \"<code>,</code>\" are the \"words\" that are a \"sequence of other non-blank characters\"</li> </ul> </li> <li>1 WORD: <code>%abc,def%</code></li> </ul> </li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#modes","title":"Modes","text":"<p>There are 3 fundamental modes in Vim:</p> <ul> <li>normal (command) mode</li> <li>insert mode</li> <li>visual mode</li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#yank-delete-change","title":"yank, delete, change","text":"Term Behavior yank copy the text into some register delete delete the text and keep it in some register change delete the text and keep it in some register, then enter the insert mode."},{"location":"Notes/202205042227_vim_quick_reference/#environment-setup","title":"Environment Setup","text":"<p><code>~/.vimrc</code>: User config for vim.</p> <p><code>~/vimfile/</code>, <code>~/.vim/</code>: Directory for user-provided vim files such as <code>color</code> and <code>syntax</code></p> <ul> <li>Users of <code>git for windows</code> may want to copy some color scheme and syntax definition to <code>~/vimfile/color/</code> and <code>~/vimfile/syntax/</code> because the vim in <code>git for windows</code> does not provide much support in colors and syntax. Those files can be found under the folder of a fully installed <code>vim</code>.<ul> <li>e.g. copy <code>/path/to/fully/installed/vim/color/elflord.vim</code> to <code>~/vimfile/color/</code></li> </ul> </li> <li> <p>User of <code>vim74</code> can add the following script to <code>.vimrc</code> so that <code>vim</code> in Windows searches for <code>~/.vim</code> as well.</p> <pre><code>if has('win32') || has('win64')\n  set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after\nendif\n</code></pre> </li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#basic-use","title":"Basic Use","text":"<pre><code>&lt;Esc&gt;       : Escape from insert mode \n&lt;C-c&gt;       : Escape from insert mode\nu           : undo last command, again and again\nU           : Restore line\n&lt;C-r&gt;       : redo last undo\n\n/myname     : search forward for myname\n\n:wq         : write and quit\n:x          : write and quit\n:w filename : write a copy of the file you are editing as filename\n:q!         : quit without saving even if changes were made!\n:help       : display help\n:help a     : display help message about the command 'a'\n&lt;Tab&gt;       : use tab completion to scroll through commands that start with what you typed\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#switching-from-command-mode-to-insert-mode","title":"Switching from Command Mode to Insert Mode","text":"<pre><code>a           : Append text following current cursor position\nA           : Append text to the end of current line\ni           : Insert text before the current cursor position\nI           : Insert text at the beginning of the cursor line\no           : Start a new line following the current line \nO           : Start a new line in front of the current line \n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#cursor-movement","title":"Cursor Movement","text":"<pre><code>h j k l     : move cursor\n10G         : Cursor goes to the 10th line\n:10         : Cursor goes to the 10th line\n&lt;C-f&gt;       : One page forward\n&lt;C-b&gt;       : One page backward\n&lt;C-u&gt;       : half page forward\n&lt;C-d&gt;       : half page backward\n$           : Move cursor to the end of current line\n^ 0         : Move cursor to the beginning of current line\nw e         : Forward one word (to the beginning or the end of the word)\nb           : Backward one word (to the beginning of the word)\nge          : Backward one word (to the end of the word)\nfa ta       : Forward onto/till the next char 'a' in the line\nFa Ta       : Backward onto/till the previuos char 'a' in the line\nzz          : position cursor at middle of the screen\nzt          : position cursor at top of the screen\nzb          : position cursor at bottom of the screen\ngi          : switches to insertion mode placing the cursor at the same location it was previously\n%           : match brackets {}[]()\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#yankpastedelete","title":"Yank/Paste/Delete","text":"<pre><code>v           : visual mode -- use to select text with cursor movement or mouse\ny           : use to yank what was selected\n&lt;Esc&gt;       : Switchb back to normal mode\n\nx           : delete character under cursor\ndw          : delete everything right from the cursor to the start of next word (and put it into the default register)\ndd          : delete line (and put it into the default register)\np           : paste the default register\n\nyy          : yank current line\ny$          : yank to end of current line from cursor\nyw          : yank from cursor to end of current word\n5yy         : yank 5 lines\n\np           : paste below cursor\nP           : paste above cursor\n\"2p         : paste from register 2\n</code></pre> <p>Command <code>y</code> and <code>d</code> followed by a cursor movement command will yank / delete a range specified by the movement command. For example</p> <pre><code>dj          : Delete the current line and the next line\ny^          : Yank from the beginning of the line to cursor\n</code></pre> <p>Many commands support <code>[count][command]</code> syntax. For example:</p> <pre><code>5yy         : yank 5 lines\n10w         : forward 10 words\n</code></pre> <p>Note that commands are case sensitive.</p>"},{"location":"Notes/202205042227_vim_quick_reference/#really-useful","title":"Really useful","text":"<pre><code>* # g* g#     : find word under cursor (forwards/backwards)\n&lt;C-n&gt; &lt;C-p&gt;   : word completion in insert mode\n&lt;C-x&gt;&lt;C-l&gt;    : Line complete SUPER USEFUL\n/&lt;C-r&gt;&lt;C-w&gt;   : Pull &lt;cword&gt; onto search/command line\n:set ignorecase : you nearly always want this\n:set smartcase  : case-sensitive if search contains an uppercase character\n:syntax on    : colour syntax in Perl,HTML,PHP etc\n:h slash&lt;C-D&gt; : type control-D and get a list all help topics containing slash\n    (plus use TAB for Help completion)\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#enter-special-characters-such-as-m","title":"Enter special characters such as ^M","text":"<pre><code>&lt;C-v&gt;&lt;C-m&gt;     : Enter carriage return (^M)\n&lt;C-v&gt;&lt;C-j&gt;     : Enter &lt;Nul&gt; (^@)\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#great","title":"Great","text":"<pre><code>guu        : lowercase line\ngUU        : uppercase line\n~          : invert case (upper-&gt;lower; lower-&gt;upper) of current character\ngf         : open file name under cursor (SUPER)\nga         : display hex, ascii value of character under cursor\ng8         : display hex value of utf-8 character under cursor\n:%!xxd     : display the buffer in hex mode\n:%!xxd '%' : display the current file in hex mode\nggg?G      : rot13 whole file\nxp         : swap next two characters around\n&lt;C-a&gt;,&lt;C-x&gt;: increment, decrement next number on same line as the cursor\n&lt;C-r&gt;=5*5    : insert 25 into text\n=             : (re)indent the text on the current line or on the area selected (SUPER)\n=%            : (re)indent the current braces { ... }\nG=gg          : auto (re)indent entire document\n</code></pre> <p>If you use Ctrl-V for paste, you will probably need to unmap CTRL-A first.</p> <p>Difference between <code>:%!xxd</code> and <code>:%!xxd '%'</code>:</p> <ul> <li>When Vim loads a binary file as text, it may alter the file content in order to display the content on the screen. As a result, <code>:%!xxd</code> shows the \"buffer\" in hex mode with the modified content. For example, A byte of <code>0x80</code> will be shown as '?' on the screen, and running <code>:%!xxd</code> will show that byte as 0x3F, which is the hex value of '?'. To display the original file content in hex mode, use <code>:%!xxd '%'</code> to instruct the 'xxd' command to process the \"current file\" rather than the \"current Vim buffer\".<ul> <li>The first <code>%</code> in the command is to specify the range (where the output of  <code>!xxd</code> will replace); the 2nd <code>%</code> is the \"register %\", containing the name of the current file. The 2nd <code>%</code> needs to be quoted so that Vim can handle the path in both Linux and Windows format.</li> <li>If Vim loads the binary file as binary file, <code>:%!xxd</code> would work just fine. To change the buffer to the binary mode, execute <code>:e ++bin</code> or <code>:set binary</code>.</li> </ul> </li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#markers-and-moving-about","title":"Markers and moving about","text":"<pre><code>ma mb    : Mark current location as Mark 'a' or Mark 'b' (local buffer). Available marks are [a-z]\nmA mB    : Mark current location as Mark 'A' or Mark 'B' (global)\n'a 'b    : Go to the line of Mark 'a' or Mark 'b'\n`a `b    : Go to the exact spot of Mark 'a' or Mark 'b'\n'.       : jump to last modification line (SUPER)\n`.       : jump to exact spot in last modification line\n&lt;C-O&gt;    : retrace your movements in file (backward)\n&lt;C-I&gt;    : retrace your movements in file (forward)\n:ju(mps) : list of your movements `help|jump-motions`\n:history : list of all your commands\n:mark    : List all the marks\n]'       : Go to next mark\n['       : Go to previous mark\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#yankpaste-with-registers","title":"Yank/Paste with registers","text":"<pre><code>:reg          : display contents of all registers\n\"1p           : paste from register 1\n\"a5yy         : yank 5 lines to register a\n\"A5yy         : append 5 lines to register a\n:redir @*     : redirect commands to register * (the system clipboard on Windows)\n:redir END\n\"*yy          : yank to register * (the system clipboard on Windows)\n\"*p           : paste from register * (the system clipboard on Windows)\n\"+yy          : yank to register + (the system clipboard on Linux)\n:2,5y a       : yank line 2-5 to register a\n:7pu a        : paste from register a to under line 7\n:let @+ = expand(\"%:p\")    : yank the current buffer path to register + (the system clipboard on Linux)\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#registers","title":"Registers","text":"Register Type Register Name Comment Unnamed register \" Default register to store the most recent copy/delete/change Numberd register 0 0 Default register to store the most recent copy Numbered register 1 1 Default register to store the most recent delete/change that are more than 1 line. Numbered register 2...9 Named register a a Named register A A Named register b...z Named register B...Z Small delete register - Default register to store the most delete/change that are shorter than 1 line. <p>To specify the register to store the yanked/deleted text, add a leading <code>\"</code> before the register name:</p> <pre><code>\"ayy        : Yank the current line and store it in register a\n</code></pre> <p>To execute the commands stored in a register, add a leading <code>@</code> before the register name:</p> <pre><code>@a          : execute the commands in reg a\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#advanced-yankpaste","title":"Advanced Yank/Paste","text":"<pre><code>ci{       : Cut the contents inside the current {} block and enter the insert mode\ndi(       : Cut the contents inside the current () block\nyit       : Yank the contents inside the current &lt;tag&gt;&lt;/tag&gt; block\n</code></pre> <p>The command like <code>i{</code> is called \"Text object selection\"</p>"},{"location":"Notes/202205042227_vim_quick_reference/#execute-command-from-buffer-contents","title":"Execute command from buffer contents","text":"<pre><code>\"ayy@a   : execute the Vim command in the current line\nyy@\"     : same\n</code></pre> <p>What <code>\"ayy@a</code> does is \"yank the current line to register <code>a</code>, then execute the commands in register <code>a</code>\". </p> <p>Similarly, what <code>yy@\"</code> does is \"yank the current line to the unnamed register  (which is <code>\"</code>), then execute the commands in register <code>\"</code>\"</p>"},{"location":"Notes/202205042227_vim_quick_reference/#multiple-files","title":"Multiple files","text":"<pre><code>:wn           : write file and move to next (SUPER)\n:bd           : remove file from buffer list (SUPER)\n:sav php.html : Save current file as php.html and \"move\" to php.html\n:sp fred.txt  : open fred.txt into a split\n:e!           : return to unmodified file\n:w /some/path/%:r   : save file in another directory, but with the same name\n:e #          : edit alternative file\n:args         : display argument list\n:n            : next file in argument list\n:prev         : previous file in argument list\n:rew          : rewind to first file in argument list\n:ls           : display buffer list\n:bn           : next buffer\n:bp           : previous buffer\n:brew         : rewind to first buffer in buffer list\n:tabe         : open new tab page (Ctrl-PgUp, Ctrl-PgDown for next/previous tab)\ngt            : go to the next tab\ngT            : go to the previous tab\n:tabm n       : move tab to position n (0=leftmost position)\n:tab 9sbu     : Open buffer 9 in a new tab\n&lt;C-W&gt; s       : Create a horizontal split window\n&lt;C-W&gt; v       : Create a vertical split window\n&lt;C-W&gt; q       : Close the split window\n&lt;C-W&gt; &lt;arrow key&gt; : Move to another split\n&lt;C-W&gt;&lt;C-H&gt;    : Move to the left split\n&lt;C-W&gt;&lt;C-L&gt;    : Move to the right split\n&lt;C-W&gt; T       : Move the split window to a new tab\n:set scrollbind    : Enable scroll-binding for the current window.\n:set scrollopt=ver : Bind vertical scrolling for 'scrollbind' windows\n:set scrollopt=hor : Bind horizontal scrolling for 'scrollbind' windows\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#recording","title":"Recording","text":"<p>Record the command sequence <code>d10dj</code> (delete 10 lines, then move down) to register <code>a</code></p> <pre><code>qa\nd10dj\nq\n</code></pre> <pre><code>@a            : execute commands recorded in register a\n@@            : repeat\n:%normal @a   : execute commands recorded in register a on all lines\n:normal @a    : execute commands recorded in register a on visually selected lines\n</code></pre> <p>Editing a register/recording</p> <pre><code>\"ap           : paste the content in register a to buffer\n\"add          : Cut the current line and store it in register a\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#vimrc-essentials","title":"vimrc essentials","text":"<pre><code>:set incsearch : jumps to search word as you type (annoying but excellent)\n:set wildignore=*.o,*.obj,*.bak,*.exe\n:syntax on : display syntactical elements by color based on filetype ( extension )\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#conventional-shifting","title":"Conventional shifting","text":"<pre><code>:'a,'b&gt;&gt;      : Shift all the lines between marker a and marker b to right\n:10,15&gt;&gt;      : Shift line 10 to line 15 to right\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#searching","title":"Searching","text":"<p>Search using basic regular expression <pre><code>/^fred.*joe.*bill  : line beginning with fred, followed by joe then bill\n/^[A-J]            : line beginning A-J\n/fred\\_.\\{-}joe    : fred then anything then joe (over multiple lines)\n/fred\\_s\\{-}joe    : fred then any whitespace (including newlines) then joe\n/fred\\|joe         : fred OR joe\n</code></pre></p> <p>Other search commands:</p> <pre><code>[I                 : show lines matching word under cursor &lt;cword&gt;\n*                  : (forwards) find word under cursor (with word boundary)\n#                  : (backwards) find word under cursor (with word boundary)\ng*                 : (forwards) find word under cursor (without word boundary)\ng#                 : (backwards) find word under cursor (without word boundary)\n</code></pre> <p>Note:</p> <ul> <li>Searching \"vi\" with word boundary will match \"running vi\" but not \"Navigator\"</li> <li>Searching \"vi\" without word boundary will match both \"running vi\" and \"Navigator\"</li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#substitution","title":"Substitution","text":"<p>Basic</p> <pre><code>:%s/fred/joe/igc           : general substitute command\n:%s/\\r_g                   : delete DOS Carriage Returns (^M)\n:'a,'bg/fred/s/dick/joe/gc : VERY USEFUL\n:s/\\(.*\\):\\(.*\\)/\\2 : \\1/  : reverse fields separated by :\n</code></pre> <p>Non-greedy matching with <code>\\{-}</code> <pre><code>:%s/^.\\{-}pdf/new.pdf/     : to first pdf)\n:s/fred/&lt;c-r&gt;a/g           : substitute \"fred\" with contents of register \"a\"\n:%s/^\\(.*\\)\\n\\1/\\1$/       : delete duplicate lines\n:help /\\{-}\n</code></pre></p> <p>Some sample commands <pre><code>:%s/\\f\\+\\.gif\\&gt;/\\r&amp;\\r/g | v/\\.gif$/d | %s/gif/jpg/\n:%s/suck\\|buck/loopy/gc       : ORing\n:s/__date__/\\=strftime(\"%c\")/ : insert datestring\n</code></pre></p> <p>Remove the newline if the next line starts with a non-whitespace <pre><code>:%s#\\(\\S\\)\\n\\(\\S\\)#\\1\\2#\n</code></pre></p> <p>Note that some patterns have different meaning in search and in replacement (ref: StackOverflow)</p> How to type In search, means: In replacement, means: \\n \\n End-of-line \\&lt;Nul&gt; 0x0 ^@ \\&lt;C-v&gt;\\&lt;C-j&gt; \\&lt;Nul&gt; 0x0 \\&lt;Nul&gt; 0x0 \\r \\r Carriage return 0xD \"Break the line here\" ^M \\&lt;C-v&gt;\\&lt;C-m&gt; Carriage return 0xD \"Break the line here\" \\^M \\&lt;C-v&gt;\\&lt;C-m&gt; \\ + carriage return 0xD Carriage return 0xD"},{"location":"Notes/202205042227_vim_quick_reference/#formatting-text","title":"Formatting text","text":"<pre><code>J         : Join next line to the end of current line\ngq&lt;CR&gt;    : Format the text to 80 columns per line\ngqap      : (a is motion p paragraph (visual mode))\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#operate-command-over-multiple-files","title":"Operate command over multiple files","text":"<pre><code>:argdo %s/foo/bar/\n:bufdo %s/foo/bar/\n:windo %s/foo/bar/\n:tabdo %s/foo/bar/\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#command-line-tricks","title":"Command line tricks","text":"<pre><code>gvim -h\nls | gvim -   : edit a PIPE!\n# vg.ksh (shell script)\n# vi all files in directory containing keyword $1 and jump to $1\ngvim.exe -c \"/$1\" $(grep -isl \"$1\" *) &amp;\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#spellchecking","title":"Spellchecking","text":"<pre><code>:setlocal spell spelllang=en_us    : Set spellchecking to en_us\n:setlocal spell!                   : Toggle spellchecking\n]s                                 : Jump to the next spell checking error\n[s                                 : Jump to the previous spell checking error\nz=                                 : Show the possible correction\n1z=                                : Correct the spelling error with the first suggestion\nzg                                 : Add word under the cursor as a good word to the first spellfile\nzw                                 : Add word under the cursor as a bad word to the first spellfile\n2zg                                : Add word under the cursor as a good word to the second spellfile\n</code></pre> <p>Specify the path of <code>spellfile</code> (multiple files can be specified, separated by comma ',') <pre><code>:set spellfile=~/.vim/spell/user1.utf-8.add,~/.vim/spell/user2.utf-8.add\n</code></pre></p>"},{"location":"Notes/202205042227_vim_quick_reference/#paste-to-vim-command-line","title":"Paste to Vim Command Line","text":"<pre><code>:&lt;C-R&gt;\"       : Paste from default register (yanked content)\n:&lt;C-R&gt;*       : Paste from register * (the system clipboard on Windows)\n:&lt;C-R&gt;+       : Paste from register + (the system clipboard on Linux)\n:&lt;C-R&gt;a       : Paste from register a\n:&lt;C-R&gt;&lt;C-W&gt;   : Pull &lt;cword&gt; onto search/command line\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#browsing-files-with-tag","title":"Browsing Files with Tag","text":"<pre><code>:set tags=/path/to/tag/file    : Specify the tag file location\n&lt;C-]&gt;                          : Jump to the first definition of the current word/selected word\n&lt;C-T&gt;                          : Jump back\ng]                             : Select from the match list of the current word/selected word\ng&lt;C-]&gt;                         : Jump to the definition if there is only one matching; open selection list if there are multiple.\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#executing-external-command","title":"Executing External Command","text":"<pre><code>:!command                     : Execute command\n:!%                           : Execute the current file (useful when editing perl script etc)\n:! wc %                       : Find the word count of the current file (running wc against the current file)\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#sorting-text","title":"Sorting Text","text":"<pre><code>:sort u        : Sort, removing duplicate lines\n:sort !        : Sort in reverse\n:sort n        : Numeric sort\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#regular-expression","title":"Regular Expression","text":"<p>The set of special character is determined by the <code>magic</code> option (see <code>:help magic</code>). The default value is \"\\m\" ('magic'), and the corresponding set of special character is as follows:</p> <pre><code>.              match all character\n*              any number of the previous atom\n[]             define a class of character. Everything within [] is treated as plain text, including things like \\s or \\d (except '^' when placed at the beginning of [])\n^              the \"not\" operator when placed at the beginning of the class of character '[]'\n               or the \"beginning of the line\" anchor when placed at the beginning of a regular expression\n$              the \"end of the line\" anchor when placed at the end of a regular expression\n\\              escape the next character\n\\&lt;             word boundary start\n\\&gt;             word boundary end\n</code></pre> <p>Example of using the \"word boundary\" special symbol:</p> <pre><code>/vi            # Match \"vi\" in both \"running vi\" and \"Navigator\"\n/\\&lt;vi\\&gt;        # Match \"vi\" in \"running vi\" but not in \"Navigator\"\n</code></pre> <p>All the other characters will be considered as plain character to be searched. For example</p> <ul> <li><code>\\d+</code> will match <code>1+</code> and <code>2+</code>, but not <code>12</code>. This is because <code>+</code> is treated as plain text.</li> <li><code>\\d\\+</code> will match <code>12</code></li> <li><code>(abc)</code> will match <code>(abc)</code> but not <code>abc</code>. This is because <code>(</code> is treated as plain text</li> <li><code>\\(abc\\)</code> will match <code>abc</code>, and it can be backreferenced by <code>\\1</code></li> <li><code>[\\d]+</code> will NOT match <code>123</code>. This is because <code>\\d</code> within <code>[]</code> is treated as plain text.</li> <li><code>[0-9]+</code> will match <code>123</code></li> </ul>"},{"location":"Notes/202205042227_vim_quick_reference/#change-file-format-option","title":"Change File Format Option","text":"<p>When a DOS file is opened in UNIX format, <code>^M</code> appears at the end of every line. To hide that <code>^M</code>, switch the file format back to DOS by the following command:</p> <pre><code>:e ++ff=dos\n</code></pre> <p>The <code>++ff</code> is one of the <code>++opt</code>. <code>++ff</code> instructs Vim to set <code>fileformat</code> to user specified value while editing the file.</p> <p>Note that <code>:e ++ff</code> only changes how Vim represents the file in the terminal. To convert the line ending in the file, use</p> <pre><code>:w ++ff=dos\n</code></pre> <p>Available fileformat values and the corresponding line ending:</p> dos \\&lt;CR&gt;\\&lt;NL&gt; unix \\&lt;NL&gt; mac \\"},{"location":"Notes/202205042227_vim_quick_reference/#change-file-encoding","title":"Change File Encoding","text":"<pre><code># Change the output encoding that is shown in the terminal\nset encoding=utf-8\n\n# Change the output encoding (local to buffer) of the file that is written\nset fileencoding=utf-8\n\n# Change the output encoding of the file that is written to \"default\"\n# which will be the same as encoding.\nset fileencoding=\n\n# Force writing the file using the specified fileencoding\n# (++enc refers to \"fileencoding\", not \"encoding\")\n:w ++enc=utf-8\n\n# Edit the file with 'fileencoding' set to \"utf-16\"\n:e ++enc=utf-16\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#opening-large-file","title":"Opening Large File","text":"<pre><code>vim -u \"NONE\" hugefile.log\n</code></pre> <p>The option -u \"NONE\" is to skip all the initialization from files and environment variables.</p>"},{"location":"Notes/202205042227_vim_quick_reference/#plugin","title":"Plugin","text":""},{"location":"Notes/202205042227_vim_quick_reference/#csvvim","title":"<code>csv.vim</code>","text":"<pre><code># Open the file in text mode\n:edit +setf\\ text myfile.csv\n\n# Switch a buffer in csv view to text view\n:setf text\n\n# Switch a buffer in text view to csv view\n:setf csv\n</code></pre>"},{"location":"Notes/202205042227_vim_quick_reference/#references","title":"References","text":"<ul> <li>Simple VIM commands you wish you'd known earlier (Stack Overflow)</li> <li>Best Vim Tips (vim.wikia)</li> <li>http://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm </li> </ul>"},{"location":"Notes/202205042311_windbg_quick_reference/","title":"WinDbg Quick Reference","text":""},{"location":"Notes/202205042311_windbg_quick_reference/#basics","title":"Basics","text":""},{"location":"Notes/202205042311_windbg_quick_reference/#stepping","title":"Stepping","text":"Command Description <code>g</code> go <code>g `:123`</code> Run to source line 123 of the current source file <code>g `MyModule!path/to/myfile.c:123`</code> Run to source line 123 of <code>path/to/myfile.c</code> <code>g MyModule!MyClass::Func</code> Run to the beginning of <code>MyClass::Func</code> <code>g 00007ff6`74ba5f84</code> Run to address <code>00007ff6`74ba5f84</code> <code>gu</code> Go up = execute until the current function is complete <code>p</code> step over <code>t</code> step into"},{"location":"Notes/202205042311_windbg_quick_reference/#browsing-information","title":"Browsing Information","text":"Command Description <code>k</code> display call stack <code>kd</code> display raw stack data <code>lm</code> display all loaded and unloaded modules <code>lmv</code> verbose mode for <code>lm</code> <code>lm m kernel32</code> display information for <code>kernel32.dll</code> <code>dt MyModule!MyVar*</code> display all variables containing <code>MyVar</code> in <code>MyModule.dll</code> <code>dt MyModule!MyVar* -v</code> verbose mode for <code>dt MyModule!MyVar*</code> <code>dt MyModule!MyVar* -s 8</code> Same as <code>dt MyModule!MyVar*</code> but show only whose size is 8 bytes <code>dt MyModule!MyVar -r2</code> display the information of <code>MyVar</code> recursively for 2 layers <code>dv /t /V /i</code> List all local variables with type information (/t), address offset (/V), and classify them into categories (/i)"},{"location":"Notes/202205042311_windbg_quick_reference/#expression","title":"Expression","text":"Cmd Description <code>? Expression</code> evaluates an expression <code>? 30 + 40</code> Show the result of 0x30 + 0x40, in DEC and in HEX <code>? 0n100</code> Show the result of 100, in DEC and in HEX <code>?? Expression</code> evaluates and displays the value of an expression according to the C++ expression rules <code>?? @@c++(Expression)</code> Use C++ expression parser to evaluates and displays the value of an expression <p>Example:</p> <pre><code>?? @@c++( ((MyStruct*)ptr)-&gt;MyField )\n</code></pre>"},{"location":"Notes/202205042311_windbg_quick_reference/#break-points","title":"Break points","text":"Cmd Description <code>bp [address]</code> set breakpoint at the specified address <code>bp `MyModule!file.c:12`</code> set breakpoint at the specific line in the source code <code>bp MyModule!MyClass::MyFunc</code> set breakpoint at the specified function. (May hit ambiguity issue if MyFunc is overloaded) <code>bp @@( MyClass::MyFunc )</code> set breakpoint at the specified functions. (Good for overloaded functions) <code>bp /w \"MyVar &gt; 20\" [address]</code> Conditional breakpoint, triggerred when <code>MyVar &gt; 20</code> <code>bu [address]</code> set unresolved breakpoint <code>bu MyModule!MyClass::MyFunc</code> set breakpoint at the specified function before MyModule is loaded <code>ba [r|w|e][Size] [address]</code> set breakpoint upon access to specified address <code>ba r4 0x3e1f6c</code> break when reading/writing the variable at specified address <code>bp [address] [count]</code> set breakpoint that will be hit after being passed by <code>[count]</code> times <code>bl</code> List all the breakpoints, along with their remaining pass counts <p>Notes:</p> <ul> <li><code>MyModule</code> is usually the name of the executable or the DLL where the function is executed.</li> <li>To look up the address of a variable, use the command <code>dx &amp;MyVariable</code> or <code>dx MyPtr</code></li> <li> <p><code>bl</code> shows the breakpoints in a format like the following:</p> <pre><code>0 e Disable Clear  00007ffc`39b2fa20  [path\\to\\file.cpp @ 67]     084b (1000)\n</code></pre> <p>where <code>084b</code> is the remaining pass count, and <code>(1000)</code> is the original pass count</p> </li> </ul>"},{"location":"Notes/202205042311_windbg_quick_reference/#reference","title":"Reference","text":"<ul> <li>http://windbg.info/doc/1-common-cmds.html</li> <li>https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/commands</li> </ul>"},{"location":"Notes/202205042320_markdown_quick_reference/","title":"Markdown Quick Reference","text":""},{"location":"Notes/202205042320_markdown_quick_reference/#basic","title":"Basic","text":"<p>The original syntax of Markdown </p> <p>The extended syntax of Markdown</p>"},{"location":"Notes/202205042320_markdown_quick_reference/#code-blocks","title":"Code blocks","text":"<p>Use a pair of N backticks (`) to form a code block (N \\(\\geq\\) 3).</p> <pre><code>```some-language-tag\nUse 4 backticks to form the code block\nso that I can write 3 backticks in the code block\n```\n</code></pre> <p>To show a code block inside a code block like the one above, use N=4 for outer code block so that the inner code block of N=3 will appear as plain text.</p> <p>Simiarly, use a pair of M backtics (`) to form an inline code (M \\(\\geq\\) 1). You can <code>use 2 backticks for inline code so that you can write single backtick ` in it</code>.</p>"},{"location":"Notes/202205042320_markdown_quick_reference/#escaping-vertical-bar-in-the-table","title":"Escaping vertical bar in the table","text":"<pre><code>| |\n| - |\n| use backslash to escape \\| |\n| &lt;code&gt;use \\&lt;code\\&gt; element and backslash to escape \\| for inline code&lt;/code&gt; |\n</code></pre> use backslash to escape | <code>use \\&lt;code&gt; element and backslash to escape | for inline code</code>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/","title":"Windows Batch Script Quick Reference","text":""},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#comments","title":"Comments","text":"<pre><code>REM A line beginning with REM is treated as comment\n\n:: A line beginning with double colon is also treated as comment\n</code></pre> <p>Double colons (<code>::</code>) do not seem to work well in the <code>( )</code> scope. </p>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#string","title":"String","text":""},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#substring","title":"Substring","text":"<pre><code>set MYSTRING=This is an apple\n\n:: Print 6 characters starting from position 0, which will be \"This i\"\necho %MYSTRING:~0,6%\n\n:: Print starting from position 1 till 2 characters from the end of the string, which will be \"his is an app\"\necho %MYSTRING:~1,-2%\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#comparison","title":"Comparison","text":"<pre><code>set MYSTRING=This is an apple\n\n:: Equality\nIF \"%MYSTRING%\" == \"This is an apple\" (\n  echo matched\n) ELSE (\n  echo not matched\n)\n\n:: Checking if the string contains a substring by trying to remove the substring\nIF NOT \"%MYSTRING%\" == \"%MYSTRING:apple=\" (\n  echo contain \"apple\"\n) ELSE (\n  echo not contain \"apple\"\n)\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#replace","title":"Replace","text":"<pre><code>set MYSTRING=This Is an apple\n\n:: Replace every \"is \" with \"x\", which will be \"Thxxan apple\" (note that the search is case insensitive)\necho %MYSTRING:is =x\"\n\n:: Replace \":(\" with \":=)\". It's okay to have equal sign '=' in the replace pattern\nset MYSTRING=:(\necho %MYSTRING::(=:=)%\n\n:: Trying to replace :=) with :( does not work. The search pattern cannot contain equal sign '='. \nset MYSTRING=:=)\necho %MYSTRING::=)=:(%\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#start-a-program-in-a-new-separate-session","title":"Start a program in a new, separate session","text":"<pre><code>start \"WINDOW_TITLE\" \"COMMAND\" COMMAND_ARGUMENTS\nstart \"COMMAND\"\n</code></pre> <p>Without <code>start</code>, the batch script will hang until the command returns.</p> <p><code>start</code> regards the first quoted parameter as the window-title, unless it's the only parameter. In order to run <code>COMMAND</code> with some argument, one can enter</p> <pre><code>start \"\" \"COMMAND\" COMMAND_ARGUMENTS\n</code></pre> <p>which specifies empty string for the window title.</p> <p>For example, to run <code>dir</code> with two arguments <code>/s</code> and <code>/b</code> with <code>start</code>, one can write</p> <pre><code>start \"\" dir /s /b\nstart \"\" \"dir\" \"/s\" \"/b\"\n</code></pre> <p>Quoting <code>/s</code> and <code>/b</code> together (<code>\"/s /b\"</code>) results in it being treated as one argument to <code>dir</code>, which leads to an error.</p>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#call-one-batch-program-from-another-without-stopping-the-parent-batch-program","title":"Call one batch program from another without stopping the parent batch program","text":"<pre><code>call ANOTHER_BATCH\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#hibernaterebootshutdown","title":"Hibernate/Reboot/Shutdown","text":"<pre><code>REM Hibernate\nRUNDLL32.EXE PowrProf.dll,SetSuspendState\n\nREM Reboot\nshutdown -r -t 01\n\nREM Shutdown\nshutdown -s -t 01\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#map-to-drive","title":"Map to Drive","text":"<pre><code>subst O: /D\nsubst O: DESTINATION_PATH\n</code></pre> <p>This command maps <code>DESTINATION_PATH</code> to Drive <code>O:</code>. The option <code>/D</code> is to delete the existing mapping</p>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#change-power-plan","title":"Change Power Plan","text":"<pre><code>REM saver\nC:/Windows/System32/powercfg.exe /setactive a1841308-3541-4fab-bc81-f71556f20b4a  \n\nREM Balanced\nC:/Windows/System32/powercfg.exe /setactive 381b4222-f694-41f0-9685-ff5bb260df2e\n\nREM Performance\nC:/Windows/System32/powercfg.exe /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#pipe-the-output-of-one-command-to-the-other-command","title":"Pipe the output of one command to the other command","text":"<pre><code>@REM cd to the root of git repo\nfor /f %%i in ('git rev-parse --show-toplevel') do cd %%i\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#backup-redmine","title":"Backup Redmine","text":"<pre><code>REM ######## Define the date ########\nfor /f \"tokens=2-4 delims=/ \" %%a in ('date /T') do set year=%%c\nfor /f \"tokens=2-4 delims=/ \" %%a in ('date /T') do set month=%%a\nfor /f \"tokens=2-4 delims=/ \" %%a in ('date /T') do set day=%%b\nset TODAY=%year%_%month%%day%\n\nmysqldump -u REDMINE_USERNAME -pREDMINE_PASSWORD REDMINE_DBNAME &gt; redmine_%TODAY%\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#zip-files-by-7z","title":"Zip Files by 7z","text":"<pre><code>\"C:\\Program Files\\7-zip\\7z.exe\" a -tzip -mx9 outfile.zip targetfiles\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#exit-code-of-the-last-command","title":"Exit code of the last command","text":"<pre><code>REM This line executes cmd.exe and exit with exit code 0\nCMD /C EXIT 0\n\nREM When there is no \"ERRORLEVEL\" environment variable, %ERRORLEVEL% will be the internal state \"error level\", which is the exit code of the last command, which is 0.\necho Exit code is %ERRORLEVEL%\n\nREM If there is \"ERRORLEVEL\" environment variable, %ERRORLEVEL% will be the environment variable instead of the internal state.\nSet ERRORLEVEL=1\necho Environment Variable ERRORLEVEL is %ERRORLEVEL%\n\nREM However, the \"IF ERRORLEVEL\" command directly reads the internal state, and it won't be affected by the \"ERRORLEVEL\" environment variable\nIF ERRORLEVEL 1 echo This line will not print.\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#conditional-execution","title":"Conditional Execution","text":"<p>Execute command2 after command1  has finished</p> <pre><code>command1 &amp; command2\nDOSKEY RunTwoCommands=command1 ^&amp; command2\nDOSKEY RunTwoCommands=command1 $T command2\n</code></pre> <p>Execute command2 only if execution of command1 has finished successfully</p> <pre><code>command1 &amp;&amp; command2\nDOSKEY RunTwoCommands=command1 ^&amp;^&amp; command2\n</code></pre> <p>Execute command2 only if execution of command1 has finished unsuccessfully</p> <pre><code>command1 || command2\nDOSKEY RunTwoCommands=command1 ^|^| command2\n</code></pre> <p>Note that sometimes <code>command1</code> may invoke subroutines or spawn another batch script, and the corresponding failure/error may not be caught when <code>command1</code> finishes. In such case, use <code>call command1</code></p>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#pausewait","title":"Pause/Wait","text":"<pre><code>REM Pause; wait for any key\npause\n\nREM wait for 10 seconds or until any key is pressed\ntimeout 10\n\nREM wait for 10 seconds (may not work on some Windows)\nsleep 10\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#get-the-path-of-the-batch-file-being-executed","title":"Get the path of the batch file being executed","text":"<pre><code>REM %0 will be the full path to the batch file, like path\\to\\myscript.bat\nSET mypath=%0\n\nREM %~dp0 will be the directory of the batch file, like path\\to\\\nSET mydir=%~dp0\n\nREM Use substring syntax to remove the trailing backslash in %mydir%\necho %mydir:~0,-1%\n</code></pre>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#logical-operators","title":"Logical Operators","text":"<p>Windows batch script does not support logical operators like <code>AND</code> and <code>OR</code>. Use multiple <code>IF</code> statement to implement the desired conitions.</p>"},{"location":"Notes/202205042336_windows_batch_script_quick_reference/#reference","title":"Reference","text":"<ul> <li>https://www.tutorialspoint.com/batch_script/index.htm</li> </ul>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/","title":"Windows Command Line Quick Reference","text":""},{"location":"Notes/202205042339_windows_command_line_quick_reference/#alias","title":"Alias","text":""},{"location":"Notes/202205042339_windows_command_line_quick_reference/#using-aliasexe","title":"Using <code>Alias.exe</code>","text":"<pre><code>REM Define individual alias\nalias.exe vi \"C:\\Tools\\vim74\\gvim.exe\" --remote-tab-silent \"$*\"\n\nREM Batch define aliases using a text file\nalias.exe -f myalias.txt\n\nREM Example myalias.txt content\nvi \"C:\\Tools\\vim74\\gvim.exe\" --remote-tab-silent \"$*\"\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#using-doskey-command","title":"Using <code>DOSKEY</code> command","text":"<pre><code>DOSKEY vi=C:\\vim80\\gvim.exe --remote-tab-silent $*\n</code></pre> <p>The special symbol <code>$*</code> is the string after the alias in the command line. For example,</p> <pre><code>vi ~/.vimrc\n</code></pre> <p>will be executed as</p> <pre><code>C:\\vim80\\gvim.exe --remote-tab-silent ~/.vimrc\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#diff","title":"Diff","text":"<pre><code>fc.exe file1.txt file2.txt\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#grep","title":"grep","text":"<pre><code>findstr.exe /snip /c:\"string to find\" *.cpp *.h *.c\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#dir","title":"dir","text":"<p>Recursively search</p> <pre><code>dir.exe myfile /S\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#processes","title":"Processes","text":"<p>List the processes (on the current machine)</p> <pre><code>tasklist\n\nREM List the process as well as the services loaded by the process\ntasklist /svc   \n\nREM List the processes that load sapi_onecore.dll\ntasklist /FI \"MODULES eq sapi_onecore.dll\"  \n\nREM List the processes that load any service whose name starts with \"audio\"\ntasklist /FI \"SERVICES eq audio*\"\n\nREM List the processes that load any service whose name starts with \"audio\", and show all the services loaded by each of such processes\ntasklist /FI \"SERVICES eq audio*\" /SVC      \n</code></pre> <p>List the processes that load a specific DLL <code>abc.dll</code></p> <pre><code>tlist -m *abc.dll\n</code></pre> <p>Note</p> <ul> <li>Option <code>-m</code> requires a match to the full path. As a result, the wildcard char <code>*</code> is necessary because we usually don't know (or don't want to type) the full path to <code>abc.dll</code>.</li> </ul> <p>(Powershell) List the processes on the remote device</p> <pre><code>tlistd\n\nREM List the process as well as the services loaded by the process\ntlistd -s      \n</code></pre> <p>Kill the process (on the current machine)</p> <pre><code>kill &lt;PID&gt;\n</code></pre> <p>(Powershell) Kill the process (on the current machine)</p> <pre><code>Stop-Process &lt;PID&gt;\nStop-Process -name &lt;ProcessName&gt;\n</code></pre> <p>(Powershell) Kill the processes on the remote device</p> <pre><code>killd &lt;PID&gt;\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#sc","title":"sc","text":"<p>Show the services that are dependent on a given <code>&lt;TargetService&gt;</code></p> <pre><code>sc enumdepend &lt;TargetService&gt;\n</code></pre> <p>Note</p> <p>It seems that <code>sc enumdepend</code> will show the nested dependencies.  If service A depends on service B, which depends on service C, which depends on service D, then <code>sc enumdepend D</code> will show service A, B, and C in order.  </p>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#setting-for-computer-and-user","title":"Setting for Computer and User","text":"<p>(elevated Powershell) Set the computer to join a domain</p> <pre><code>Add-Computer -domain MyDomainName -cred MyDomainName\\MyUserName\n</code></pre> <p>Add the user <code>MyDomainName\\MyUserName</code> as local admin</p> <pre><code>net localgroup administrators MyDomainName\\MyUserName /add\n</code></pre> <ul> <li>Note: If the user account belongs to the local machine instead of a domain, user <code>.</code> as <code>MyDomainName</code> (for example, <code>.\\yyc</code>).</li> </ul> <p>Enabling/disabling the remote desktop feature</p> <pre><code>REM Enabling\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f\n\nREM Disabling\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#registry","title":"Registry","text":"<p>Query registry</p> <pre><code>REM query the key HKLM. This will only list the subkeys and values under the key HKLM.\nreg query HKLM                       \n\nREM recursively query the pattern \"*microsoft*\" under all subkeys under HKLM\nreg query HKLM /f \"*microsoft*\" /s   \n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#mapping-directory-to-drive","title":"Mapping directory to Drive","text":"<pre><code>subst x: %USERPROFILE%\\Downloads\nsubst x: /D\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#open-url-in-ieedge","title":"Open URL in IE/Edge","text":"<pre><code>REM open in Microsoft IE\n\"c:\\Program Files\\Internet Explorer\\iexplore.exe\" &lt;url&gt;\n\nREM open in Microsoft Edge\nstart microsoft-edge:&lt;url&gt;\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#redirection","title":"Redirection","text":"<pre><code>dir &gt; a.txt 2&gt;&amp;1\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#ftp","title":"ftp","text":"<p>Specify a script for the ftp client to run: <pre><code>ftp -i -s:&lt;script_filename&gt;\n</code></pre></p> <p>An example of the script file to login ftp server <code>example.com</code> as user <code>uname</code> with password <code>pword</code> to upload <code>file1.exe</code></p> <pre><code>open example.com\nuname\npword\ncd ./Folder1\nbinary\nput file1.exe\nquit\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#shutdownsleephibernate","title":"Shutdown/sleep/hibernate","text":"<pre><code>REM Shutdown\n%windir%\\System32\\shutdown.exe -s\n\nREM Reboot\n%windir%\\System32\\shutdown.exe -r\n%windir%\\System32\\shutdown.exe -r -t 0\n\nREM Logoff\n%windir%\\System32\\shutdown.exe -l\n\nREM Sleep\n%windir%\\System32\\rundll32.exe powrprof.dll,SetSuspendState 0,1,0\n\nREM Hibernate\n%windir%\\System32\\rundll32.exe powrprof.dll,SetSuspendState Hibernate\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#powercfg","title":"powercfg","text":"<p>Change power plan</p> <pre><code>REM Disable hibernation\npowercfg -hibernate off\n\nREM List available power plans\npowercfg -list\n\nREM Change to \"high performance\" power plan\npowercfg -setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#prompt","title":"PROMPT","text":"<p>Change the cmd.exe command prompt.</p> <p>List of special code:</p> <pre><code>   $A  &amp;           (Ampersand)\n   $B  |           (pipe)\n   $C  (           (Left parenthesis)\n   $D Current date\n   $E Escape code  (ASCII code 27)\n   $F  )           (Right parenthesis)\n   $G  &gt;           (greater-than sign)\n   $H  Backspace   (erases previous character)\n   $L  &lt;           (less-than sign)\n   $M  Display the remote name for Network drives\n   $N  Current drive\n   $P  Current drive and path\n   $Q  =           (equal sign)\n   $S              (space)\n   $T  Current time\n   $V  Windows version number\n   $_  Carriage return and linefeed\n   $$  $           (dollar sign)\n   $+  Will display plus signs (+) one for each level of the PUSHD directory stack\n</code></pre> <p>For example:</p> <pre><code>REM Show the time (HH:MM) at the prompt\nPROMPT=[$T$H$H$H$H$H$H]\n\nREM Show the time (HH:MM) at the prompt, with color\nPROMPT=$E[1;37;42m[$T$H$H$H$H$H$H]$E[;m\n\nREM Reset to default\nPROMPT=\n</code></pre> <p>Ref: https://ss64.com/nt/prompt.html</p>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#environment-variable","title":"Environment Variable","text":"<p>Set a variable in the current environment</p> <pre><code>set FOOBAR=1\n</code></pre> <p>Remove a variable in the current environment (not permanently)</p> <pre><code>set FOOBAR=\n</code></pre> <p>Permanently remove the variable from the user environment (require logout/reboot to take effect):</p> <pre><code>REG delete HKCU\\Environment /F /V FOOBAR\n</code></pre> <p>Permanently remove the variable from the system environment (require logout/reboot to take effect):</p> <pre><code>REG delete \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" /F /V FOOBAR\n</code></pre>"},{"location":"Notes/202205042339_windows_command_line_quick_reference/#windows-system-info","title":"Windows System Info","text":"<pre><code>ver\nsysteminfo\n</code></pre>"},{"location":"Notes/202205092000_set_github_token/","title":"Interact with GitHub using git command-line and personal access token","text":""},{"location":"Notes/202205092000_set_github_token/#context","title":"Context","text":"<p>When using command line to interact with GitHub, it no longer takes the account password for authentication. Instead, it relies on some alternatives such as the personal access tokens (PATs).</p> <p>After user creates a personal access token, user would want git to remember the PAT, so that GitHub would not request for the authentication for every single command.</p>"},{"location":"Notes/202205092000_set_github_token/#problem","title":"Problem","text":"<p>How to make git command line to remember the PAT?</p>"},{"location":"Notes/202205092000_set_github_token/#solution","title":"Solution","text":"<p>Do the following:</p> <ol> <li>Issue some git command that will trigger the authentication, such as <code>git push</code></li> <li>A prompt will appear, asking user to choose a credential manager. Choose <code>store</code>.</li> <li>Another prompt will appear, asking for the username. Enter the GitHub account name.</li> <li>Another prompt will appear, asking for the password. Enter the PAT.</li> <li>Done.</li> </ol>"},{"location":"Notes/202205092000_set_github_token/#note","title":"Note","text":"<ul> <li>It is possible to specify the PAT as part of the git remote URL, but it is not recommended, for the PAT can be seen as plain text via commands like <code>git remote -v</code></li> <li>If the old PAT expired, the first attempt of <code>git push</code> may just fail without prompting user to enter the credential. In such case, simply try <code>git push</code> one more time.</li> </ul>"},{"location":"Notes/202205092000_set_github_token/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/a/62184716</li> </ul>"},{"location":"Notes/202205140933_ipd/","title":"Inter-channel Phase Difference","text":"<p>Inter-channel phase difference (IPD) is a useful feature in the estimation of the direction-of-arrival (DOA) of a sound source.</p> <p>While the actual form of the IPD varies from implementation to implementation, it should always reflect the phase differences between the audio channels.</p>"},{"location":"Notes/202205140933_ipd/#phase-difference-between-audio-channels","title":"Phase Difference between audio channels","text":"<p>Given </p> <ul> <li>\\(X_m \\left( f,t \\right) \\in \\mathbb{C}\\): The short-time fourier transform (STFT) of the audio signal of the \\(m\\)-th channel at frequency \\(f\\) at time frame \\(t\\)</li> <li>\\(m_r\\): The integer index of the reference audio channel</li> </ul> <p>The phase difference between channel \\(m\\) and \\(m_r\\) is then</p> \\[ \\delta_{m} \\left( f,t \\right) = \\angle X_m \\left( f,t \\right) - \\angle X_{m_r} \\left(f,t \\right) \\]"},{"location":"Notes/202205140933_ipd/#possible-forms-of-ipd","title":"Possible forms of IPD","text":""},{"location":"Notes/202205140933_ipd/#form-1","title":"Form 1","text":"<p>One may define IPD as </p> \\[ F_m \\left(f,t \\right) = \\log \\left( {X_{m_r}\\left(f,t\\right)} \\over X_m\\left(f,t\\right) \\right) \\] <p>such that the phase difference can be derived from </p> \\[ \\delta_{m} \\left( f,t \\right) = - \\mathfrak{I} \\left( F_m \\left(f,t\\right) \\right) \\] <p>where \\(\\mathfrak{I}\\left( \\cdot \\right)\\) is the imaginary part operator</p> <p>See https://ieeexplore.ieee.org/document/6882340 </p>"},{"location":"Notes/202205140933_ipd/#form-2","title":"Form 2","text":"<p>Another way to define IPD is </p> \\[ F_m \\left(f,t \\right) = X_m \\left( f,t \\right) \\cdot X_{m_r}^* \\left( f,t \\right) \\] <p>such that the phase difference can be derived from </p> \\[ \\delta_{m} \\left( f,t \\right) = \\angle F_m \\left(f,t \\right) \\]"},{"location":"Notes/202205140933_ipd/#reference","title":"Reference","text":"<ul> <li>https://ieeexplore.ieee.org/document/6882340</li> </ul>"},{"location":"Notes/202205140940_two_vscode_same_project/","title":"Open the same project in two VSCode instances","text":""},{"location":"Notes/202205140940_two_vscode_same_project/#context","title":"Context","text":"<p>When working on a software project, user wants to see file <code>MyClassA.cpp</code> on one monitor and see file <code>MyClassB.cpp</code> on the other monitor. The \"split window\" feature puts two files on the same monitor and is less desirable. </p> <p>If user tries to open the same software project in another VSCode instance, VSCode will switch to the already-opened project instead of opening a duplicated instance. </p> <p>One option is to open <code>MyClassA.cpp</code> in another editor such as vim, but it is preferred to open the file in VSCode to unify the editing experience (syntax highlighting, searching, etc).</p>"},{"location":"Notes/202205140940_two_vscode_same_project/#problem","title":"Problem","text":"<p>How to view two files in the same project on different monitors using VSCode?</p>"},{"location":"Notes/202205140940_two_vscode_same_project/#solution","title":"Solution","text":"<p>Duplicate the workspace so the same project can be opened by a separate VSCode instance: <code>Ctrl+Shift+P</code></p>"},{"location":"Notes/202205141937_maximum_likelihood_estimation/","title":"Maximum Likelihood Estimation","text":""},{"location":"Notes/202205141937_maximum_likelihood_estimation/#context","title":"Context","text":"<p>Given a random vector \\(\\mathbf{Y}\\), whose probability distribution is expected to be modeled by a given function \\(f_{\\mathbf{Y}}(\\mathbf{y} ; \\mathbf{\\theta})\\), where</p> <ul> <li>\\(\\mathbf{y}\\) is a sample of \\(\\mathbf{Y}\\)</li> <li>\\(\\mathbf{\\theta}\\) is a set of parameters controlling the probability distribution.</li> </ul> <p>A sample \\(\\mathbf{y}\\) is available, while the actual values of \\(\\mathbf{\\theta}\\) are not. Without additional information about the probability distribution of \\(\\mathbf{\\theta}\\), we want to have some good estimate of \\(\\mathbf{\\theta}\\) based on the sample \\(\\mathbf{y}\\).</p>"},{"location":"Notes/202205141937_maximum_likelihood_estimation/#problem","title":"Problem","text":"<p>Given the probability distribution \\(f_{\\mathbf{Y}}(\\mathbf{y} ; \\mathbf{\\theta})\\) and a sample \\(\\mathbf{y}\\), how to make a good estimate of \\(\\mathbf{\\theta}\\)?</p>"},{"location":"Notes/202205141937_maximum_likelihood_estimation/#solution","title":"Solution","text":"<p>Find the values of the parameters that maximize the probability function for the given sample \\(\\mathbf{y}\\). In other words, find \\(\\hat{\\theta}\\) such that</p> \\[ \\hat{\\theta} = {\\underset{\\theta \\in \\Theta}{\\operatorname {arg\\;max} }}\\ f_{\\mathbf{Y}}(\\mathbf{y} ; \\mathbf{\\theta}) \\] <p>where \\(\\mathbf{\\Theta}\\) is the parameter space consisting of all the possible values of \\(\\mathbf{\\theta}\\)</p>"},{"location":"Notes/202205141937_maximum_likelihood_estimation/#applications","title":"Applications","text":""},{"location":"Notes/202205141937_maximum_likelihood_estimation/#decoding-signals","title":"Decoding Signals","text":"<p>Given that</p> <ul> <li>A transmitter sends out a sequence of signal \\((x_1, x_2, x_3)\\) where \\(x_i \\in \\{0,1\\}\\)</li> <li>\\(x_i\\) are i.i.d</li> <li>The receiver receives a sequence of noisy signal \\((0.9, 0.2, 0.8)\\)</li> <li>the noisy channel can be modeled as \\(y_i = x_i + n_i\\), where \\(n_i \\sim \\mathcal{N}(0, \\sigma^2)\\)</li> <li>\\(n_i\\) are i.i.d</li> </ul> <p>The problem of decoding the received signal can be solved by the maximum likelihood estimator whose unknown parameters are</p> \\[ \\mathbf{\\theta} = [ x_1, x_2, x_3 ] \\] <p>Since both \\(x_i\\) and \\(n_i\\) are i.i.d, the probability function of \\(\\mathbf{Y}\\) can be written as</p> \\[ f_{\\mathbf{Y}}( (0.9, 0.2, 0.8) ; (x_1, x_2, x_3) ) = \\frac{1}{\\sqrt{2 \\pi \\sigma^2}}\\ \\exp \\left(-{\\frac {(0.9-x_1)^2}{2\\sigma^2}}\\right) \\cdot \\frac{1}{\\sqrt{2 \\pi \\sigma^2}}\\ \\exp \\left(-{\\frac {(0.2-x_2)^2}{2\\sigma^2}}\\right) \\cdot \\frac{1}{\\sqrt{2 \\pi \\sigma^2}}\\ \\exp \\left(-{\\frac {(0.8-x_3)^2}{2\\sigma ^2}}\\right) \\] <p>And the solution to this maximum likelihood estimation problem is</p> \\[ \\hat{\\mathbf{\\theta}} = [ x_1 = 1, x_2 = 0, x_3 = 1 ] \\]"},{"location":"Notes/202205141937_maximum_likelihood_estimation/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Maximum likelihood estimation</li> </ul>"},{"location":"Notes/202205151122_noise_spectral_density/","title":"Noise Spectral Denity","text":"<p>From Wikipedia: Noise spectral density:  </p> <p>In communications, noise spectral density \\(N_0\\) is the noise power per unit of bandwidth; that is, it is the power spectral density of the noise. ... If the noise is white noise, i.e., constant with frequency, then the total noise power \\(N\\) in a bandwidth \\(B\\) is \\(BN_0\\). This is utilized in SNR calculations.  </p> <p>The definition above seems under the assumption of the single-sided power spectral density. Under the definition of two-sided power spectral density, the AWGN spectral density is more often referred to as \\(N_0/2\\). However, when calculating the total noise power, both the positive and negative bandwidth should be accounted for, and thus the total noise power remains \\(BN_0\\).  </p> <p>When the signal is sampled by a sampling frequency of \\(f_s\\), the bandwidth \\(B=f_s\\), and the total noise power, or, equivalently, the variance of the AWGN at each sample, is \\(f_s \\cdot N_0\\) (assuming the anti-aliasing filter has been applied to eliminate the noise power beyond the sampling rate).</p>"},{"location":"Notes/202205151127_noncircularity_of_complex_rv/","title":"Noncircularity of Complex Random Variable","text":""},{"location":"Notes/202205151127_noncircularity_of_complex_rv/#context","title":"Context","text":"<p>Given two complex random variables, \\(X\\) and \\(Y\\):</p> \\[ \\begin{align} X &amp;= X_R + j \\cdot X_I \\\\ Y &amp;= Y_R + j \\cdot Y_I \\\\ \\end{align} \\] <p>where</p> \\[ \\begin{align} X_R \\sim \\mathcal{N} ( \\mu, \\sigma^2) &amp;, X_I \\sim \\mathcal{N} ( \\mu, \\sigma^2) , \\\\ Y_R \\sim \\mathcal{N} ( \\mu, \\sigma^2) &amp;, Y_I = Y_R, \\\\ \\end{align} \\] <p>The distribution functions of \\(X\\) and \\(Y\\) are 2D Gaussian and 1D Gaussian, respectively. Despite the distribution functions are so different between \\(X\\) and \\(Y\\), their expected magnitude, \\(E|X|^2\\) and \\(E|Y|^2\\), are the same:</p> \\[ \\begin{align} E|X|^2 &amp;= E(X_R^2 + X_I^2) = 2( \\mu^2 + \\sigma^2 ) \\\\ E|Y|^2 &amp;= E(Y_R^2 + Y_I^2) = 2( \\mu^2 + \\sigma^2 ) \\end{align} \\] <p>This observation highlights the fact that, when designing algorithms against complex values, relying on solely the magnitude of the signal may not be efficient.</p>"},{"location":"Notes/202205151127_noncircularity_of_complex_rv/#noncircularity","title":"Noncircularity","text":"<p>The difference between \\(X\\) and \\(Y\\) can be easily emphasized by evaluating the expected values of their square terms, \\(E(X)^2\\) and \\(E(Y)^2\\):</p> \\[ \\begin{align} E(X)^2 &amp;= E(X_R + j X_I )^2 = 2j \\cdot E(X_R X_I) = 2j \\cdot E(X_R)E(X_I) = 2j \\cdot \\mu^2 \\\\ E(Y)^2 &amp;= E(Y_R + j Y_I )^2  = 2j \\cdot E(Y_R Y_I) = 2j E(Y_R)^2 = 2j \\cdot (\\mu^2 + \\sigma^2) \\end{align} \\] <p>And a proposed metric to quantify this observation is a normalized circularity coefficient, \\(k_x\\):</p> \\[ k_x = \\frac{ E(X^2) }{ E|X|^2 } \\] <p>Note: The paper in reference defines \\(k_x\\) under the assumption that \\(X\\) is zero mean. So the formula of \\(k_x\\) may require modification when \\(X\\) is not zero mean.</p>"},{"location":"Notes/202205151127_noncircularity_of_complex_rv/#reference","title":"Reference","text":"<ul> <li>Voice activity detection using subband noncircularity </li> </ul>"},{"location":"Notes/202205151430_rounding_method/","title":"List of rounding methods","text":"y round down round up round towards zero round away from zero round to nearest +23.67 23 24 23 24 See below for differeint tie-breaking rules +23.50 23 24 23 24 See below for differeint tie-breaking rules +23.35 23 24 23 24 See below for differeint tie-breaking rules +23.00 23 23 23 23 See below for differeint tie-breaking rules 0 0 0 0 0 See below for differeint tie-breaking rules -23.00 -23 -23 -23 -23 See below for differeint tie-breaking rules -23.35 -24 -23 -23 -24 See below for differeint tie-breaking rules -23.50 -24 -23 -23 -24 See below for differeint tie-breaking rules -23.67 -24 -23 -23 -24 See below for differeint tie-breaking rules"},{"location":"Notes/202205151430_rounding_method/#different-tie-breaking-rules-for-round-to-nearest","title":"Different tie-breaking rules for \"round to nearest\"","text":"y round half down round half up round half away from zero round half towards zero +23.67 24 24 24 24 +23.50 23 24 24 23 +23.35 23 23 23 23 +23.00 23 23 23 23 0 0 0 0 0 -23.00 -23 -23 -23 -23 -23.35 -23 -23 -23 -23 -23.50 -24 -23 -24 -23 -23.67 -24 -24 -24 -24 y round half to even round half to odd 24.5 24 25 23.5 24 23 0.5 0 1 -0.5 0 -1 -23.5 24 -23 -24.5 24 -25"},{"location":"Notes/202205151430_rounding_method/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Rounding </li> </ul>"},{"location":"Notes/202205151516_signal_energy_power/","title":"Signal Energy and Power","text":""},{"location":"Notes/202205151516_signal_energy_power/#basic-definition","title":"Basic Definition","text":"<p>Given the continuous time signal \\(x(t)\\) and discrete time signal \\(x[n]\\).</p> <p>The instantaneous signal power is defined as</p> \\[ \\begin{align*} P(t) &amp;= |x(t)|^2 \\\\ P[n] &amp;= |x[n]|^2 \\end{align*} \\] <p>The signal energy is defined as</p> \\[ \\begin{align*} E(t_0, t_1) &amp;= \\int_{t_0}^{t_1} |x(t)|^2 \\,\\mathrm{d}t \\\\ E(n_0, n_1) &amp;= \\sum_{n=n_0}^{n1} |x[n]|^2 \\end{align*} \\] <p>The average signal power is defined as</p> \\[ \\begin{align*} P(t_0, t_1) &amp;= \\frac{1}{t_1-t_0} \\int_{t_0}^{t_1} |x(t)|^2 \\,\\mathrm{d}t \\\\ P(n_0, n_1) &amp;= \\frac{1}{n_1-n_0+1} \\sum_{n=n_0}^{n1} |x[n]|^2 \\end{align*} \\] <p>Usually, the limits are taken over an infinite time interval:</p> \\[ \\begin{align*} E_\\infty &amp;= \\int_{-\\infty}^{\\infty} |x(t)|^2 \\,\\mathrm{d}t \\\\ E_\\infty &amp;= \\sum_{n=-\\infty}^{\\infty} |x[n]|^2  \\\\ P_\\infty &amp;=  \\lim_{T \\rightarrow \\infty} \\frac{1}{2T} \\int_{-T}^{T} |x(t)|^2 \\,\\mathrm{d}t\\\\ P_\\infty &amp;= \\lim_{N \\rightarrow \\infty} \\frac{1}{2N+1} \\sum_{n=-N}^{N} |x[n]|^2 \\end{align*} \\]"},{"location":"Notes/202205151516_signal_energy_power/#reference","title":"Reference","text":"<ul> <li>Spectral analysis of discrete processes, section 3</li> <li>MIT course 6.011,  Introduction to Communication, Control, and Signal Processing, Chapter 2: Signal and System</li> <li>MIT course 6.451, Principles of Digital Communication II, Chapter 2: Discrete-time and continuous-time AWGN channels </li> </ul>"},{"location":"Notes/202205151543_steering_vector/","title":"Steering Vector","text":""},{"location":"Notes/202205151543_steering_vector/#overview","title":"Overview","text":"<p>Consider a system that consists of array of \\(n\\) arbitrary sensors, the steering vector of the senor array represents the phase delays, with respect to a reference position, for an incoming plane wave at each sensor element.</p> <p>The phase delay for i-th senor is defined as</p> \\[ \\exp( -j 2 \\pi \\frac{\\tau_i}{T} ) \\] <p>where</p> <ul> <li>\\(\\tau_i\\): the time delay for the wavefront of the plane wave to travel from the reference position to the i-th sensor.</li> <li>\\(T\\): The temporal period of the plane wave</li> </ul> <p>Note that \\(\\tau_i\\) can be negative if the plane wave reaches the i-th sensor before reaching the reference position.</p> <p>The choice of the reference position is typically one of the followings:</p> <ul> <li>The origin of the coordinate system used for defining the positions of the sensors</li> <li>The position of the \"first sensor\"</li> <li>Conveniently, the convention is to choose the position of the \"first sensor\" as the origin of the coordinate system</li> </ul>"},{"location":"Notes/202205151543_steering_vector/#commonly-used-definition","title":"Commonly Used Definition","text":"<p>Under the 3-dimensional space, let the reference position be the origin of the Cartesian coordinate system, define:</p> <ul> <li>\\(\\mathbf{r}_i = [x_i, y_i, z_i]^T\\): the position of i-th sensor in the Cartesian coordinate system</li> <li>\\((\\theta, \\phi)\\): the direction of the plane wave propagation in spherical coordinate system, where \\(\\theta\\) is the polar angle and \\(\\phi\\) is the azimuth angle</li> <li>\\(c\\): The traveling speed of the plane wave</li> <li>\\(\\lambda\\): the wavelength of the plane wave</li> </ul> <p>then the direction vector for the wave in the Cartesian coordinate system can be written as</p> \\[ \\vec{n} = \\left[     \\begin{array}{c}         \\sin\\theta \\cos \\phi \\\\         \\sin \\theta  \\sin \\phi  \\\\         \\cos \\theta     \\end{array} \\right] \\] <p>And the distance for the wave to travel from the origin to \\(\\mathbf{r}_i\\) is equivalent to the projection of \\(\\mathbf{r}_i\\) onto the direction \\(\\vec{n}\\), which can be computed by the inner product of the two vectors:</p> \\[ \\vec{n} \\cdot \\mathbf{r}_i \\] <p>And the time for the wave to travel over such distance is</p> \\[ \\tau_i = \\frac{ \\vec{n} \\cdot \\mathbf{r}_i }{c} \\] <p>Also the temporal period of the wave can be expressed by the wavelength and the wave speed as follows:</p> \\[ T = \\frac{ \\lambda }{c} \\] <p>So the phase delay for i-th senor can be written as</p> \\[ \\exp( -j 2 \\pi \\frac{\\tau_i}{T} ) = \\exp( -j  \\frac{2 \\pi}{ \\lambda} \\vec{n} \\cdot \\mathbf{r}_i ) \\] <p>And the steering vector for the wave of the given \\((\\lambda, \\theta, \\phi)\\) can be written as</p> \\[ \\mathbf{a}(\\lambda, \\theta, \\phi) = \\left[     \\begin{array}{c}         \\exp( -j  \\frac{2 \\pi}{ \\lambda} \\vec{n} \\cdot \\mathbf{r}_1 ) \\\\         \\exp( -j  \\frac{2 \\pi}{ \\lambda} \\vec{n} \\cdot \\mathbf{r}_2 ) \\\\         \\vdots \\\\         \\exp( -j  \\frac{2 \\pi}{ \\lambda} \\vec{n} \\cdot \\mathbf{r}_n )     \\end{array} \\right] \\]"},{"location":"Notes/202205151543_steering_vector/#note","title":"Note","text":"<p>The \"phase delay\" of the signal is not to be confused with the absolute angle change of the signal. For example, if a sound source can emit one of the following two signals:</p> \\[ \\begin{align} x_1(t) &amp;= \\cos( 2 \\pi f t ) \\\\ x_2(t) &amp;= \\cos( -2 \\pi f t ) \\end{align} \\] <p>Then the time delay (as well as the phase delay) from the reference position to the 1st mic will be the same regardless of the signal emitted, but the actual angle difference from the reference position to the 1st mic depends on the signal emitted. </p>"},{"location":"Notes/202205151604_wiener_filter/","title":"Wiener Filter","text":""},{"location":"Notes/202205151604_wiener_filter/#context","title":"Context","text":"<p>Given the following system:</p> <p> +++- </p> <p>where</p> <ul> <li>\\(x(n) \\in \\mathbb{C}\\) is the input sample</li> <li>\\(\\hat{ \\mathbf{h} } = \\left[ \\hat{h}_{-\\infty}, ... , \\hat{h}_{-1},  \\hat{h}_0, \\hat{h}_{1}, ..., \\hat{h}_{\\infty} \\right]\\) is a linear filter</li> <li>\\(y(n) \\in \\mathbb{C}\\) is the output of the unknown system</li> <li>\\(v(n) \\in \\mathbb{C}\\) is the interference added to \\(y(n)\\)</li> <li>\\(\\hat{y}(n) = \\sum_{i=-\\infty}^{\\infty}(\\hat{h_i}^*x(n-i)) \\in \\mathbb{C}\\) is the estimated output of the unknown system</li> <li>\\(\\left\\{\\cdot\\right\\}^*\\) is conjugate</li> </ul> <p>Note that only \\(x(n)\\), \\(\\hat{y}(n)\\), \\(d(n)\\), and \\(e(n)\\) are observable, while \\(y(n)\\), and \\(v(n)\\) are not directly observable.</p> <p>We want to design \\(\\hat{ \\mathbf{h} }\\) so that its output, \\(\\hat{y}(n)\\), is statistically a good estimate of \\(d(n)\\).</p>"},{"location":"Notes/202205151604_wiener_filter/#problem","title":"Problem","text":"<p>Assuming that</p> <ol> <li>\\(x(n)\\) is wide-sense stationary,</li> <li>\\(d(n)\\) is wide-sense stationary,</li> <li>\\(x(n)\\) and \\(d(n)\\) are jointly wide-sense stationary,</li> <li>We use the mean square error (MSE) as the cost function to evaluate whether \\(\\hat{y}(n)\\) is a good estimate of \\(d(n)\\),</li> </ol> <p>How do we choose \\(\\hat{ \\mathbf{h} }\\) to minimize the MSE between \\(\\hat{y}(n)\\) and \\(d(n)\\)?</p>"},{"location":"Notes/202205151604_wiener_filter/#solution","title":"Solution","text":"<p>To minimize the MSE subject to \\(\\hat{ \\mathbf{h} }\\), we need to solve the following equation:</p> \\[ \\nabla _{{\\hat {\\mathbf {h} }}^{H}} E \\left( \\left| e(n) \\right|^2 \\right) = 0 \\] <p>Or equivalently,</p> \\[ \\frac{\\partial}{\\partial \\hat{h}_i^* } E \\left( \\left| e(n) \\right|^2 \\right) = 0 \\qquad \\forall i \\in \\mathbb{N} \\] <p>The equation above can be written as</p> \\[ \\begin{align} \\frac{\\partial}{\\partial \\hat{h}_i^* } E \\left( \\left| e(n) \\right|^2 \\right) &amp;= \\frac{\\partial}{\\partial \\hat{h}_i^* } E \\left( e(n)e^*(n) \\right) \\\\ &amp;= E \\left( \\frac{\\partial e(n)}{\\partial \\hat{h}_i^* } \\cdot e^*(n) \\right) + E \\left( e(n) \\cdot \\frac{\\partial e^*(n)}{\\partial \\hat{h}_i^* } \\right) \\\\ &amp;= E \\left( x(n-i) e^*(n) \\right) +E \\left( e(n) x^*(n-i) \\right) \\\\ &amp;= E \\left( x(n-i)d^*(n) \\right) - \\sum_{j=-\\infty}^{\\infty} \\hat{h}_j E \\left( x(n-i)x^*(n-j) \\right) + E \\left( d(n)x^*(n-i) \\right) - \\sum_{j=-\\infty}^{\\infty} \\hat{h}_j^* E \\left( x(n-j)x^*(n-i) \\right)    \\\\ &amp;= \\phi_{xd}(i) - \\sum_{j=-\\infty}^{\\infty} \\hat{h}_j \\phi_{xx}(i-j) + \\left( \\phi_{xd}(i) - \\sum_{j=-\\infty}^{\\infty} \\hat{h}_j \\phi_{xx}(i-j) \\right)^*  \\\\ &amp;= 0 \\end{align} \\] <p>where</p> <ul> <li>\\(\\phi_{xd}(i)\\) is the cross-correlation of \\(x(n)\\) and \\(d(n)\\),</li> <li>\\(\\phi_{xx}(i)\\) is the autocorrelation of \\(x(n)\\)</li> </ul> <p>So the optimal \\(\\hat{ \\mathbf{h} }\\) should satisfy the following equation:</p> \\[ \\phi_{xd}(i) - \\sum_{j=-\\infty}^{\\infty} \\hat{h}_j \\phi_{xx}(i-j) = 0 \\] <p>In the case of \\(\\hat{ \\mathbf{h} }\\) being an \\(p\\)-tap FIR filter, the equation can be written in the matrix form:</p> \\[ \\underbrace{     \\left[\\begin{array}{cccc}     \\phi_{xx}(0) &amp; \\phi_{xx}(-1) &amp; \\cdots &amp; \\phi_{xx}(-p+1) \\\\     \\phi_{xx}(1) &amp; \\phi_{xx}(0) &amp; \\cdots &amp; \\phi_{xx}(-p+2) \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     \\phi_{xx}(p-1) &amp; \\phi_{xx}(p-2) &amp; \\cdots &amp; \\phi_{xx}(0)     \\end{array}\\right] }_{\\mathbf{\\Phi_{xx}} } \\underbrace{     \\left[\\begin{array}{c}     \\hat{h}_0 \\\\     \\hat{h}_1 \\\\     \\vdots \\\\     \\hat{h}_{p-1}     \\end{array}\\right] }_{\\mathbf{ \\hat{h} } } = \\underbrace{     \\left[\\begin{array}{c}     \\phi_{xd}(0) \\\\     \\phi_{xd}(1) \\\\     \\vdots \\\\     \\phi_{xd}(p-1)     \\end{array}\\right] }_{\\mathbf{\\Phi_{xd}} } \\] <p>and the optimal \\(\\mathbf{ \\hat{h} }\\) would be</p> \\[ \\mathbf{ \\hat{h} } = \\mathbf{\\Phi_{xx}^{-1}} \\mathbf{\\Phi_{xd}} \\]"},{"location":"Notes/202205151604_wiener_filter/#reference","title":"Reference","text":"<ul> <li>https://web.stanford.edu/class/archive/ee/ee264/ee264.1072/mylecture12.pdf</li> <li>https://en.wikipedia.org/wiki/Wiener_filter </li> </ul>"},{"location":"Notes/202205151639_wave_format/","title":"WAVE Format","text":""},{"location":"Notes/202205151639_wave_format/#overview","title":"Overview","text":"<p>Example of running <code>xxd -l 44 -c 16 &lt;SomeFile.wav&gt;</code> <pre><code>         |   (1)   |   (2)   |   (3)   |   (4)   |\n00000000: 5249 4646 32b0 1e04 5741 5645 666d 7420  RIFF2...WAVEfmt\n\n         |   (5)   |(6) |(7) |   (8)   |   (9)   |\n00000010: 1200 0000 0300 0600 80bb 0000 0094 1100  ................\n\n         |(10)|(11)|\n00000020: 1800 2000 0000 6661 6374 0400            .. ...fact..\n</code></pre></p> <p>The 11 binary blocks shown above are:</p> <ol> <li>The header that reads \"RIFF\" in ASCII.</li> <li>The size (in bytes, little endian) of the rest of the chunk following this number.<ul> <li>For typical WAV file, the RIFF chunk is basically the only chunk in the file. Hence this number is typically the file size less 8 bytes.</li> <li>The size of <code>32b0 1e04</code> in little endian means it is of <code>0x041eb032</code> bytes.</li> </ul> </li> <li>The format of the chunk.<ul> <li>For typical WAV file, this reads \"WAVE\" in ASCII.</li> </ul> </li> <li>The ID of the first subchunk<ul> <li>For typical WAV file, the first subchunk is usually \"fmt \" (it's \"fmt\" with a trailing white space to make it 4 bytes in total length).</li> </ul> </li> <li>The size (in bytes, little endian) of the rest of the subchunk following this number.</li> <li>The audio format (little endian) such as PCM or float<ul> <li>The possible values are listed in https://docs.microsoft.com/en-us/windows/desktop/api/mmreg/ns-mmreg-twaveformatex as \"wFormatTag Value.\" However, the page shows only the symbol names without its actual integer values. Some widely known values are<ul> <li>WAVE_FORMAT_PCM: 0x0001</li> <li>WAVE_FORMAT_IEEE_FLOAT: 0x0003</li> <li>WAVE_FORMAT_EXTENSIBLE: 0xFFFE</li> </ul> </li> </ul> </li> <li>The number of channels (little endian)</li> <li>Sampling Rate (number of samples per second per channel, little endian)</li> <li>Byte Rate (little endian)</li> <li>BlockAlign</li> <li>BitsPerSample</li> </ol>"},{"location":"Notes/202205151639_wave_format/#reference","title":"Reference","text":"<ul> <li>https://web.archive.org/web/19991115123323/http://www.borg.com/~jglatt/tech/wave.htm</li> <li>http://soundfile.sapp.org/doc/WaveFormat/ </li> </ul>"},{"location":"Notes/202205151702_calculate_mic_output_level/","title":"Calculating the Expected Microphone Output Level for Human Voice","text":""},{"location":"Notes/202205151702_calculate_mic_output_level/#context","title":"Context","text":"<p>Given that</p> <ul> <li>A human talks in a level of \\(x\\) dB SPL at MRP</li> <li>A digital microphone is \\(D\\) meters away from the human, capturing the human voice</li> <li>The mic sensitivity is \\(S\\) dBFS. </li> <li>The max output level of the mic is \\(A_{max}\\)</li> <li>The crest factor for human voice signal is 12dB</li> </ul> <p>We want to know the expected peak value of the signal at the microphone output.</p>"},{"location":"Notes/202205151702_calculate_mic_output_level/#problem","title":"Problem","text":"<p>How to calculate the expected peak value of the signal at the microphone output?</p>"},{"location":"Notes/202205151702_calculate_mic_output_level/#solution","title":"Solution","text":"<p>Step 1: Calculate the expected signal level at the microphone input. Human voice attenuates 6dB every time the distance doubles. So the human voice level (in dB SPL) at the said microphone will be</p> \\[ y = x - 6 * \\log_2{ (\\frac{D}{0.025}) } \\] <p>Step 2: Calculate the expected mic output RMS level. The \"max mic input level\" is defined in the sense of Microphone Sensitivity. For an input of \\(y\\) dB SPL, the RMS magnitude of the mic output is</p> \\[ 10^{ \\frac{y - (94 - S) - 3}{20} } \\cdot A_{max} \\] <p>Step 3: Calculate the expected mic output peak level by applying the crest factor. By picking the crest factor to be 12dB, the expected mic output peak level is</p> \\[ 10^{ \\frac{y - (94 - S) - 3 + 12}{20} } \\cdot A_{max} \\]"},{"location":"Notes/202205151702_calculate_mic_output_level/#example","title":"Example","text":"<p>For a human voice of level 89dB SPL at MRP (\\(x = 89\\)), talking to a digital microphone at 1m distance (\\(D=1\\)), the human voice level at the mic input is</p> \\[ y = 89 - 6 * \\log_2{ (\\frac{1}{0.025}) } = 57.068 \\] <p>If the mic sensitivity is -40dBFS (\\(S\\) = -40), and the max output of the mic is 1.0 (\\(A_{max} = 1\\)), then the expected mic output peak level for the human voice is</p> \\[ 10^{ \\frac{57.068 - (94 + 40) - 3 + 12}{20} } \\cdot 1.0 = 4.01 \\cdot 10^{-4} \\]"},{"location":"Notes/202205151702_calculate_mic_output_level/#reference","title":"Reference","text":"<ul> <li>Definition of the Crest Factor</li> </ul>"},{"location":"Notes/202205221654_git_shows_chinese_characters/","title":"Make Git Status Show Chinese File Path","text":""},{"location":"Notes/202205221654_git_shows_chinese_characters/#context","title":"Context","text":"<p>When running <code>git status</code>, it shows the octal utf8 for Chinese characters in the file path. For example, file <code>\u4e2d\u6587.txt</code> appears as follows:</p> <pre><code>Untracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        \"\\344\\270\\255\\346\\226\\207.txt\"\n</code></pre>"},{"location":"Notes/202205221654_git_shows_chinese_characters/#problem","title":"Problem","text":"<p>How to make <code>git status</code> shows chinese characters in the file paths?</p>"},{"location":"Notes/202205221654_git_shows_chinese_characters/#solution","title":"Solution","text":"<p>Disable the quoted octal notation by running the following command:</p> <pre><code>git config --global core.quotepath off\n</code></pre>"},{"location":"Notes/202205221654_git_shows_chinese_characters/#reference","title":"Reference","text":"<ul> <li>stackoverflow</li> </ul>"},{"location":"Notes/202205221737_gitk_show_chinese_characters_diff/","title":"Make Gitk Show Chinese Characters in Diff","text":""},{"location":"Notes/202205221737_gitk_show_chinese_characters_diff/#context","title":"Context","text":"<p>When running <code>gitk</code>, the diff results show the Chinese characters incorrectly. It seems that the Chinese characters are displayed by a font that does not support Unicode.</p>"},{"location":"Notes/202205221737_gitk_show_chinese_characters_diff/#problem","title":"Problem","text":"<p>How to properly display the Chinese characters in gitk?</p>"},{"location":"Notes/202205221737_gitk_show_chinese_characters_diff/#solution","title":"Solution","text":"<p>Set the GUI encoding by the following command:</p> <pre><code>git config --global gui.encoding utf-8 \n</code></pre>"},{"location":"Notes/202205221737_gitk_show_chinese_characters_diff/#reference","title":"Reference","text":"<ul> <li>stackoverflow</li> </ul>"},{"location":"Notes/202205291214_traveling_plane_wave/","title":"Traveling Plane Wave","text":""},{"location":"Notes/202205291214_traveling_plane_wave/#overview","title":"Overview","text":"<p>From Wikipedia:</p> <p>A traveling plane wave is a special case of plane wave, namely a field whose evolution in time can be described as simple translation of its values at a constant wave speed \\(c\\), along a fixed direction of propagation \\(\\vec{n}\\).  </p> <p>The general form of the traveling plane wave can be represented as  </p> \\[   F( \\vec{r}, t ) = G ( \\vec{r} \\cdot \\vec{n} - ct )   \\] <p>where  </p> <ul> <li>\\(\\vec{r} \\in \\mathbb{R}^N\\) is a position in the N-dimensional space  </li> <li>\\(\\vec{n} \\in \\mathbb{R}^N\\) is the direction vector of the wave propagation  <ul> <li>Note: by definition, the direction vector is of unit length.  </li> </ul> </li> <li>\\(d = \\vec{r} \\cdot \\vec{n} \\in \\mathbb{R}\\) is the \"displacement\" of the wave, computed as the vector dot product of \\(\\vec{r}\\) and \\(\\vec{n}\\) </li> <li>\\(G(u): \\mathbb{R} \\to \\mathbb{Z}\\) is a function describing the profile of the wave, namely the value of the field at time \\(t = 0\\), for each displacement \\(d\\).  <ul> <li>\\(u = d - ct \\in \\mathbb{R}\\) </li> <li>In most real-world cases such as a sinusoidal plane wave, the output of \\(G(u)\\) is real (i.e., \\(G(u): \\mathbb{R} \\to \\mathbb{R}\\))  </li> </ul> </li> </ul>"},{"location":"Notes/202205291214_traveling_plane_wave/#sinusoidal-plane-wave","title":"Sinusoidal Plane Wave","text":"<p>A sinusoidal plane wave is a special case of traveling plane wave. It can be represented as  </p> \\[   F( \\vec{r}, t ) = A \\cos( 2 \\pi \\nu \\left( \\vec{r} \\cdot \\vec{n} - ct \\right) + \\varphi )   \\] <p>where  </p> <ul> <li>\\(A \\in \\mathbb{R}\\) is the amplitude of the wave  </li> <li>\\(\\nu \\in \\mathbb{R}^+\\) is the spatial frequency of the wave  <ul> <li>The spatial frequency is the inverse of the wave length (i.e., \\(\\nu = \\frac{1}{\\lambda}\\))  </li> </ul> </li> <li>\\(\\varphi\\) is the initial phase of the sinusoidal wave.  </li> </ul>"},{"location":"Notes/202205291214_traveling_plane_wave/#wave-vector-of-sinusoidal-plane-wave-in-3d-space","title":"Wave Vector of Sinusoidal Plane Wave in 3D space","text":"<p>In the 3D world, if a sinusoidal plane wave travels in a direction described by the spherical coordinates \\((\\theta, \\phi)\\), where \\(\\theta\\) is the polar angle and \\(\\phi\\) is the azimuth angle, then the direction vector \\(\\vec{n}\\), in the Cartesian coordinates, will be  </p> \\[ \\vec{n} =  \\left[      \\begin{array}{c}         \\sin\\theta \\cos\\phi \\\\         \\sin\\theta \\sin\\phi \\\\         \\cos\\theta      \\end{array} \\right] \\] <p>And therefore the wave vector \\(\\mathbf{k}\\) of such sinusoidal plane wave is  </p> \\[ \\mathbf{k} = 2 \\pi \\nu \\vec{n} = 2 \\pi \\nu \\left[       \\begin{array}{c}           \\sin\\theta \\cos\\phi \\\\         \\sin\\theta \\sin\\phi \\\\         \\cos\\theta     \\end{array} \\right] \\]"},{"location":"Notes/202205291214_traveling_plane_wave/#reference","title":"Reference","text":"<ul> <li>Traveling plane wave </li> <li>Sinusoidal plane wave </li> <li>http://www.antenna-theory.com/definitions/wavevector.php</li> </ul>"},{"location":"Notes/202205291217_Field_Regions/","title":"Field Regions","text":""},{"location":"Notes/202205291217_Field_Regions/#overview","title":"Overview","text":"<p>The fields surrounding an antenna are divided into 3 principle regions:  </p> <ol> <li>Reactive Near Field  </li> <li>Radiative Near Field (Fresnel Region)  </li> <li>Far Field (Fraunhofer Region)  </li> </ol> <p>The 3 fields are categorized roughly based on the relative rates at which the amplitude of parts of the electric and magnetic fields diminish as distance from the radiating element increases:  </p> <ul> <li>Reactive Near Field: amplitude falls off as \\(r^{-3}\\) </li> <li>Radiative Near Field: amplitude falls off as \\(r^{-2}\\) </li> <li>Far Field: amplitude falls off as \\(r^{-1}\\) </li> </ul> <p>The boundaries of the field regions are defined dependent on the length of the antenna, \\(D\\), and the wavelength of the radio wave, \\(\\lambda\\).  </p>"},{"location":"Notes/202205291217_Field_Regions/#electromagnetically-short-antennas","title":"Electromagnetically Short Antennas","text":"<p>For antennas shorter than half of the wavelength of the radiation they emit (\\(D &lt; \\lambda / 2\\)), the boundaries is defined as follows:  </p> <ul> <li>\\(r &lt; \\frac{\\lambda}{2 \\pi}\\): Reactive Near Field  </li> <li>\\(\\frac{\\lambda}{2 \\pi} &lt; r &lt; \\lambda\\): Radiative Near Field  </li> <li>\\(\\lambda &lt; r &lt; 2 \\lambda\\): \"Transition zone\"  </li> <li>\\(r &gt; 2 \\lambda\\): Far Field  </li> </ul> <p>Despite the definition of far-field distance above, the far-field generally starts at  </p> \\[   r &gt; \\frac{2D^2}{\\lambda}   \\]"},{"location":"Notes/202205291217_Field_Regions/#electromagnetically-long-antennas","title":"Electromagnetically Long Antennas","text":"<p>For antennas physically larger than a half-wavelength of the radiation they emit\u00a0\u00a0(\\(D &gt; \\lambda / 2\\)), the near and far fields are defined in terms of the Fraunhofer distance \\(d_F\\):  </p> <ul> <li>\\(r &lt; 0.62 \\sqrt{\\frac{D^3}{\\lambda}}\\): Reactive Near Field  </li> <li>\\(0.62 \\sqrt{\\frac{D^3}{\\lambda}} &lt; r &lt; d_F\\): Radiative Near Field  </li> <li>\\(r &gt; d_F\\): Far Field  </li> </ul> <p>where  </p> \\[   d_F = \\frac{2D^2}{\\lambda}   \\] <p>with additional constraints that  </p> \\[   d_F \\gg D \\\\   d_F \\gg \\lambda   \\]"},{"location":"Notes/202205291217_Field_Regions/#reference","title":"Reference","text":"<ul> <li>Near and far field </li> <li>http://www.antenna-theory.com/basics/fieldRegions.php </li> <li>Fresnel zone</li> </ul>"},{"location":"Notes/202205291218_Limiting_Frequencies_of_a_Microphone_Array/","title":"Limiting Frequencies of a Microphone Array","text":""},{"location":"Notes/202205291218_Limiting_Frequencies_of_a_Microphone_Array/#overview","title":"Overview","text":"<p>When using a microphone array, it is possible to use techniques such as sound source localization (SSL) and beamforming (BF) to improve the performance. However, the SSL can only locate acoustic sources of certain frequency range, which is determined by the the mic array geometry.  </p> <p>Based on the sampling theorem, in order to properly reconstruct a signal, the signal needs to be sampled at least at two points within one wavelength. As a result, assuming that the microphone density is reasonable, if \\(D_{\\text{max}}\\) and \\(D_{\\text{min}}\\) are the max distance and min distance between two mics within the array, respectively, then the lower bound of the wavelength that the mic array can properly locate the sound source is constrained by  </p> \\[   \\lambda &gt; \\lambda_{\\text{min}} = 2 \\cdot D_{\\text{min}}   \\] <p>However, when \\(\\lambda\\) gets too large, the incoming signal may be considered as in the reactive near-field, which breaks the assumptions commonly made by SSL and BF. To make sure the signal won't be considered as in the reactive near-field, the distance \\(r\\) between the sound source and the microphone array should be constrained by  </p> \\[   r &gt; \\frac{ \\lambda }{2 \\pi}   \\] <p>Since \\(r\\) is unknown, one approximation is to replace \\(r\\) with \\(D_{\\text{max}}\\):  </p> \\[   D_{\\text{max}} &gt; \\frac{ \\lambda }{2 \\pi}   \\] <p>or  </p> \\[   \\lambda &lt; \\lambda_{\\text{max}} = 2 \\pi \\cdot D_{\\text{max}}   \\] <p>And the corresponding frequency limits are  </p> \\[ \\begin{align} f_{\\text{max}} &amp;= \\frac{c}{ \\lambda_{\\text{min}} } = \\frac{c}{ 2 \\cdot D_{\\text{min}} } \\\\   f_{\\text{min}} &amp;= \\frac{c}{ \\lambda_{\\text{max}} } = \\frac{c}{ 2 \\pi \\cdot D_{\\text{max}} }   \\end{align} \\] <p>where \\(c\\) is the speed of the sound.  </p>"},{"location":"Notes/202205291218_Limiting_Frequencies_of_a_Microphone_Array/#reference","title":"Reference","text":"<ul> <li>https://www.acoustic-camera.com/en/support/frequently-asked-questions/knowledge-base/limiting-frequencies-of-a-microphone-array.html </li> <li>Near and far field</li> </ul>"},{"location":"Notes/202205291219_mic_sensitivity/","title":"Microphone Sensitivity","text":""},{"location":"Notes/202205291219_mic_sensitivity/#overview","title":"Overview","text":"<p>Microphone sensitivity is defined by the mic's output signal with respect to an input to the mic of 94dB SPL (or equivalently, 1 Pa pressure). Typically, the sensitivity is measured with a 1kHz sine wave at the 94dB SPL at the mic.  </p> <p>The definition of the microphone sensitivity is slightly different for the analog microphone and the digital microphone.  </p>"},{"location":"Notes/202205291219_mic_sensitivity/#definition","title":"Definition","text":""},{"location":"Notes/202205291219_mic_sensitivity/#microphone-sensitivity-for-analog-microphone","title":"Microphone Sensitivity for Analog Microphone","text":"<p>For analog microphones, the sensitivity is defined as the output root-mean-square (RMS) voltage with respect to 1 Pa pressure. In other words, if the mic output RMS voltage is \\(A\\) volts given the 94 dB SPL input, then the sensitivity is  </p> \\[   S_{V/Pa} = A   \\] <p>with the unit of V/Pa.  </p> <p>The sensitivity is usually described in logarithmic unit of dBV. In other words,  </p> \\[   S_{dBV} = 20 \\cdot log_{10} \\left( \\frac{S_{V/Pa}}{1} \\right)   \\] <p>where the \"reference\" is set to be 1Vrms/Pa.  </p>"},{"location":"Notes/202205291219_mic_sensitivity/#microphone-sensitivity-for-digital-microphone","title":"Microphone Sensitivity for Digital Microphone","text":"<p>For digital microphones, the sensitivity is defined as the percentage of the full-scale output that is generated by a 94 dB SPL. In other words, if the max of the mic output is \\(A_{\\text{max}}\\), and the mic output peak magnitude is \\(A\\) given the 94dB SPL, 1kHz sine wave input, then the sensitivity is  </p> \\[   S_{\\%FS} = \\frac{A}{ A_{\\text{max}} }   \\] <p>The sensitivity is usually described in logarithmic unit of dBFS. In other words,  </p> \\[   S_{dBFS} = 20 \\cdot log_{10} \\left( S_{\\%FS} \\right)   \\] <p>Note that  </p> <ul> <li>The microphone's acoustic input levels in dB SPL are always RMS measurement  </li> <li>The digital microphone uses the peak magnitude to define the microphone sensitivity, while the analog microphone uses the RMS voltage to define the microphone sensitivity.  </li> <li>For a sinusoidal signal, the RMS level is 3dB below the peak level. If the digital microphone output is connected to the other devices that define their input level in RMS measurement, remember to account for this 3dB difference.  </li> </ul>"},{"location":"Notes/202205291219_mic_sensitivity/#applications","title":"Applications","text":"<ul> <li>If a digital mic is said to be of mic sensitivity -40 dBFS, it means:  <ul> <li>The mic can probably take input up to 134 dB SPL (assuming the mapping from input sound pressure to the output magnitude is linear)  </li> <li>For a sinusoidal signal of 94 dB SPL at the mic input, the magnitude of the mic output will be \\(0.01 * A_{\\text{max}}\\)</li> <li>For a signal of 94 dB SPL at the mic input, the RMS magnitude of the mic output will be \\(\\frac{0.01}{\\sqrt{2}} *\u00a0\u00a0A_{\\text{max}}\\)<ul> <li>If the signal is human speech, the crest factor for human speech is about 12dB, and hence the peak magnitude of the mic output will be \\(\\frac{0.04}{\\sqrt{2}} *\u00a0\u00a0A_{\\text{max}}\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"Notes/202205291219_mic_sensitivity/#reference","title":"Reference","text":"<ul> <li>Understanding Microphone Sensitivity</li> </ul>"},{"location":"Notes/202205291220_Sound_Pressure_Level/","title":"Sound Pressure Level","text":""},{"location":"Notes/202205291220_Sound_Pressure_Level/#definition","title":"Definition","text":"<p>The sound pressure level (SPL) is a logarithmic measure of the effective pressure of a sound relative to a reference value. It is defined as  </p> \\[   L_p = 20 \\cdot log_{10} \\left( \\frac{p}{p_0} \\right)   \\] <p>where  </p> <ul> <li>\\(p\\) is the root mean square sound pressure  </li> <li>\\(p_0\\) is the reference sound pressure  </li> </ul> <p>The commonly used reference sound pressure in air is  </p> \\[   p_0 = 20 \\mu \\text{Pa}   \\] <p>which is often considered as the threshold of human hearing. (In other words, 20 \u00b5Pa corresponds to 0 dB SPL)  </p> <p>Note that different values of \\(p_0\\) may be used for different transmission media.  </p>"},{"location":"Notes/202205291220_Sound_Pressure_Level/#weighted-sound-level","title":"Weighted Sound Level","text":"<p>When measuring the sound level for certain purposes, a weighting curve (in frequency) may be applied to emphasize or de-emphasize the sound energy in different frequency band. For example, when measuring the loudness of noise, the \"A-weighting\" curve may be applied to reflect the human ear response (high response around 1k-10kHz, low response elsewhere).  </p>"},{"location":"Notes/202205291220_Sound_Pressure_Level/#a-weighting-sound-level","title":"A-weighting Sound Level","text":"<p>The A-weighting sound level is the sound level measured with the A-weighting curve. The measurement is denoted in the unit of \"dB(A)\" or \"dBA\"  </p>"},{"location":"Notes/202205291220_Sound_Pressure_Level/#reference","title":"Reference","text":"<ul> <li>Wiki: Sound Pressure Level</li> </ul>"},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/","title":"Calculating the difference between two angles","text":""},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/#context","title":"Context","text":"<p>Given a target angle \\(A_t\\) and a reference angle \\(A_r\\), we want to calculate the \"smallest difference\" between them. In other words:  </p> <ul> <li>The difference between target angle 180\u00b0 and reference angle -180\u00b0 is 0\u00b0  </li> <li>The difference between target angle 359\u00b0 and reference angle 0\u00b0 is 1\u00b0  </li> </ul>"},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/#problem","title":"Problem","text":"<p>How to calculate the \"smallest difference\" between the two angles?  </p>"},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/#solution","title":"Solution","text":"<p>Use the following formula to calculate the signed difference:  </p> \\[   d = (A_t - A_r + 180) \\% 360 -180   \\] <p>Then take the absolute value of \\(d\\) to get the unsigned difference.  </p>"},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/questions/1878907/how-can-i-find-the-difference-between-two-angles </li> </ul>"},{"location":"Notes/202205291402_Calculating_the_difference_between_two_angles/#note","title":"Note","text":"<p>If the modulo operation returns a value with the same sign as the dividend (i.e., \\(-1 \\% 360 = -1\\)), then the formula should be changed to  </p> \\[   d = ( (A_t - A_r)\\%360 + 180) \\% 360 -180   \\]"},{"location":"Notes/202205291403_Coefficient_of_Determination/","title":"Coefficient of Determination","text":""},{"location":"Notes/202205291403_Coefficient_of_Determination/#context","title":"Context","text":"<p>Given  </p> <ul> <li>an input data set \\(\\left\\{x_1, x_2, \\cdots, x_n \\right\\}\\) </li> <li>an observation data set \\(\\left\\{y_1, y_2, \\cdots, y_n \\right\\}\\) </li> </ul> <p>We can use linear regression or other methods to establish a model \\(f\\) where  </p> \\[   f(x_i) = \\hat{y}_i \\cong y_i   \\] <p>With various possible model \\(f\\), we want some metric indicating how \"good\" the model \\(f\\) in terms of modeling the relationship between \\(x_i\\) and \\(y_i\\), or, from a different point of view, we want to know how \"close\" the observation data set \\(y_i\\) and the modeled data set \\(\\hat{y}_i\\) are.  </p>"},{"location":"Notes/202205291403_Coefficient_of_Determination/#problem","title":"Problem","text":"<p>How to design a metric to evaluate the \"closeness\" of \\(y_i\\) and \\(\\hat{y}_i\\)?  </p>"},{"location":"Notes/202205291403_Coefficient_of_Determination/#solution","title":"Solution","text":"<p>Use the coefficient of determination.  </p> <p>Let:  </p> <ul> <li>\\(\\bar{y} = \\frac{1}{n} \\sum_{i=1}^n y_i\\): the mean of \\(y_i\\) </li> <li>\\(S_{tot} = \\sum_{i} \\left(y_i - \\bar{y} \\right)^2\\): the \"total sum of squares\" of \\(y_i\\) </li> <li>\\(S_{res} = \\sum_{i} \\left(y_i - \\hat{y}_i \\right)^2\\): the \"residual sum of squares\"  </li> </ul> <p>The coefficient of determination is defined as  </p> \\[   R^2 \\equiv 1 - \\frac{S_{res}}{S_{tot}}   \\] <p>The coefficient of determination is denoted as \\(R^2\\) and is often referred to as the \"R-squared.\"  </p> <p>\\(R^2\\) represents the ratio of the variability accounted for by the model \\(f\\) to the total variability in the observation data. For example, if \\(R^2 = 0.7\\), then it means the model's output \\(\\hat{y}_i\\) accounts for 70% of the variability of the observation data, and there remains 30% of the variability unaccounted for by the model.  </p>"},{"location":"Notes/202205291403_Coefficient_of_Determination/#discussion","title":"Discussion","text":""},{"location":"Notes/202205291403_Coefficient_of_Determination/#related-to-the-variance-of-the-noise","title":"Related to the Variance of the Noise","text":"<p>\\(R^2\\) can be seen as the \"variance of the observation data captured by the model,\" or simply the \"explained variance.\" If the relationship between \\(y_i\\) and \\(\\hat{y}_i\\) is represented as  </p> \\[   y_i = \\hat{y}_i + w_i   \\] <p>for some noise \\(w_i\\), then statistically, \\(R^2\\) is basically measuring  </p> \\[ \\begin{align} R^2 &amp;=1 - \\frac{ E(y_i - \\hat{y}_i)^2 } { E( y_i - E(y))^2 } \\\\   &amp;= 1- \\frac{ E(w)^2 }{\\operatorname{Var}(y)} \\\\   &amp;= \\frac{       \\operatorname{Var}(\\hat{y}) + 2 \\operatorname{Cov}(\\hat{y},w) + \\operatorname{Var}(w) - E(w)^2   } {       {\\operatorname{Var}(y)}   } \\end{align} \\] <p>And if \\(w_i\\) is zero-meaned, and if \\(w\\) and \\(\\hat{y}\\) are uncorrelated, then \\(R^2\\) can be written as  </p> \\[ \\begin{align} R^2 &amp;= \\frac{       \\operatorname{Var}(\\hat{y}) + 2*0 + E(w)^2 - E(w)^2   }   {       {\\operatorname{Var}(y)}   } \\\\   &amp;= \\frac{ \\operatorname{Var}(\\hat{y}) }{ {\\operatorname{Var}(y)} }   \\end{align} \\]"},{"location":"Notes/202205291403_Coefficient_of_Determination/#correlation-between-the-model-input-and-the-observation-data","title":"Correlation between the model input and the observation data","text":"<p>Through a given model \\(f(x)\\), \\(R^2\\) can be seen as an indicator about how good we can use \\(x\\) to predict \\(y\\).  </p> <p>For example, we can build a model \\(f(x)\\) to predict the stock market gain (\\(y\\)) based on the newly reported unemployment rate (\\(x\\)), we can then use \\(R^2\\) to evaluate whether \\(x\\), along with the model, is good at predicting \\(y\\).</p>"},{"location":"Notes/202205291404_Eigenvalues_and_eigenvectors/","title":"Eigenvalues and eigenvectors","text":""},{"location":"Notes/202205291404_Eigenvalues_and_eigenvectors/#definition","title":"Definition","text":"<p>Let \\(T\\) be a linear transformation from a vector space \\(V\\) over a field \\(F\\) into itself. In other words,  </p> \\[   T: V \\to V   \\] <p>Let \\(\\mathbf{v}\\) be a vector in \\(V\\) that is not the zero vector. The vector \\(\\mathbf{v}\\) is an eigenvector of \\(T\\) if \\(T(\\mathbf{v})\\) is a scalar multiple of \\(\\mathbf{v}\\). This can be written as  </p> \\[   T(\\mathbf{v}) = \\lambda \\mathbf{v}   \\] <p>for some scalar \\(\\lambda\\) in the field \\(F\\).  </p> <p>If the vector space \\(V\\) is finite-dimensional, then the linear transformation \\(T\\) can be represented as a square matrix \\(A\\), and the vector \\(\\mathbf{v}\\) by a column vector:  </p> \\[   A \\mathbf{v} = \\lambda \\mathbf{v}   \\] <p>Geometrically, an eigenvector, corresponding to a real nonzero eigenvalue, points in a direction that is stretched by the transformation and the eigenvalue is the factor by which it is stretched. If the eigenvalue is negative, the direction is reversed.  </p>"},{"location":"Notes/202205291404_Eigenvalues_and_eigenvectors/#reference","title":"Reference","text":"<ul> <li>https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors </li> <li>https://www.quora.com/What-is-an-eigenvector-of-a-covariance-matrix</li> </ul>"},{"location":"Notes/202205291405_Inner_Product_for_Complex_Vector_Spaces/","title":"Inner Product for Complex Vector Spaces","text":""},{"location":"Notes/202205291405_Inner_Product_for_Complex_Vector_Spaces/#definition","title":"Definition","text":"<p>Let \\(\\mathbf{u}, \\mathbf{v} \\in \\mathbb{C}^n\\) be two complex vectors that  </p> \\[ \\begin{align} \\mathbf{u} &amp;= \\left( u_1, u_2, ..., u_n \\right) \\\\   \\mathbf{v} &amp;= \\left( v_1, v_2, ..., v_n \\right)   \\end{align} \\] <p>the inner product of \\(\\mathbf{u}\\) and \\(\\mathbf{v}\\) is defined as  </p> \\[   \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; = \\sum_{i=1}^n u_i {v_i}^*   \\] <p>where \\({v_i}^*\\) is the conjugate of \\(v_i\\).  </p>"},{"location":"Notes/202205291405_Inner_Product_for_Complex_Vector_Spaces/#properties","title":"Properties","text":"<ol> <li>\\(\\left&lt; \\mathbf{v}, \\mathbf{v} \\right&gt; \\geq 0\\) </li> <li>\\(\\left&lt; \\mathbf{v}, \\mathbf{v} \\right&gt; = 0 \\Leftrightarrow \\mathbf{v} = 0\\) </li> <li>\\(\\left&lt; \\mathbf{u}, \\mathbf{v} + \\mathbf{w} \\right&gt; = \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; + \\left&lt; \\mathbf{u}, \\mathbf{w} \\right&gt;\\) </li> <li>\\(\\left&lt; \\mathbf{u} + \\mathbf{w}, \\mathbf{v} \\right&gt; = \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; + \\left&lt; \\mathbf{w}, \\mathbf{v} \\right&gt;\\) </li> <li>For a scalar \\(\\alpha \\in \\mathbb{C}\\), \\(\\left&lt; \\alpha \\mathbf{u}, \\mathbf{v} \\right&gt; = \\alpha \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt;\\), \\(\\left&lt; \\mathbf{u}, \\alpha \\mathbf{v} \\right&gt; = \\alpha^* \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt;\\) </li> <li>\\(\\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; = {\\left&lt; \\mathbf{v}, \\mathbf{u} \\right&gt;}^*\\) </li> <li>\\(\\mathbf{u}\\) and \\(\\mathbf{v}\\) are orthogonal if \\(\\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; = 0\\) </li> <li>Inner product is nondegenerate \u00a0# In other words, if \\(\\mathbf{x} \\in \\mathbb{C}^n\\), and \\(\\left&lt; \\mathbf{x}, \\mathbf{v} \\right&gt; = 0\\) for all \\(\\mathbf{v} \\in \\mathbb{C}^n\\), then \\(\\mathbf{x} = 0\\) </li> <li>Schwarz inequality: \\(\\left| \\left&lt; \\mathbf{u}, \\mathbf{v} \\right&gt; \\right| \\leq \\left| \\mathbf{u} \\right| \\left| \\mathbf{v} \\right|\\)</li> </ol>"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/","title":"Jacobi Method and Gauss-Seidel Method","text":""},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#context","title":"Context","text":"<p>Let  </p> \\[   A\\mathbf{x} = \\mathbf{b}   \\] <p>be a square system of \\(n\\) linear equations, where  </p> \\[ A={\\begin{bmatrix}a_{11}&amp;a_{12}&amp;\\cdots &amp;a_{1n}\\\\a_{21}&amp;a_{22}&amp;\\cdots &amp;a_{2n}\\\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\\\a_{n1}&amp;a_{n2}&amp;\\cdots &amp;a_{nn}\\end{bmatrix}} \\in \\mathbb{C}^{n \\times n} ,\\qquad   \\mathbf {x} ={\\begin{bmatrix}x_{1}\\\\x_{2}\\\\\\vdots \\\\x_{n}\\end{bmatrix}} \\in \\mathbb{C}^n,\\qquad   \\mathbf {b} ={\\begin{bmatrix}b_{1}\\\\b_{2}\\\\\\vdots \\\\b_{n}\\end{bmatrix}} \\in \\mathbb{C}^n.   \\] <p>We want to find an approximate solution of \\(\\mathbf{x}\\).  </p>"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#problem","title":"Problem","text":"<p>How do we find a good approximate solution of \\(\\mathbf{x}\\)?  </p>"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#solution","title":"Solution","text":"<p>Re-write the \\(n\\) linear equations as follows:  </p> \\[ \\begin{align} x_1 &amp;= \\frac{1}{a_{11}} \\left( b_1 - a_{12}x_2 - a_{13}x_3 - \\cdots - a_{1n}x_n \\right) \\\\   x_2 &amp;= \\frac{1}{a_{22}} \\left( b_2 - a_{21}x_1 - a_{23}x_3 - \\cdots - a_{2n}x_n \\right) \\\\   \\vdots \\end{align} \\] <p>Define: * \\(\\mathbf {x}^{(k)} \\in \\mathbb{C}^n\\): The kth iteration of the approximation of \\(\\mathbf {x}\\).  </p> <p>Then \\(\\mathbf {x}^{(k+1)}\\) can be derived by \\(\\mathbf {x}^{(k)}\\) using the above equations.  </p> <p>The initial approximation, \\(\\mathbf {x}^{(0)}\\), can be empirically assigned. If there is no other prior knowledge about the system, \\(\\mathbf {x}^{(0)}\\) can be set to all zeros.  </p>"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#jacobi-method","title":"Jacobi Method","text":"<p>To compute the (k+1)th iteration, use the following equations:  </p> \\[ \\begin{align} x_1^{(k+1)} &amp;= \\frac{1}{a_{11}} \\left( b_1 - a_{12}x_2^{(k)} - a_{13}x_3^{(k)} - \\cdots - a_{1n}x_n^{(k)} \\right) \\\\   x_2^{(k+1)} &amp;= \\frac{1}{a_{22}} \\left( b_2 - a_{21}x_1^{(k)} - a_{23}x_3^{(k)} - \\cdots - a_{2n}x_n^{(k)} \\right) \\\\   \\vdots \\end{align} \\] <p>A different way to understand the equations is to decompose \\(A\\) into a diagonal component \\(D\\) and the remainder \\(R\\):  </p> \\[   A=D+R   \\] <p>where $$ D={\\begin{bmatrix}a_{11}&amp;0&amp;\\cdots &amp;0\\0&amp;a_{22}&amp;\\cdots &amp;0\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\0&amp;0&amp;\\cdots &amp;a_{nn}\\end{bmatrix}}, \\qquad  </p> <p>R={\\begin{bmatrix}0&amp;a_{12}&amp;\\cdots &amp;a_{1n}\\a_{21}&amp;0&amp;\\cdots &amp;a_{2n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\cdots &amp;0\\end{bmatrix}}. $$  </p> <p>And the system can be written as  </p> \\[   D \\mathbf{x} + R \\mathbf{x} = \\mathbf{b}   \\] <p>And the solution of \\(\\mathbf{x}\\) is iteratively approximated by  </p> \\[   \\mathbf{x}^{(k+1)} = D^{-1} \\left( \\mathbf{b} - R \\mathbf{x}^{(k)} \\right)   \\]"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#gauss-seidel-method","title":"Gauss-Seidel Method","text":"<p>When computing the new approximation \\(x_1^{(k+1)}, x_2^{(k+1)}, \\cdots, x_n^{(k+1)}\\), the new estimation \\(x_j^{(k+1)}\\) instead of the old one (\\(x_j^{(k)}\\)) will be used, if available.  </p> <p>In other words, the equations are  </p> \\[ \\begin{align} x_1^{(k+1)} &amp;= \\frac{1}{a_{11}} \\left( b_1 - a_{12}x_2^{(k)} - a_{13}x_3^{(k)} - \\cdots - a_{1n}x_n^{(k)} \\right) \\\\   x_2^{(k+1)} &amp;= \\frac{1}{a_{22}} \\left( b_2 - a_{21}x_1^{(k+1)} - a_{23}x_3^{(k)} - \\cdots - a_{2n}x_n^{(k)} \\right) \\\\   x_3^{(k+1)} &amp;= \\frac{1}{a_{33}} \\left( b_3 - a_{31}x_1^{(k+1)} - a_{32}x_2^{(k+1)} - \\cdots - a_{3n}x_n^{(k)} \\right) \\\\   \\vdots \\end{align} \\] <p>A different way to understand the equation is to decompose \\(A\\) into a lower triangular component \\(L_*\\) and a strictly upper triangular component \\(U\\):  </p> \\[   A=L_* + U   \\] <p>where  </p> <p>$$ L_*={\\begin{bmatrix}a_{11}&amp;0&amp;\\cdots &amp;0\\a_{21}&amp;a_{22}&amp;\\cdots &amp;0\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\cdots &amp;a_{nn}\\end{bmatrix}},\\quad  </p> <p>U={\\begin{bmatrix}0&amp;a_{12}&amp;\\cdots &amp;a_{1n}\\0&amp;0&amp;\\cdots &amp;a_{2n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\0&amp;0&amp;\\cdots &amp;0\\end{bmatrix}}. $$  </p> <p>And the system can be written as  </p> \\[   L_* \\mathbf{x} + U \\mathbf{x} = \\mathbf{b}   \\] <p>And the solution of \\(\\mathbf{x}\\) is iteratively approximated by  </p> \\[   \\mathbf{x}^{(k+1)} = L_*^{-1} \\left( \\mathbf{b} - U \\mathbf{x}^{(k)} \\right)   \\]"},{"location":"Notes/202205291406_Jacobi_Method_and_Gauss-Seidel_Method/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Gauss-Seidel Method</li> <li>Wikipedia: Jacobi Method</li> </ul>"},{"location":"Notes/202205291420_DOSKEY_alias/","title":"DOSKEY alias","text":"<pre><code>@REM General purpose alias\nDOSKEY ll=dir $*\nDOSKEY lrt=dir /OD /TW $*\nDOSKEY guser=cd %USERPROFILE%\nDOSKEY history=doskey /history\nDOSKEY TaskListSvc=tasklist /fi \"SERVICES eq $1\"\nDOSKEY TaskListMod=tasklist /fi \"MODULES eq $1\"\n</code></pre>"},{"location":"Notes/202205291421_Windows_Keyboard_Shortcuts/","title":"Windows Keyboard Shortcuts","text":""},{"location":"Notes/202205291421_Windows_Keyboard_Shortcuts/#virtual-desktop","title":"Virtual Desktop","text":"Key Combo Description <code>&lt;Win&gt; + &lt;Tab&gt;</code> Open \"Task View\" <code>&lt;Win&gt; + &lt;Ctrl&gt; + D</code> Create new virtual desktop <code>&lt;Win&gt; + &lt;Ctrl&gt; + &lt;RightArrow&gt;</code> Switch to the virtual desktop on the right <code>&lt;Win&gt; + &lt;Ctrl&gt; + &lt;LeftArrow&gt;</code> Switch to the virtual desktop on the left <code>&lt;Win&gt; + &lt;Ctrl&gt; + &lt;F4&gt;</code> Close the virtual desktop <p>Note:  </p> <ul> <li>No shortcut to move a window to a different virtual desktop at the moment. To move the window, open \"Task View\", right click on the window of interest and select \"Move to\"  </li> </ul>"},{"location":"Notes/202205291421_Windows_Keyboard_Shortcuts/#reference","title":"Reference","text":"<ul> <li>https://support.microsoft.com/en-us/help/12445/windows-keyboard-shortcuts</li> </ul>"},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/","title":"Windows Programming Quick Reference","text":""},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/#audio","title":"Audio","text":"<p>MSDN:  </p> <ul> <li>Audio Signal Processing Modes <ul> <li>Available Signal Processing Modes</li> </ul> </li> <li>AudioCategory Enum</li> <li>Ksmedia.h</li> <li>KSAUDIO_MICROPHONE_COORDINATES </li> </ul>"},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/#sal-error-code-and-other-info","title":"SAL, Error Code, and Other Info","text":"<p>MSDN:  </p> <ul> <li>SAL 2 Annotation</li> <li>Windows Error Codes</li> <li>Windows Locale Codes</li> <li>Interprocess Communications</li> <li>Compiler Options Listed by Category</li> </ul>"},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/#msbuildexe-command-line","title":"MSBuild.exe Command-line","text":""},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/#basics","title":"Basics","text":"<p>Example location under Visual Studio  </p> <pre><code>c:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe \n</code></pre> <p>Build a Visual Studio project/solution with specific configuration and platform:</p> <pre><code>msbuild.exe my_sample.sln -p:Configuration=Release -p:Platform=x64\n</code></pre> <p>Clean and build the projection/solution:</p> <pre><code>msbuild.exe my_sample.sln -t:Clean;Build\n</code></pre>"},{"location":"Notes/202205291423_Windows_Programming_Quick_Reference/#specify-some-preprocessors-from-command-line","title":"Specify some preprocessors from command-line","text":"<p>As of 2019/11, there seems no straight-forward solution for this task. One reasonable work-around is to create a user-defined variable in <code>vcxproj</code> file to pass the preprocessors from command-line to the compile command.  </p> <ul> <li>Step 1: Modify <code>vcxproj</code> to add a user-specified variable to the <code>&lt;AdditionalOptions&gt;</code> element under <code>&lt;ClCompile&gt;</code> </li> <li>Step 2: Set the user-specified variable in the CMD environment where <code>msbuild</code> will be invoked.  </li> </ul> <p>Assuming the user-specified variable is named \"<code>ExternalCompilerOptions</code>\", step 1 will add/modify the <code>&lt;ClCompile&gt;</code> element in the <code>vcxproj</code> file as follows:  </p> <pre><code>&lt;ClCompile&gt;  \n\u00a0\u00a0\u00a0\u00a0&lt;AdditionalOptions&gt;$(ExternalCompilerOptions)&lt;/AdditionalOptions&gt;  \n&lt;/ClCompile&gt;  \n</code></pre> <p>Now, to compile the project with a preprocessor <code>FOO</code> defined, and another preprocessor <code>BAR</code> defined as 1, the user just set the <code>ExternalCompilerOptions</code> accordingly before calling <code>msbuild</code> </p> <pre><code>set ExternalCompilerOptions=/DFOO /DBAR=1  \nmsbuild my_sample.sln  \n</code></pre>"},{"location":"Notes/202205291424_Windows_Registry_Keys/","title":"Windows Registry Keys","text":""},{"location":"Notes/202205291424_Windows_Registry_Keys/#structure","title":"Structure","text":"<p>The Windows registry is structured in a tree format. Each node in the tree is called a registry key, and the child nodes of a node is also called the registry subkeys of the node.</p> <p>Each node may or may not contain the data entries, where the data entries are called registry values. The registry values is a structure consists of 3 fields:</p> <ul> <li>The name of the registry value</li> <li>The data type of the registry value</li> <li>The data of the registry value</li> </ul> <p>For example:</p> <ul> <li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList</code> is a registry key</li> <li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\S-1-5-18</code> is also a registry key</li> <li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList</code> has a registry value whose name, type, and data are <code>Public</code>, <code>REG_EXPAND_SZ</code>, and <code>%SystemDrive%\\Users\\Public</code></li> <li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\S-1-5-18</code> has a registry value whose whose name, type, and data are <code>ProfileImagePath</code>, <code>REG_EXPAND_SZ</code>, and <code>%systemroot%\\system32\\config\\systemprofile</code>.</li> </ul>"},{"location":"Notes/202205291424_Windows_Registry_Keys/#basic-operations","title":"Basic Operations","text":"<p>Query <pre><code>reg query &lt;KeyName&gt; [{/v &lt;ValueName&gt; | /ve}] [/s] [/se &lt;Separator&gt;] [/f &lt;Data&gt;] [{/k | /d}] [/c] [/e] [/t &lt;Type&gt;] [/z]\nreg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\" /s\nreg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\" /f \"*ProfileList*\" /s\n</code></pre></p> <ul> <li>The <code>&lt;Data&gt;</code> in <code>/f &lt;Data&gt;</code> can be a search pattern with wildcard character ('<code>*</code>'), and it can be the name of the registry keys</li> </ul> <p>Add/Modify <pre><code>reg add &lt;KeyName&gt; [{/v ValueName | /ve}] [/t DataType] [/s Separator] [/d Data] [/f]\n</code></pre></p> <p>Delete <pre><code>Reg delete &lt;KeyName&gt; [{/v ValueName | /ve | /va}] [/f]\n</code></pre></p>"},{"location":"Notes/202205291424_Windows_Registry_Keys/#getting-the-username-from-the-hkey_users-values","title":"Getting the Username from the HKEY_USERS values","text":"<p>Use one of the followings <pre><code>reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\" /s\nreg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\hivelist\" /s\n</code></pre> Ref: Stackoverflow</p>"},{"location":"Notes/202205291424_Windows_Registry_Keys/#getting-the-windows-build-version","title":"Getting the Windows build version","text":"<pre><code>reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\" /v BuildLabEx\n</code></pre>"},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/","title":"VS Code Not Recognizing Git Repo","text":""},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/#context","title":"Context","text":"<p>On Windows, after updating git to v2.36.1, VS Code starts to fail to recognize some git repo. The \"source control\" tab in VS Code shows a message as follows:</p> <p>The folder currently open doesn't have a git repository. </p> <p>But there actually is a git repo.</p> <p>Trying to run git commands in the VS Code terminal returns the following error message:</p> <pre><code>fatal: detected dubious ownership in repository at '/path/to/my/project'\nTo add an exception for this directory, call:\n\n        git config --global --add safe.directory /path/to/my/project\n</code></pre> <p>But running the same git command in an elevated CMD window works just fine.</p>"},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/#problem","title":"Problem","text":"<p>How to resolve the problem?</p>"},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/#solution","title":"Solution","text":"<p>Run <code>git config --global --add safe.directory /path/to/my/project</code> as suggested</p>"},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/#note","title":"Note","text":"<ul> <li>When the git repo is created under an elevated CMD window, the owner of the folder will be set to the \"Administrators\" user group. And when the same user attempts to interact with the git repo in a non-elevated CMD window (like the terminal opened under the non-elevated VS Code), the user is perceived as in a different user group (probably \"Users\" user group), resulting in the \"dubious ownership\" error.</li> <li></li> </ul>"},{"location":"Notes/202205311041_vscode_not_recognize_git_repo/#reference","title":"Reference","text":"<p>https://stackoverflow.com/questions/71901632/fatal-unsafe-repository-home-repon-is-owned-by-someone-else</p>"},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/","title":"Python on Windows Not Finding the Installed Package","text":""},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/#context","title":"Context","text":"<p>When running the following command on Windows, it returns an error suggesting a module is not found:</p> <pre><code>&gt; myscript.py \n\nTraceback (most recent call last):\n  File \"myscript.py\", line 14, in &lt;module&gt;\n    from azure.identity import AzureCliCredential\nModuleNotFoundError: No module named 'azure.identity'\n</code></pre> <p>The underlying Python is the Anaconda distribution, and <code>conda list</code> shows that the module in question is indeed installed.</p>"},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/#problem","title":"Problem","text":"<p>How to resolve the issue of the installed module not found?</p>"},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/#solution","title":"Solution","text":"<p>Two possible solutions.</p>"},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/#solution-1","title":"Solution 1","text":"<p>Run  <pre><code>python myscript.py\n</code></pre></p> <p>instead of  <pre><code>myscript.py\n</code></pre></p> <p>This is because on Windows, the <code>C:\\Windows\\py.exe</code> launcher is associated with .py files by default, and the launcher automatically detects the Python installation, which may not be the one that installs the module in question (i.e., it may detect the default conda enviornment instead of the virtual environment user is currently using.)</p>"},{"location":"Notes/202206202213_python_on_windows_not_finding_installed_package/#solution-2","title":"Solution 2","text":"<p>Run the following command to find out where the module in question is installed (show in the <code>Location</code> field) <pre><code>pip show azure-identity\n</code></pre></p> <p>Then run the following command to make sure the location of the module is included in the search path in Python: <pre><code>python -c \"import sys; print(sys.path)\"\n</code></pre></p> <p>ref: https://stackoverflow.com/questions/34213764/unable-to-use-azure-sdk-in-python</p>"},{"location":"Notes/202207081024_pip_quick_ref/","title":"pip Quick Reference","text":""},{"location":"Notes/202207081024_pip_quick_ref/#basic","title":"Basic","text":"<pre><code>pip install MyPackageName\npip install MyPackageName==2.3\npip install --upgrade MyPackageName\npip install --user --pugrade MyPackageName\n</code></pre>"},{"location":"Notes/202207081024_pip_quick_ref/#see-also","title":"See Also","text":"<ul> <li>Run pip to Install a Package to Anaconda Environment</li> </ul>"},{"location":"Notes/202207091555_mouth_reference_point/","title":"Mouth Reference Point (MRP)","text":"<p>The point on the reference axis, 25 mm in front of the lip plane.</p>"},{"location":"Notes/202207091555_mouth_reference_point/#reference","title":"Reference","text":"<ul> <li>Definition of Mouth Reference Point</li> </ul>"},{"location":"Notes/202207191648_norm/","title":"Norm (mathematics)","text":"<p>From Norm (mathematics) - Wikipedia:</p> <p>In mathematics, a norm is a function from a real or complex vector space to the non-negative real numbers that behaves in certain ways like the distance from the origin.</p> <p>Typically, for \\(\\boldsymbol{x} = (x_1, x_2, \\cdots, x_n) \\in \\mathbb{R}^n\\), the norm of \\(x\\) is defined as</p> \\[ || \\boldsymbol{x} || = \\left( x_1^2 + \\cdots + x_n^2 \\right)^{\\frac{1}{2}} \\] <p>This definition of norm is called the Euclidean norm or the \\(L^2\\) norm</p> <p>Similarly, for \\(\\boldsymbol{z} = (z_1, z_2, \\cdots, z_n) \\in \\mathbb{C}^n\\), the norm of \\(\\boldsymbol{z}\\) is defined as</p> \\[ || \\boldsymbol{z} || = \\left( |z_1|^2 + \\cdots + |z_n|^2 \\right)^{\\frac{1}{2}} \\] <p>where \\(|z_i|\\) is the absolute value of \\(z_i\\).</p> <p>There are also other definitions of norm. For example, the \\(L^p\\) norm for \\(\\boldsymbol{z}\\) is defined as:</p> \\[ || \\boldsymbol{z} ||_p = \\left( |z_1|^p + \\cdots + |z_n|^p \\right)^{\\frac{1}{p}} \\]"},{"location":"Notes/202207191648_norm/#norm-of-complex-number","title":"Norm of complex number","text":"<p>In some fields or some applications, the norm of a complex number \\(z = a + ib\\) is defined as \\((a^2 + b^2)\\) instead of \\(\\sqrt{(a^2 + b^2)}\\) . See Gauss' definition of norm for complex number and std::norm in C++ standard library.</p>"},{"location":"Notes/202207191648_norm/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Gauss' definition of norm for complex number</li> <li>https://math.stackexchange.com/a/285404</li> <li>norm - C++ Reference (cplusplus.com)</li> <li>Norm (mathematics) - Wikipedia</li> </ul>"},{"location":"Notes/202207222053_windows_re/","title":"Accessing Windows Recovery Environment","text":"<p>To access Windows Recovery Environment (Windows RE, or WinRE), do one of the followings:</p> <ul> <li>From the login screen, click the power icon, then hold down the Shift key while selecting Restart.</li> <li>Click Start &gt; Settings &gt; Update &amp; security &gt; Recovery &gt; under Advanced Startup, click Restart now.</li> <li> <p>Run the following command in a CMD window:</p> <pre><code>shutdown /r /o\n</code></pre> </li> </ul>"},{"location":"Notes/202207222053_windows_re/#reference","title":"Reference","text":"<ul> <li>https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/windows-recovery-environment--windows-re--technical-reference?view=windows-11</li> </ul>"},{"location":"Notes/202207222055_disable_bitlocker/","title":"Disabling Windows Bitlocker from Command Line","text":"<p>Run the following command in an elevated CMD window to disable Bitlocker on drive C:</p> <pre><code>manage-bde -off C:\n</code></pre> <p>If it succeeds, it may return the following message:</p> <pre><code>Decryption is now in progress\n</code></pre> <p>Check the progress by running the following command:</p> <pre><code>manage-bde -status C:\n</code></pre> <p>And it will show the current status of decryption</p> <pre><code>Conversion Status:    Decryption in Progress\nPercentage Encrypted: 27.1%\n</code></pre> <p>When the decryption is done, the status message will become</p> <pre><code>Conversion Status:    Fully Decrypted\nPercentage Encrypted: 0.0%\n</code></pre>"},{"location":"Notes/202207222055_disable_bitlocker/#reference","title":"Reference","text":"<ul> <li>https://roytuts.com/disable-bitlocker-recovery-on-windows-startup/</li> </ul>"},{"location":"Notes/202207280929_overlap_add_method/","title":"Overlap-Add Method","text":""},{"location":"Notes/202207280929_overlap_add_method/#context","title":"Context","text":"<p>Given a discrete signal \\(x[n]\\) and a finite impulse response (FIR) filter \\(h[n]\\), the discrete convolution between \\(x[n]\\) and \\(h[n]\\) is:</p> \\[ \\begin{align} y[n] = x[n] * h[n] &amp;\\triangleq \\sum_{m=-\\infty}^{\\infty} h[m] \\cdot x[n-m] \\\\ &amp;= \\sum_{m=0}^{M-1} h[m] \\cdot x[n-m] \\end{align} \\] <p>where \\(h[n] = 0\\) for \\(n\\) outside the region \\([0, M-1]\\).</p> <p>The complexity of computing a sample of \\(y[n]\\) is \\(M\\) multiplications and \\((M-1)\\) additions. When \\(M\\) is large and \\(x[n]\\) is very long, it is very costly to compute the entire \\(y[n]\\).</p>"},{"location":"Notes/202207280929_overlap_add_method/#problem","title":"Problem","text":"<p>If the algorithmic latency is not a critical issue, is there any way to reduce the computational complexity by conducting the convolution in the frequency domain?</p>"},{"location":"Notes/202207280929_overlap_add_method/#solution","title":"Solution","text":"<p>The computational complexity can be reduced by doing the followings:</p> <ol> <li>Slice the signal \\(x[n]\\) into non-overlapping patches</li> <li>Compute the circular convolution between the patch and \\(h[n]\\)</li> <li>Add the convolution outcome of the patches together to reconstruct the desired \\(y[n]\\)</li> </ol> <p>First, define a finite-length signal \\(x_k[n]\\) as</p> \\[ x_k[n] \\triangleq  \\left\\{ \\begin{array}{rl} x[n+kL] &amp; 0 \\leq n \\leq L-1 \\\\ 0 &amp; \\mbox{otherwise} \\end{array}\\right. \\] <p>Note that</p> <ul> <li>\\(x_k[n]\\) is of finite length \\(L\\)</li> <li>There is no overlap between \\(x_k[n]\\) and \\(x_{k+1}[n]\\).</li> </ul> <p>and \\(y[n]\\) can then be written as</p> \\[ \\begin{align} y[n] &amp;= \\left( \\sum_k{x_k[n-kL]} \\right) * h[n] \\\\ &amp;= \\sum_k{\\left( x_k[n-kL] * h[n] \\right)} \\\\ &amp;= \\sum_k{y_k[n-kL]} \\end{align} \\] <p>where</p> <ul> <li>\\(y_k[n]\\) is the linear convolution of \\(x_k[n]\\) and \\(h[n]\\), and \\(y_k[n]\\) is 0 outside the region \\([0, (L - 1) + (M - 1)]\\). </li> </ul> <p>Now, if we compute the N-point circular convolution between \\(x_k[n]\\) and \\(h[n]\\) with a period \\(N \\geq L+M-1\\), the circular convolution result \\(\\tilde{y_k}[n]\\) will be equivalent to the linear convolution result \\(y_k[n]\\) in the region \\([0, N-1]\\). Note that the N-point circular convolution can be computed efficiently as follows, according to the circular convolution theorem:</p> \\[ \\tilde{y_k}[n] = DFT_N^{-1}( DFT_N(x_k[n]) \\cdot DFT_N(h[n]) ) \\] <p>where</p> <ul> <li>\\(DFT_N\\) and \\(DFT_N^{-1}\\) are the N-point Discrete Fourier transform and the N-point inverse Discrete Fourier transform, respectively.</li> </ul> <p>Note:</p> <ul> <li>While the algorithm works for any \\(N \\geq L+M-1\\), choosing \\(N &gt; L+M-1\\) only adds unnecessary computational cost.</li> <li>The typical approach is to choose \\(N\\) to be an integer power-of-2, then determine \\(L\\) by \\(L = N-M+1\\).</li> </ul>"},{"location":"Notes/202207280929_overlap_add_method/#see-also","title":"See also","text":"<ul> <li>202204301817_Overlap-save_method</li> </ul>"},{"location":"Notes/202207280929_overlap_add_method/#reference","title":"Reference","text":"<ul> <li>Wikipedia: Overlap-Add Method</li> </ul>"},{"location":"Notes/202207302208_derivative_of_arg_z/","title":"Derivative of \\(arg(z(t))\\) with respect to \\(t\\)","text":""},{"location":"Notes/202207302208_derivative_of_arg_z/#context","title":"Context","text":"<p>Given</p> <ul> <li>\\(x(t) \\in \\mathbb{R}\\) is differentiable</li> <li>\\(y(t) \\in \\mathbb{R}\\) is differentiable</li> <li>\\(z(t) = x(t) + jy(t)\\)</li> <li>\\(\\theta(t) = \\arg(z(t))\\) is the argument (angle) of the complex signal \\(z(t)\\)</li> </ul>"},{"location":"Notes/202207302208_derivative_of_arg_z/#problem","title":"Problem","text":"<p>What is the derivativie of \\(\\theta(t)\\) with respect to \\(t\\)?</p>"},{"location":"Notes/202207302208_derivative_of_arg_z/#solution","title":"Solution","text":"\\[ \\theta'(t) = \\frac{\\partial \\theta(t)}{\\partial t} = \\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t) + y^2(t)}, \\ x \\neq 0 \\mbox{ and } y \\neq 0 \\]"},{"location":"Notes/202207302208_derivative_of_arg_z/#derivation","title":"Derivation","text":"<p>The principal value of the argument of \\(z(t)\\) can be calculated by:</p> \\[ Arg(z(t)) = \\left\\{ \\begin{array}{ll}    \\arctan(\\frac{y(t)}{x(t)}) &amp; \\mbox{if } \\ x &gt; 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) + \\pi &amp; \\mbox{if } \\ x &lt; 0 \\mbox{ and } y \\geq 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) - \\pi &amp; \\mbox{if } \\ x &lt; 0 \\mbox{ and } y &lt; 0, \\\\    +\\frac{\\pi}{2} &amp; \\mbox{if } \\ x = 0 \\mbox{ and } y &gt; 0, \\\\    -\\frac{\\pi}{2} &amp; \\mbox{if } \\ x = 0 \\mbox{ and } y &lt; 0, \\\\    \\mbox{undefined} &amp; \\mbox{if } \\ x = 0 \\mbox{ and } y = 0. \\end{array} \\right. \\] <p>Or equivalently,</p> \\[ Arg(z(t)) = \\left\\{ \\begin{array}{ll}    \\arctan(\\frac{y(t)}{x(t)}) &amp; \\mbox{if } \\ x(t) &gt; 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) + \\pi &amp; \\mbox{if } \\ x(t) &lt; 0 \\mbox{ and } y(t) \\geq 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) - \\pi &amp; \\mbox{if } \\ x(t) &lt; 0 \\mbox{ and } y(t) &lt; 0, \\\\    \\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &gt; 0, \\\\    -\\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &lt; 0, \\\\    \\mbox{undefined} &amp; \\mbox{if } \\ x(t) = 0 \\mbox{ and } y(t) = 0. \\end{array} \\right. \\] <p>Note that \\(Arg(z(t))\\) is not differentiable w.r.t. \\(t\\) at \\(x(t) &lt; 0, y(t) = 0\\) due to the discontinuity. </p> <p>To find \\(\\theta'(t)\\), we take the following steps:</p> <ol> <li>Define \\(\\theta(t)\\) in a way that \\(\\theta(t)\\) is differentiable in each of the following 4 half-planes: \\(x(t) &lt; 0\\), \\(x(t) &gt; 0\\), \\(y(t) &lt; 0\\), \\(y(t) &gt; 0\\)</li> <li>Find \\(\\theta'(t)\\) in each of the 4 half-planes</li> <li>Confirm \\(\\theta'(t)\\) is identical among the 4 overlapping half-planes.</li> </ol> <p>To address the discontinuity in \\(Arg(z(t))\\), we choose to calculate \\(\\theta(t)\\) by</p> \\[ \\theta(t) = \\left\\{ \\begin{array}{ll}    \\arctan(\\frac{y(t)}{x(t)}) &amp; \\mbox{if } \\ x(t) &gt; 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) + \\pi &amp; \\mbox{if } \\ x(t) &lt; 0 \\mbox{ and } y(t) \\geq 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) - \\pi + 2\\pi &amp; \\mbox{if } \\ x(t) &lt; 0 \\mbox{ and } y(t) &lt; 0, \\\\    \\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &gt; 0, \\\\    -\\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &lt; 0, \\\\    \\mbox{undefined} &amp; \\mbox{if } \\ x(t) = 0 \\mbox{ and } y(t) = 0. \\end{array} \\right. \\] <p>or equivalently,</p> \\[ \\theta(t) = \\left\\{ \\begin{array}{ll}    \\arctan(\\frac{y(t)}{x(t)}) &amp; \\mbox{if } \\ x(t) &gt; 0, \\\\    \\arctan(\\frac{y(t)}{x(t)}) + \\pi &amp; \\mbox{if } \\ x(t) &lt; 0, \\\\    \\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &gt; 0, \\\\    -\\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) &amp; \\mbox{if } \\ y(t) &lt; 0, \\\\    \\mbox{undefined} &amp; \\mbox{if } \\ x(t) = 0 \\mbox{ and } y(t) = 0. \\end{array} \\right. \\] <p>The next step is to find \\(\\theta'(t)\\) in each of the 4 half-planes. For \\(x(t)&gt;0\\), we have</p> \\[ \\tan( \\theta(t) ) = \\tan( \\arctan(\\frac{y(t)}{x(t)})) = \\frac{y(t)}{x(t)} \\] <p>Differentiating both sides of the equation w.r.t \\(t\\) yields</p> \\[ \\sec^2( \\theta(t) ) \\theta'(t) = \\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t)} \\] <p>Given \\(\\sec^2 = 1 + \\tan^2\\) and \\(\\tan^2( \\theta(t) ) = \\frac{y^2(t)}{x^2(t)}\\), the equation above can be written as</p> \\[ \\begin{align} \\left[ 1 + \\frac{y^2(t)}{x^2(t)} \\right] \\theta'(t) &amp;= \\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t)}, \\\\ \\theta'(t) &amp;= \\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t)} \\left[ 1 + \\frac{y^2(t)}{x^2(t)} \\right]^{-1} \\\\ &amp;= \\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t) + y^2(t)} \\end{align} \\] <p>For \\(x(t) &lt; 0\\), we get the same result of \\(\\theta'(t)\\) as for \\(x(t) &gt;0\\) because</p> \\[ \\frac{\\partial}{\\partial t}\\left( \\arctan(\\frac{y(t)}{x(t)}) + \\pi  \\right) = \\frac{\\partial}{\\partial t}\\left( \\arctan(\\frac{y(t)}{x(t)}) \\right) \\] <p>For \\(y(t) &lt; 0\\), since \\(\\tan(\\frac{\\pi}{2} - \\phi) = \\frac{1}{\\tan \\phi}\\) and \\(\\tan(- \\phi)= - \\tan \\phi\\), we have </p> \\[ \\begin{align} \\tan(\\theta(t)) &amp;= \\tan \\left( - \\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) \\right) \\\\ &amp;= - \\tan \\left( \\frac{\\pi}{2} + \\arctan(\\frac{x(t)}{y(t)}) \\right) \\\\ &amp;= \\frac{1}{\\tan( \\arctan(\\frac{x(t)}{y(t)}))} \\\\ &amp;= \\frac{y(t)}{x(t)} \\end{align} \\] <p>which is the same as the case for \\(x(t) &gt; 0\\), and therefore the solution to \\(\\theta'(t)\\) will be the same.</p> <p>YYC Note: Can we really differentiate \\(\\tan(\\theta(t))\\) in the region of \\(y(t) &lt; 0\\)? Is it differentiable at  \\(x(t) = 0\\)?</p> <p>For \\(y(t) &gt; 0\\), we get the same results of \\(\\theta'(t)\\) as for \\(y(t) &lt; 0\\) because</p> \\[ \\frac{\\partial}{\\partial t}\\left( \\arctan(\\frac{\\pi}{2} - \\frac{x(t)}{y(t)})  \\right) = \\frac{\\partial}{\\partial t}\\left( - \\frac{\\pi}{2} - \\arctan(\\frac{x(t)}{y(t)}) \\right) \\] <p>Now we conclude that the solution   \\(\\theta'(t) =\\frac{x(t)y'(t) - y(t)x'(t)}{x^2(t) + y^2(t)}\\) holds for all 4 half-planes, and therefore it is the solution for all \\(x(t), y(t)\\) where \\(x(t) \\neq 0\\) and \\(y(t) \\neq 0\\).</p>"},{"location":"Notes/202207302208_derivative_of_arg_z/#reference","title":"Reference","text":"<ul> <li>https://en.wikipedia.org/wiki/Argument_(complex_analysis)</li> <li>https://gubner.ece.wisc.edu/notes/MagnitudeAndPhaseOfComplexNumbers.pdf</li> </ul>"},{"location":"Notes/202208262118_acceptable_voice_latency/","title":"Acceptable Voice Latency","text":"<p>Per ITU-T G.114:</p> <p>... if delays were kept below 150 ms, then most applications would not be significantly affected.</p> <p>...</p> <p>Regardless of the type of application, it is recommended to not exceed a one-way delay of 400 ms for general network planning</p>"},{"location":"Notes/202208262118_acceptable_voice_latency/#reference","title":"Reference","text":"<ul> <li>https://www.itu.int/rec/T-REC-G.114-200305-I/en</li> <li>https://www.ciscopress.com/articles/article.asp?p=471096&amp;seqNum=6</li> </ul>"},{"location":"Notes/202208262121_cpp_inheritance/","title":"C++ Inheritance","text":"<p>Given </p> <pre><code>class A {\n    public:\n        int x;\n    protected:\n        int y;\n    private:\n        int z;\n}\n</code></pre> <p>The accessibility of A's member variables from a derived class B is as follows:</p> <code>B::x</code> <code>B::y</code> <code>B::z</code> <code>class B : public A</code> public protected N/A <code>class B : protected A</code> protected protected N/A <code>class B : private A</code> private private N/A"},{"location":"Notes/202208262121_cpp_inheritance/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/questions/860339/what-is-the-difference-between-public-private-and-protected-inheritance-in-c</li> </ul>"},{"location":"Notes/202209050928_cola_property/","title":"Constant OverLap-Add (COLA) Property","text":""},{"location":"Notes/202209050928_cola_property/#context","title":"Context","text":"<p>Given </p> <ul> <li>\\(x(n)\\) : input signal at time \\(n\\)</li> <li>\\(w(n)\\) : window function of finite length \\(M\\)</li> <li>\\(R \\in \\mathbb{Z}^+\\) : the hop size between successive chunk of \\(x(n)\\)</li> </ul> <p>The signal \\(x(n)\\) can be broken up into chunks, denoted as \\(x_m(n)\\), where \\(m \\in \\mathbb{Z}\\) is the index of the chunk, and </p> \\[ x_m(n) = x(n)w(n - mR) \\] <p>Depending on the values of \\(M\\) and \\(R\\), the consecutive \\(x_m(n)\\) may or may not be overlapped.</p> <p>The discrete-time short-time Fourier transform (STFT) of \\(x_m(n)\\) is defined as</p> \\[ \\displaystyle \\mathbf {STFT} \\{x_m(n)\\}(f) \\equiv X_m(f) = \\sum_{n=-\\infty}^\\infty{x(n)w(n-mR)e^{-j2 \\pi f n}} \\] <p>And the sum of the successive DTFTs over time is</p> \\[ \\begin{align} \\sum_{m=-\\infty}^{\\infty}{X_m(f)} &amp;= \\sum_{m=-\\infty}^{\\infty} \\sum_{n=-\\infty}^\\infty{x(n)w(n-mR)e^{-j2 \\pi f n}} \\\\ &amp;= \\sum_{n=-\\infty}^\\infty{x(n)e^{-j2 \\pi f n}} \\sum_{m=-\\infty}^{\\infty} w(n-mR) \\end{align} \\] <p>Meanwhile, the DTFT of the whole \\(x(n)\\) is</p> \\[ X(f) = \\sum_{n=-\\infty}^\\infty{x(n)e^{-j2 \\pi f n}} \\]"},{"location":"Notes/202209050928_cola_property/#problem","title":"Problem","text":"<p>When will \\(\\sum_{m=-\\infty}^{\\infty}{X_m(f)}\\) equals to \\(X(f)\\)?</p>"},{"location":"Notes/202209050928_cola_property/#solution","title":"Solution","text":"<p>\\(\\sum_{m=-\\infty}^{\\infty}{X_m(f)}\\) equals to \\(X(f)\\) when the following equation holds:</p> \\[ \\sum_{m=-\\infty}^{\\infty} w(n-mR) = 1, \\ \\forall n \\in \\mathbb{Z} \\] <p>We say the window function \\(w(n)\\) has the _Constant OverLap-Add (COLA) property _ at hop-size \\(R\\) if the above equation holds. Or:</p> \\[ w \\in \\text{COLA}(R) \\]"},{"location":"Notes/202209050928_cola_property/#notes","title":"Notes","text":"<p>When \\(w \\in \\text{COLA}(R)\\), the following is also true:</p> \\[ x(n) = \\sum_{m=-\\infty}^{\\infty}{ x(n) w(n - mR) } \\]"},{"location":"Notes/202209050928_cola_property/#reference","title":"Reference","text":"<ul> <li>https://ccrma.stanford.edu/~jos/sasp/Mathematical_Definition_STFT.html#19930</li> </ul>"},{"location":"Notes/202209072310_ola_stft_processing/","title":"Overlap-Add (OLA) STFT Processing","text":""},{"location":"Notes/202209072310_ola_stft_processing/#context","title":"Context","text":"<p>Given </p> <ul> <li>\\(x(n)\\) : input signal at time \\(n\\)</li> <li>\\(w(n)\\) : window function of finite length \\(M\\)</li> <li>\\(R \\in \\mathbb{Z}^+\\) : the hop size between successive chunk of \\(x(n)\\)</li> <li>\\(x_m(n) = x(n)w(n - mR)\\): the m-th chunk of \\(x(n)\\)</li> <li>\\(h_m(n)\\): the FIR filter of finite length \\(L\\) that will be applied to \\(x_m(n)\\)</li> </ul> <p>The filtered output can be written as</p> \\[ y(n) = \\sum_{m=-\\infty}^{\\infty}{y_m(n)} = \\sum_{m=-\\infty}^{\\infty}{x_m(n) * h_m(n)} \\] <p>where the operator \\(\\ast\\) is the linear convolution.</p> <p>The cost of computing \\(y(n)\\) can be very high if the signal \\(x(n)\\) is very long.</p>"},{"location":"Notes/202209072310_ola_stft_processing/#problem","title":"Problem","text":"<p>If the algorithmic latency is not a critical issue, is there any way to reduce the computational complexity by conducting the convolution in the frequency domain?</p>"},{"location":"Notes/202209072310_ola_stft_processing/#solution","title":"Solution","text":"<p>Define:</p> <ul> <li>\\(\\tilde{x}_m(n) = x_m(n + mR)\\): the shifted \\(x_m(n)\\) so that \\(\\tilde{x}_m(n) = 0 \\ \\forall n \\notin [0, M-1]\\)</li> <li>\\(\\tilde{y}_m(n) = \\tilde{x}_m(n) * h_m(n)\\) </li> </ul> <p>Based on Overlap-add method, by choosing the DFT window size \\(N \\geq L + M - 1\\), \\(\\tilde{y}_m(n)\\) can be efficiently computed by</p> \\[ \\tilde{y}_m(n) = DFT_N^{-1}( DFT_N(\\tilde{x}_m(n)) \\cdot DFT_N(h_m(n)) ) \\] <p>, and \\(y_m(n)\\) is yet again just a shifted version of \\(\\tilde{y}_m(n)\\):</p> \\[ y_m(n) = \\tilde{y}_m(n - mR) \\]"},{"location":"Notes/202209072310_ola_stft_processing/#see-also","title":"See Also","text":"<ul> <li>202207280929_overlap_add_method</li> </ul>"},{"location":"Notes/202209072310_ola_stft_processing/#reference","title":"Reference","text":"<ul> <li>https://ccrma.stanford.edu/~jos/sasp/Time_Varying_OLA_Modifications.html</li> </ul>"},{"location":"Notes/202209291413_cpp_handle_to_object_operator/","title":"Handle to Object Operator (^)","text":""},{"location":"Notes/202209291413_cpp_handle_to_object_operator/#overview","title":"Overview","text":"<p>In some c++ code, there may be a function declared as follows:</p> <pre><code>MyClass^ MyFunc();\n</code></pre> <p>The hat (^) sign after the class name is the \"handle to object operator,\" indicating that the declared object should be automatically deleted when the system determines that the object is no longer accessible.</p>"},{"location":"Notes/202209291413_cpp_handle_to_object_operator/#reference","title":"Reference","text":"<p>Handle to Object Operator (^) (C++/CLI and C++/CX) | Microsoft Learn</p>"},{"location":"Notes/202211112242_7z_user_folder/","title":"7-zip Mistakenly Zipping The Entire UserProfile folder","text":""},{"location":"Notes/202211112242_7z_user_folder/#context","title":"Context","text":"<p>When running <code>7-zip</code> to zip the <code>.git</code> folder with command like</p> <pre><code>7z.exe a -r Home C:\\Users\\MyAccount\\.git\n</code></pre> <p>7z will attempt to scan some other folders under <code>C:\\Users\\MyAccount</code> such as <code>C:\\Users\\MyAccount\\AppData</code>, which is unexpected and undesired.</p>"},{"location":"Notes/202211112242_7z_user_folder/#problem","title":"Problem","text":"<p>How to work around the issue and zip the <code>.git</code> folder?</p>"},{"location":"Notes/202211112242_7z_user_folder/#solution","title":"Solution","text":"<p>Run the following command instead:</p> <pre><code>7z.exe a -r Home C:\\Users\\MyAccount\\.git\\*\n</code></pre>"},{"location":"Notes/202212051045_windows_keyboard_input_not_detected/","title":"Windows Keyboard Input Not Detected","text":""},{"location":"Notes/202212051045_windows_keyboard_input_not_detected/#context","title":"Context","text":"<p>After removing several unused language input methods on a virtual desktop environment, the keyboard input suddenly stops working. Typing characters show nothing; the \"Num Lock\" and \"Caps Lock\" indicator lights do not toggle when the corresponding keys are pressed. It's as if the keyboard is not connected to the PC at all.</p> <p>This problem only happens in the virtual desktop environment. When switching back to the local PC, the keyboard works as expected.</p>"},{"location":"Notes/202212051045_windows_keyboard_input_not_detected/#problem","title":"Problem","text":"<p>How to resolve the problem?</p>"},{"location":"Notes/202212051045_windows_keyboard_input_not_detected/#solution","title":"Solution","text":"<p>It's unclear what fixes the issue, but toggling some of the following options using mouse seems to bring the keyboard back:</p> <ul> <li>Setting -&gt; Typing -&gt; Multilingual text suggestions</li> <li>Setting -&gt; Keyboard -&gt; Use your device without a physical keyboard</li> </ul>"},{"location":"Notes/202212052029_mkdocs_wider_content_body_width/","title":"Widen The MkDocs Content Body Width","text":""},{"location":"Notes/202212052029_mkdocs_wider_content_body_width/#context","title":"Context","text":"<p>The default MkDocs style sets the main content body width to some \"readable line length,\" which is narrow and is not good for reviewing complex math equations or source codes.</p>"},{"location":"Notes/202212052029_mkdocs_wider_content_body_width/#problem","title":"Problem","text":"<p>How to change the MkDocs layout to widen the content area?</p>"},{"location":"Notes/202212052029_mkdocs_wider_content_body_width/#solution","title":"Solution","text":"<p>Per https://github.com/squidfunk/mkdocs-material/issues/619:</p> <ol> <li> <p>Create a css file,, for example, <code>stylesheets/extra.css</code>, under the <code>docs</code> folder, with the following content:</p> <pre><code>@media only screen and (min-width: 76.25em) {\n  .md-main__inner {\n    max-width: none;\n  }\n  .md-sidebar--primary {\n    left: 0;\n  }\n  .md-sidebar--secondary {\n    right: 0;\n    margin-left: 0;\n    -webkit-transform: none;\n    transform: none;   \n  }\n}\n</code></pre> </li> <li> <p>Update <code>mkdocs.yml</code> to include the new css file</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> </li> </ol>"},{"location":"Notes/202212052029_mkdocs_wider_content_body_width/#reference","title":"Reference","text":"<ul> <li>https://github.com/squidfunk/mkdocs-material/issues/619</li> </ul>"},{"location":"Notes/202212101556_mermaid_quick_ref/","title":"Mermaid Sequence Diagram Quick Ref","text":""},{"location":"Notes/202212101556_mermaid_quick_ref/#basic","title":"Basic","text":"<p>The basic syntax is </p> <pre><code>[Actor][Arrow][Actor]:[Description text]\n</code></pre> <pre><code>sequenceDiagram\n  A -&gt;&gt; B : Hi A\n  B -&gt;&gt; A : Hi B\n\n  participant C\n  actor D\n  participant E as Ethan\n  E -&gt;&gt; A : Hi A</code></pre>"},{"location":"Notes/202212101556_mermaid_quick_ref/#activation","title":"Activation","text":"<p>Activate or deactivate an actor by adding <code>+</code> or <code>-</code> after the <code>[Arrow]</code>, respectively</p> <pre><code>sequenceDiagram\n  A -&gt;&gt;+ B : Call B\n  A -&gt;&gt;+ B : Call B again\n  B -&gt;&gt;- A : Return the 2nd call\n  B -&gt;&gt;- A : Return the 1st call</code></pre> <p>List of the available arrow types:</p> <pre><code>-&gt;\n--&gt;\n-&gt;&gt;\n--&gt;&gt;\n-x\n--x\n-)\n--)\n</code></pre> <p>Notes and background highlighting</p> <pre><code>sequenceDiagram\n  note left of A : A is going to call B\n  A -&gt;&gt; B : Call B\n  note over A, B: A calling B\n  note right of B: B getting a call from A\n\n  rect rgb(255, 0, 0)\n  note right of A : A calls B\n  A -&gt;&gt; B : Call B\n  rect rgb(0, 255, 0)\n  note over A, B: Processing\n  end\n  B -&gt;&gt; A : Return\n  end</code></pre>"},{"location":"Notes/202301191814_numpy_array_broadcasting/","title":"Numpy Array Broadcasting","text":""},{"location":"Notes/202301191814_numpy_array_broadcasting/#context","title":"Context","text":"<p>Many arithmetic operations, such as Hadamard product, requires the operands to be of the same shape. However, enforcing the same shape on the operands may lead to unnecessary copies of data.</p> <p>For example, for a data array of shape MxN, user may want to apply a Mx1 weight vector each of the N columns. If user needs to first match the array size before running Hadamard product, then the user has to first replicate the Mx1 vector to an MxN array. The unnecessary duplication of the Mx1 vector may result in additional memory usage and missed opportunity for optimization.</p>"},{"location":"Notes/202301191814_numpy_array_broadcasting/#problem","title":"Problem","text":"<p>How to avoid the unnecessary replication of the array for many array/matrix operations, allowing Numpy to further optimize the computation?</p>"},{"location":"Notes/202301191814_numpy_array_broadcasting/#solution","title":"Solution","text":"<p>When the two operands are of different shapes but the operator expects identical shapes, Numpy will try to replicate or expand the smaller array to match the shape of the larger one. This behavior is called \"broadcasting.\"</p> <p>Numpy compares the shapes of the two arrays, starting with the trailing (rightmost) dimensions and working its way left. Two dimensions are compatible if one of the followings is true:</p> <ol> <li>they are equal</li> <li>one of them is 1<ul> <li>The absence of the dimension is considered a dimension of size 1.</li> </ul> </li> </ol> <p>If every dimension of the two arrays are compatible, then the arrays are called broadcastable arrays.</p> <p>Examples of broadcastable arrays:</p> <pre><code>A      :   5 x 4   # shape (5,4)\nB      :       1   # shape (1,)\nResult :   5 x 4   # shape (5,4)\n\nA      :   10 x  1 x 30 x  1  # shape (10,1,30,1)\nB      :        20 x  1 x 40  # shape (20,1,40)\nResult :   10 x 20 x 30 x 40  # shape (10,20,30,40)\n</code></pre> <p>Note that shape <code>(5,1)</code> and shape <code>(5,)</code> are different:</p> <pre><code># Successfully brocast B from (5,1) to (5,4)\nA      :   5 x 4   # shape (5,4)\nB      :   5 x 1   # shape (5,1)\nResult :   5 x 4   # shape (5,4)\n\n# Fail to brocast C to the shape of A\nA      :   5 x 4   # shape (5,4)\nC      :       5   # shape (5,)\nResult :   N/A\n</code></pre>"},{"location":"Notes/202301191902_reverberation/","title":"Reverberation","text":""},{"location":"Notes/202301191902_reverberation/#definition","title":"Definition","text":"<p>Per Wikipedia: Reverberation:</p> <p>Reverberation (also known as reverb), in acoustics, is a persistence of sound, after a sound is produced.</p> <p>[...]</p> <p>reverberation is the occurrence of reflections that arrive in a sequence of less than approximately 50 ms.</p> <p>If the reflections arrive after 50-100ms, it is considered \"echo\".</p>"},{"location":"Notes/202301191902_reverberation/#measurement","title":"Measurement","text":"<p>The reverberation is quantified by the time it takes for the original sound to decay by 60dB, denoted as \\(T_{60}\\) or \\(RT_{60}\\).</p> <p>Per RECOMMENDED REVERBERATION TIMES FOR 7 KEY SPACES, the recommended \\(RT_{60}\\) for the following spaces are:</p> <ul> <li>Kindergarten: 0.4s</li> <li>Offices: 0.4-0.7s</li> <li>Classrooms: 0.4-0.6s</li> <li>Music rehearsal rooms: 0.9-1.2s</li> <li>Homes: 0.9s</li> <li>Bedrooms: 0.5s</li> <li>Restaurants: 0.7-0.8s</li> </ul>"},{"location":"Notes/202301191902_reverberation/#minimum-reverberation-time-human-can-perceive","title":"Minimum Reverberation Time Human Can Perceive","text":"<p>There seems no immediate answer on the Internet to the question about the minimum \\(RT_{60}\\) that a typical human will describe a sound as \"reverberant.\" But according to Aalto University: The human ear detects half a millisecond delay in sound, human can perceive \"a half of a millisecond delay\" in certain frequencies.</p> <p>The study shows that people can hear differences when audio starts at certain frequencies ahead of time. A half of a millisecond delay in certain frequencies relative to others was also audible. The amount of delay needed to exceed the detection threshold varies considerably at different frequencies, but delays were especially heard when sounds started or stopped</p>"},{"location":"Notes/202301231843_cmake_quick_ref/","title":"CMake Quick Reference","text":""},{"location":"Notes/202301231843_cmake_quick_ref/#include-out-of-tree-source-directory","title":"Include out-of-tree source directory","text":"<pre><code>add_subdirectory(path/to/my/ext/src path/to/binary)\n</code></pre> <p>Not providing <code>binary_dir</code> when calling <code>add_subdirectory()</code> results in the following error message:</p> <pre><code>  add_subdirectory not given a binary directory but the given source\n  directory \"path/to/my/ext/src\" is not a subdirectory of\n  \"path/to/my/project/root\"\n</code></pre> <p>ref: https://stackoverflow.com/questions/35260552/how-do-i-explicitly-specify-an-out-of-tree-source-in-cmake</p>"},{"location":"Notes/202302102151_uwp_app_pkg/","title":"Creating UWP App Package","text":""},{"location":"Notes/202302102151_uwp_app_pkg/#creating-certificate","title":"Creating Certificate","text":"<p>A valid certificate is required for the following two reasons:</p> <ol> <li>The UWP app package needs to be signed with a valid certificate</li> <li>The UWP app can be installed only on the machines that have the corresponding certificate.</li> </ol> <p>To create a certificate for an app, do the followings:</p> <ol> <li>Locate the package manifest file <code>AppxManifest.xml</code> of the app. </li> <li> <p>Open <code>AppxManifest.xml</code> to find the \"<code>Publisher</code>\" property under the \"<code>Identity</code>\" element.</p> <ul> <li> <p>It should look like the following:</p> <pre><code>&lt;Identity Name=\"Some-GUID-String\" Publisher=\"Some_Publisher_ID_String\" Version=\"1.2.3.4\" /&gt;\n</code></pre> </li> </ul> </li> <li> <p>Open an elevated PowerShell command window and run the following command:</p> <pre><code># The \"-Subject\" parameter needs to match the \"Publisher\" property found in the app\nNew-SelfSignedCertificate -Type Custom -Subject \"Some_Publisher_ID_String\" -KeyUsage DigitalSignature -FriendlyName \"SomeNameForMyApp\" -CertStoreLocation \"Cert:\\CurrentUser\\My\" -TextExtension @(\"2.5.29.37={text}1.3.6.1.5.5.7.3.3\", \"2.5.29.19={text}\")\n</code></pre> </li> <li> <p>If the command succeeds, it should return a \"thumbprint\" string of the created certificate. Save this thumbprint string for later use.</p> </li> <li>Export the certificate to a <code>.pfx</code> file using the following command in the elevated PowerShell window:</li> </ol> <pre><code># Replace &lt;Certificate_Thumbprint&gt; with the thumbprint obtained in the previous step\nExport-PfxCertificate -cert Cert:\\CurrentUser\\My\\&lt;Certificate_Thumbprint&gt; -FilePath My_Certificate.pfx -ProtectTo $env:UserName\n</code></pre> <p>Using Password Instead of Username</p> <p>The instruction here uses <code>-ProtectTo</code> to create a certificate that works for the current user. If the certificate needs to be installed by another user (e.g. you create the app package to let someone else to test the app), then the <code>-Password</code> option should be used instead of <code>-ProtectTo</code>.</p> <p>See https://learn.microsoft.com/en-us/windows/msix/package/create-certificate-package-signing for more details.</p>"},{"location":"Notes/202302102151_uwp_app_pkg/#creating-uwp-app-package_1","title":"Creating UWP App Package","text":"<p>Given the following:</p> <ol> <li><code>&lt;path\\to\\app\\binary&gt;</code>: A folder that contains all the binaries for the app, including a valid package manifest file <code>AppxManifest.xml</code></li> <li><code>&lt;my_app&gt;.msix</code>: The name of the output package</li> <li><code>&lt;HashAlgo&gt;</code>: The selected hash algorithm for packaging the app. Default is <code>SHA256</code></li> </ol> <p>Do the following to create the app package:</p> <ol> <li> <p>Locate the <code>makeappx.exe</code></p> <ul> <li> <p><code>makeappx.exe</code> is part of the Windows dev kits, usually installed under the location like <code>C:\\Program Files (x86)\\Windows Kits\\10\\bin\\&lt;Version_Number&gt;\\&lt;Architect&gt;\\makeappx.exe</code>. For example:</p> <pre><code>c:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.22000.0\\x64\\makeappx.exe\n</code></pre> </li> </ul> </li> <li> <p>Run the following command to create the app package</p> <pre><code>makeappx.exe pack -h &lt;HashAlgo&gt; -d &lt;path\\to\\app\\binary&gt; -p &lt;my_app&gt;.msix\n</code></pre> </li> <li> <p>If succeeded, a package named <code>&lt;my_app&gt;.msix</code> should be created.</p> </li> </ol> <p>See https://learn.microsoft.com/en-us/windows/msix/package/packaging-uwp-apps for more details.</p> <p>Windows will not allow user to install this package yet. To allow a user to install this package, 3 more things need to be done:</p> <ol> <li>Sign the app package with a certificate</li> <li>On the target machine, enable the \"developer mode\" in Settings</li> <li>On the target machine, install the certificate under \"Trusted People\" store.</li> </ol>"},{"location":"Notes/202302102151_uwp_app_pkg/#enabling-developer-mode","title":"Enabling Developer Mode","text":"<p>To enable the \"developer mode\" option in Windows, do the following:</p> <ol> <li>Open Settings app.</li> <li>Go to \"Privacy &amp; security\" --&gt; \"For developers\"</li> <li>Toggle on the \"Developer Mode\" option.</li> </ol>"},{"location":"Notes/202302102151_uwp_app_pkg/#signing-the-app-package","title":"Signing the App Package","text":"<p>To sign the app package, do the followings:</p> <ol> <li>Locate the <code>SignTool.exe</code><ul> <li><code>SignTool.exe</code> is part of the Windows dev kits, usually installed under the same location as <code>makeappx.exe</code></li> </ul> </li> <li> <p>Run the following command to sign the app package:</p> <pre><code>SignTool sign -fd &lt;HashAlgo&gt; -a -f &lt;my_certificate&gt;.pfx  &lt;my_app&gt;.msix\n</code></pre> </li> </ol> <p>See https://learn.microsoft.com/en-us/windows/msix/package/sign-app-package-using-signtool</p>"},{"location":"Notes/202302102151_uwp_app_pkg/#installing-certificate","title":"Installing Certificate","text":"<p>Windows does not allow user to install private app unless </p> <ol> <li>The developer mode is enabled.</li> <li>The certificate for the app is installed under appropriate store such as \"Trusted People\"</li> </ol> <p>The steps to enable the developer mode has been documented in the above section. To install the certificate, do the following:</p> <ol> <li>Copy the created certificate to the target machine</li> <li>In the file explorer, double click the certificate file. A dialog will pop up asking user to choose the \"Store Location.\" Choose the \"Local Machine\" option.</li> <li>In the next step, the dialog window will ask user to confirm the location of the certificate. Just click \"Next\" as the location of the certificate has been pre-filled.</li> <li>In the next step, the dialog window will ask user to specify the password and import options. Keep them as default as click \"Next\".</li> <li>In the next step, the dialog window will ask user how to choose the Store location. Select \"Place all certificates in the following store\", click \"Browse...\" button, and choose \"Trusted People\" store. Click Next.</li> <li>Review the confirmation information, then click \"Finish\" to install the certificate.</li> </ol> <p>See https://www.youtube.com/watch?v=s40bCNnFUgg for more information</p>"},{"location":"Notes/202302102151_uwp_app_pkg/#installing-the-app-package","title":"Installing the App Package","text":"<p>User should be able to install the app package on a target machine if:</p> <ul> <li>The package has been signed with a certificate</li> <li>The said certificate has been installed on the target machine</li> <li>The \"developer mode\" is enabled on the target machine.</li> </ul> <p>To install the package, simply double click the package file in the file explorer. </p>"},{"location":"Notes/202303092233_unique_ptr_quick_ref/","title":"C++ unique_ptr Quick Reference","text":""},{"location":"Notes/202303092233_unique_ptr_quick_ref/#instantiation","title":"Instantiation","text":"<pre><code>class MyData {\n    public:\n        MyData(int x=0);\n        ~MyData();\n\n        int m_x;\n}\n\nint main() {\n    std::unique_ptr&lt;MyData&gt; d1{ new MyData(10) };\n    std::unique_ptr&lt;MyData&gt; d2{ std::make_unique&lt;MyData&gt;(20) }; // std::make_unique since C++14\n    std::unique_ptr&lt;MyData&gt; d3;\n    d3 = std::make_unique&lt;MyData&gt;(30); \n\n    // No delete/release required. \n}\n</code></pre>"},{"location":"Notes/202303092233_unique_ptr_quick_ref/#operations","title":"Operations","text":"<pre><code>int main() {\n    std::unique_ptr&lt;MyData&gt; d1{ std::make_unique&lt;MyData&gt;(10) }; \n    std::unique_ptr&lt;float []&gt; d2{ std::make_unique&lt;float []&gt;(5) };\n\n    MyData&amp; ref_d1 = *d1; // operator* returns the reference to the underlying resource.\n    MyData* p_d1 = d1.get() // function get() returns the pointer to the underlying resource.\n\n    // Access the underlying resource of the unique_ptr like a regular pointer\n    int x = d1-&gt;m_x; \n    d2[0] = 0;\n\n    std::unique_ptr&lt;MyData&gt; d3{ std::make_unique&lt;MyData&gt;(30) };\n    // d3 = d1; // Error: cannot copy unique_ptr.\n    d3 = std::move(d1); // delete resource under d3; move resource under d1 to d3; d1 becomes nullptr\n}\n</code></pre>"},{"location":"Notes/202303092233_unique_ptr_quick_ref/#passing-unique_ptr-to-function","title":"Passing unique_ptr to Function","text":"<pre><code>int func1(MyData&amp; arg) {\n    return arg.m_x;\n}\n\nint func2(MyData* arg) {\n    if(arg) {\n        return arg-&gt;m_x;\n    } else {\n        return 0;\n    }\n}\n\n\nint func3(unique_ptr&lt;MyData&gt;&amp; arg) {\n    return arg-&gt;m_x;\n}\n\nint func4(unique_ptr&lt;MyData&gt; arg) {\n    return arg-&gt;m_x;\n}\n\nint main() {\n    std::unique_ptr&lt;MyData&gt; d1{ std::make_unique&lt;MyData&gt;(10) }; \n\n    int x1 = func1(*d1);      // Recommended approach when MyData is required\n    int x2 = func2(d1.get()); // Recommended approach when MyData is optional\n\n    int x3 = func3(d1);              // Recommended approach only if the unique_ptr itself may be changed by the function. \n    int x4 = func4( std::move(d1) ); // Recommended approach if the transfer of the ownship is intended.\n}\n</code></pre>"},{"location":"Notes/202303092233_unique_ptr_quick_ref/#reference","title":"Reference","text":"<ul> <li>https://www.learncpp.com/cpp-tutorial/stdunique_ptr/</li> <li>https://stackoverflow.com/questions/30905487/how-can-i-pass-stdunique-ptr-into-a-function</li> <li>https://youtu.be/xnqTKD8uD64?t=730</li> </ul>"},{"location":"Notes/202303102044_vim_regex/","title":"Vim Regular Expression","text":""},{"location":"Notes/202303102044_vim_regex/#basics","title":"Basics","text":"<p>(under construction)</p>"},{"location":"Notes/202303102044_vim_regex/#greedy-vs-non-greedy","title":"Greedy vs non-greedy","text":"<p>(under construction)</p>"},{"location":"Notes/202303102044_vim_regex/#lookahead-and-lookbehind-assertions","title":"Lookahead and lookbehind assertions","text":"<p><code>abc\\(def\\)\\@=</code>: Match <code>abc</code> if it is followed by <code>def</code> (lookahead assertion)</p> <p><code>abc\\(def\\)\\@!</code>: Match <code>abc</code> if it is NOT followed by <code>def</code> (negative lookahead assertion)</p> <p><code>\\(abc\\)\\@&lt;=def</code>: Match <code>def</code> if it is preceded by <code>abc</code> (lookbehind assertion)</p> <p><code>\\(abc\\)\\@&lt;!def</code>: Match <code>def</code> if it is NOT preceded by <code>abc</code> (negative lookbehind assertion)</p>"},{"location":"Notes/202303102044_vim_regex/#match-start-and-end","title":"Match start and end","text":"<p><code>\\zs</code>: The \"match start.\" Everything before <code>\\zs</code> is treated as lookbehind assertion.</p> <p><code>\\ze</code>: The \"match end.\" Everything after <code>\\ze</code> is treated as lookahead assertion.</p> <p>Example:</p> <pre><code>\" This prints 'def'\nlet x = matchstr('abc def ghi', 'abc \\zsdef\\ze ghi')\necho x\n\n\" This prints empty string\nlet y = matchstr('def ghi', 'abc \\zsdef\\ze ghi')\necho y\n</code></pre>"},{"location":"Notes/202303102044_vim_regex/#named-groups","title":"Named groups","text":"<p>(under construction)</p>"},{"location":"Notes/202303102044_vim_regex/#non-capturing-groups","title":"Non-capturing groups","text":"<p>(under construction)</p>"},{"location":"Notes/202303102044_vim_regex/#reference","title":"Reference","text":"<ul> <li>https://vim.fandom.com/wiki/Regex_lookahead_and_lookbehind</li> </ul>"},{"location":"Notes/202303132237_python_powerpoint_slides/","title":"Creating PowerPoint Slides with Images in Python","text":""},{"location":"Notes/202303132237_python_powerpoint_slides/#prerequisite","title":"Prerequisite","text":"<p>Install the <code>python-pptx</code> module</p>"},{"location":"Notes/202303132237_python_powerpoint_slides/#code","title":"Code","text":"<pre><code>import pptx\n\nimg_list = [\n  '/path/to/image1.jpg',\n  '/path/to/image2.jpg',\n  '/path/to/image3.jpg',\n]\n\nprs = pptx.Presentation()\ntitle_only_slide_layout = prs.slide_layouts[5]\n\nfor img_path in img_list:\n    slide = prs.slides.add_slide(title_only_slide_layout)\n    slide.shapes.title.text = f'{img_path.stem}'\n\n    pic_pos = (\n        pptx.util.Inches(0.5),  # left\n        pptx.util.Inches(1.75), # top\n        pptx.util.Inches(9),    # width\n        pptx.util.Inches(5),    # height\n    )\n\n    pic = slide.shapes.add_picture(img_path, pic_pos[0],  pic_pos[1], pic_pos[2], pic_pos[3])\n\nprs.save('test.pptx')\n</code></pre>"},{"location":"Notes/202303132237_python_powerpoint_slides/#reference","title":"Reference","text":"<ul> <li>https://python-pptx.readthedocs.io/en/latest/</li> <li>https://stackoverflow.com/questions/44275443/python-inserts-pictures-to-powerpoint-how-to-set-the-width-and-height-of-the-pi</li> <li>https://www.geeksforgeeks.org/creating-and-updating-powerpoint-presentations-in-python-using-python-pptx/</li> </ul>"},{"location":"Notes/202303142242_vim_script_quick_ref/","title":"Vim Script Quick Reference","text":""},{"location":"Notes/202303142242_vim_script_quick_ref/#basic","title":"Basic","text":"<pre><code>\" write comment by having a double quote at the beginning of a line\n\n\" Define a function named MyFunc. Note the first letter of the function name needs to be capitalized\n\" Vim functions are invoked by :call. For example, :call MyFunc()\nfunction! MyFunc()\n  echo \"Hello, world!\"\nendfunction\n\n\" Each line in Vim function is treated as individual Ex commands\nfunction! MyFunc2()\n  call MyFunc()\n  echo \"I just called another function\"\n  set nowrap\n  %s#apple#orange#g\n\n  \" Define a variable 'x'\n  let x = 'my string'\n\n  \" Assign register '+' by variable 'x'\n  let @+ = x\nendfunction\n\n\" Enter the normal mode commands\nfunction! MyFunc3()\n  \" Yank the current word\n  normal! yw\n\n  \" To enter &lt;c-w&gt; for splitting the window, press &lt;c-v&gt;&lt;c-w&gt; to create the &lt;c-w&gt; input in Ex command mode.\n  \" It will appear as '^W' on the screen\n  normal! ^Wj\n\n  \" Alternatively use :execute to make &lt;c-w&gt; more readable\n  execute \"normal! \\&lt;c-w&gt;s\"\nendfunction\n</code></pre>"},{"location":"Notes/202303142242_vim_script_quick_ref/#string","title":"String","text":"<p>Double-quoted strings support escape sequence (like \"\\n\"); single-quoted strings are literal strings</p> <pre><code>\" This prints a new line\necho \"\\n\"\n\n\" This prints '\\n'\necho '\\n'\n</code></pre> <p>String For Regex Pattern</p> <p>Use single-quoted string for regex pattern </p> <p>Prefer Single-Quoted String</p> <p>Some commands may accidentally treat the double quote as the beginning of the comments (e.g. see <code>:help :put</code>)</p>"},{"location":"Notes/202303142242_vim_script_quick_ref/#conversion-to-numbers","title":"Conversion to Numbers","text":"<p>per <code>:help variables</code>:</p> <p>Conversion from a String to a Number is done by converting the first digits to a number. Hexadecimal \"0xf9\", Octal \"017\", and Binary \"0b10\" numbers are recognized. [...] If the String doesn't start with digits, the result is zero.</p> <p>Examples:</p> <pre><code>String \"456\"   --&gt;  Number 456 \nString \"6bar\"  --&gt;  Number 6 \nString \"bar6\"  --&gt;  Number 0\nString \"0xf1\"  --&gt;  Number 241\nString \"0100\"  --&gt;  Number 64\nString \"0b101\" --&gt;  Number 5\nString \"-8\"    --&gt;  Number -8\nString \"+8\"    --&gt;  Number 0\n</code></pre> <p>See also:</p> <ul> <li>https://learnvimscriptthehardway.stevelosh.com/chapters/21.html#basic-if</li> </ul>"},{"location":"Notes/202303142242_vim_script_quick_ref/#reference","title":"Reference","text":""},{"location":"Notes/202304182203_pip_install_anaconda_env/","title":"Run pip to Install a Package to Anaconda Environment","text":""},{"location":"Notes/202304182203_pip_install_anaconda_env/#context","title":"Context","text":"<p>User created a conda environment named <code>myenv</code> and tried to install a package named <code>&lt;some_special_package&gt;</code>. The package is not available in conda, and user has to install the package using <code>pip install &lt;some_special_package&gt;</code>. However, the package is then installed in the <code>base</code> environment in conda instead of the <code>myenv</code> environment.</p>"},{"location":"Notes/202304182203_pip_install_anaconda_env/#problem","title":"Problem","text":"<p>How to install the package in <code>myenv</code> environment using <code>pip</code>?</p>"},{"location":"Notes/202304182203_pip_install_anaconda_env/#solution","title":"Solution","text":"<p>Do the followings:</p> <ol> <li> <p>Install <code>pip</code> under <code>myenv</code> environment if it is not already available</p> <pre><code>condat install -n myenv pip\n</code></pre> </li> <li> <p>Find the location of the <code>pip</code> in the <code>myenv</code> environment.</p> <ol> <li>If the root of Anaconda is <code>/path/to/anaconda</code>, the <code>pip</code> for <code>myenv</code> environment should be found at <code>/path/to/anaconda/envs/myenv/Scripts/pip</code></li> </ol> </li> <li> <p>Use the <code>pip</code> in the <code>myenv</code> environment to install the package</p> <pre><code>/path/to/anaconda/envs/myenv/Scripts/pip install &lt;some_special_package&gt;\n</code></pre> </li> </ol>"},{"location":"Notes/202304182203_pip_install_anaconda_env/#see-also","title":"See Also","text":"<ul> <li>https://www.anaconda.com/blog/using-pip-in-a-conda-environment</li> </ul>"},{"location":"Notes/202304182203_pip_install_anaconda_env/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/questions/41060382/using-pip-to-install-packages-to-anaconda-environment</li> </ul>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/","title":"Mermaid Flowchart Quick Reference","text":""},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#basics","title":"Basics","text":"<pre><code>flowchart LR\n  A --&gt; B\n  C[This is Node C]\n  B -- Text for the link --&gt; C\n  C --&gt; D &amp; E --&gt; F\n</code></pre> <pre><code>flowchart LR\n  A --&gt; B\n  C[This is Node C]\n  B -- Text for the link --&gt; C\n  C --&gt; D &amp; E --&gt; F</code></pre> <p>Specifying orientation <code>TD</code> (top-down) or <code>LR</code> (left-right)</p> <pre><code>flowchart TD\n  A --&gt; B\n</code></pre> <pre><code>flowchart TD\n  A --&gt; B</code></pre> <pre><code>flowchart LR\n  C --&gt; D\n</code></pre> <pre><code>flowchart LR\n  C --&gt; D</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#types-of-links","title":"Types of Links","text":"<pre><code>flowchart LR\n  A1 --&gt; B1\n  A1 -- with text --&gt; B1\n  A2 -.-&gt; B2\n  A2 -. with text .-&gt; B2\n  A3 ==&gt; B3\n  A3 == with text ==&gt; B3\n</code></pre> <pre><code>flowchart LR\n  A1 --&gt; B1\n  A1 -- with text --&gt; B1\n  A2 -.-&gt; B2\n  A2 -. with text .-&gt; B2\n  A3 ==&gt; B3\n  A3 == with text ==&gt; B3</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#types-of-arrows","title":"Types of Arrows","text":"<pre><code>flowchart TD\n  A1 --&gt; B1\n  A2 --- B2\n  A3 --o B3\n  A4 --x B4\n  A5 &lt;--&gt; B5\n  A6 o--o B6\n  A7 x--x B7\n</code></pre> <pre><code>flowchart TD\n  A1 --&gt; B1\n  A2 --- B2\n  A3 --o B3\n  A4 --x B4\n  A5 &lt;--&gt; B5\n  A6 o--o B6\n  A7 x--x B7</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#controlling-node-ranks","title":"Controlling Node Ranks","text":"<p>Use the length of the links to control the rank of the nodes</p> <pre><code>flowchart LR\n  A1 --&gt; B1\n  A1 ---&gt; B2\n  A1 ------&gt; B3\n</code></pre> <pre><code>flowchart LR\n  A1 --&gt; B1\n  A1 ---&gt; B2\n  A1 ------&gt; B3</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#node-shape","title":"Node Shape","text":"<pre><code>flowchart TD\n  A(round edge)\n  B([stadium shape])\n  C[(cylindrical shape)]\n  D((circle))\n  E&gt;asymmetric shape]\n  F{rhombus}\n  G{{hexagon}}\n  H[/parallelogram/]\n  I[\\parallelogram alt\\]\n  J[/trapezoid\\]\n  K(((double circle)))\n\n  A --&gt; B --&gt; C\n  D --&gt; E --&gt; F\n  G --&gt; H --&gt; I\n  J --&gt; K\n</code></pre> <pre><code>flowchart TD\n  A(round edge)\n  B([stadium shape])\n  C[(cylindrical shape)]\n  D((circle))\n  E&gt;asymmetric shape]\n  F{rhombus}\n  G{{hexagon}}\n  H[/parallelogram/]\n  I[\\parallelogram alt\\]\n  J[/trapezoid\\]\n  K(((double circle)))\n\n  A --&gt; B --&gt; C\n  D --&gt; E --&gt; F\n  G --&gt; H --&gt; I\n  J --&gt; K</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#subgraphs","title":"Subgraphs","text":"<pre><code>flowchart TB\n    subgraph one\n        direction LR\n        a1--&gt;a2\n    end\n    subgraph two\n        direction TB\n        b1--&gt;b2\n    end\n    subgraph three[\" \"]\n        c1--&gt;c2\n    end\n</code></pre> <pre><code>flowchart TB\n    subgraph one\n        direction LR\n        a1--&gt;a2\n    end\n    subgraph two\n        direction TB\n        b1--&gt;b2\n    end\n    subgraph three[\" \"]\n        c1--&gt;c2\n    end</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#style","title":"Style","text":"<p>ref: https://mermaid.js.org/syntax/flowchart.html#styling-and-classes</p>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#styling-links","title":"Styling Links","text":"<pre><code>flowchart LR\n    A --&gt; B\n    A --&gt; B\n    A -- with text --&gt; B\n\n    %% Styling a link by the order number of when the link was defined (starting at 0)\n    linkStyle 0 stroke:#f00,stroke-width:4px\n    linkStyle 1 stroke:orange,stroke-width:4px\n    linkStyle 2 stroke:green,color:red\n</code></pre> <pre><code>flowchart LR\n    A --&gt; B\n    A --&gt; B\n    A -- with text --&gt; B\n\n    %% Styling a link by the order number of when the link was defined (starting at 0)\n    linkStyle 0 stroke:#f00,stroke-width:4px\n    linkStyle 1 stroke:orange,stroke-width:4px\n    linkStyle 2 stroke:green,color:red</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#styling-line-curves","title":"Styling Line Curves","text":"<pre><code>%%{ init: { 'flowchart': { 'curve': 'bumpX' } } }%%\ngraph LR\n  A --&gt; B\n  A --&gt; B\n</code></pre> <pre><code>%%{ init: { 'flowchart': { 'curve': 'bumpX' } } }%%\ngraph LR\n  A --&gt; B\n  A --&gt; B</code></pre> <pre><code>%%{ init: { 'flowchart': { 'curve': 'stepBefore' } } }%%\ngraph LR\n  A --&gt; B\n  A --&gt; B\n</code></pre> <pre><code>%%{ init: { 'flowchart': { 'curve': 'stepBefore' } } }%%\ngraph LR\n  A --&gt; B\n  A --&gt; B</code></pre> <p>See the curves documentation in the d3-shape project for the list of supported curve types.</p>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#styling-nodes","title":"Styling Nodes","text":"<pre><code>flowchart LR\n  A --&gt; B\n\n  style A fill:#f9f,stroke:green,stroke-width:4px\n  style B fill:#bbf,color:red\n</code></pre> <pre><code>flowchart LR\n  A --&gt; B\n\n  style A fill:#f9f,stroke:green,stroke-width:4px\n  style B fill:#bbf,color:red</code></pre>"},{"location":"Notes/202305162053_mermaid_flowchart_quick_ref/#reference","title":"Reference","text":"<ul> <li>https://mermaid-js.github.io/mermaid/#/./flowchart?id=flowcharts-basic-syntax</li> </ul>"},{"location":"Notes/202307202225_windbg_sympath/","title":"WinDbg Symbol Path Syntax","text":""},{"location":"Notes/202307202225_windbg_sympath/#basic-rules","title":"Basic Rules","text":"<ul> <li>The paths are separated by <code>;</code></li> <li>Relative paths are supported, but it is not recommended to use relative paths</li> <li>Symbol info is searched in the paths listed in order.</li> <li>Magic string <code>cache*;</code>: The symbols loaded from any element that appears to the right of <code>cache*;</code> will be cached locally.<ul> <li><code>cache*;C:\\path\\to\\DirA;C:\\path\\to\\DirB;</code>: Symbol loaded from <code>C:\\path\\to\\DirA</code> or <code>C:\\path\\to\\DirB</code> will be cached in the default cache directory</li> <li><code>cache*C:\\path\\to\\my\\cache;C:\\path\\to\\DirA;C:\\path\\to\\DirB;</code>: Symbol loaded from <code>C:\\path\\to\\DirA</code> or <code>C:\\path\\to\\DirB</code> will be cached in <code>C:\\path\\to\\my\\cache</code></li> </ul> </li> <li>Magic string <code>srv*</code>: The path to some symbol store/server.<ul> <li><code>srv*</code>: Search the symbol in the Microsoft public symbol server (default symbol store)</li> <li><code>srv*https://my.symbol.server.com/symbols</code>: Search the symbol at <code>https://my.symbol.server.com/symbols</code></li> <li><code>srv*C:\\MyServerSymbols*https://my.symbol.server.com/symbols</code>: Search the symbol at <code>https://my.symbol.server.com/symbols</code>, and cache them at <code>C:\\MyServerSymbols</code></li> </ul> </li> </ul>"},{"location":"Notes/202307202225_windbg_sympath/#reference","title":"Reference","text":"<ul> <li>https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/symbol-path</li> </ul>"},{"location":"Notes/202308132044_mkdocs_hide_footer_nav/","title":"Hiding the Footer Navigation Section in Materials for MkDocs","text":""},{"location":"Notes/202308132044_mkdocs_hide_footer_nav/#context","title":"Context","text":"<p>Materials for MkDocs shows a \"footer navigation\" section by default at the bottom of the page, allowing user to go to the \"next document\" or the \"previous document\". This is useful if the documents are supposed to be read through in a pre-defined way (e.g. book chapters). However, for documents that are less organized (e.g. tech troubleshooting notes), the concept of \"next document\" or \"previous document\" is less helpful, and it is better to hide such irrelevant navigation from user.</p>"},{"location":"Notes/202308132044_mkdocs_hide_footer_nav/#problem","title":"Problem","text":"<p>How to hide the \"footer navigation\" section in Materials for MkDocs?</p>"},{"location":"Notes/202308132044_mkdocs_hide_footer_nav/#solution","title":"Solution","text":"<p>Add the following CSS code to the \"additional CSS\" file:</p> <pre><code>.md-footer__inner {\n  display: none;\n}\n</code></pre>"},{"location":"Notes/202308132044_mkdocs_hide_footer_nav/#reference","title":"Reference","text":"<ul> <li>https://github.com/squidfunk/mkdocs-material/discussions/3489</li> </ul>"},{"location":"Notes/202308141720_mkdocs_abbr/","title":"Adding Abbreviation to MkDocs (with Material for MkDocs)","text":""},{"location":"Notes/202308141720_mkdocs_abbr/#context","title":"Context","text":"<p>When writing MkDocs notes, author wants to mark up an abbreviation so that a tooltip with description will pop up when the reader mouse over the abbreviation.</p> <p>For example, when user mouse over the abbreviation \"DSP\", user will see a tooltip showing \"Digital Signal Processing.\"</p>"},{"location":"Notes/202308141720_mkdocs_abbr/#problem","title":"Problem","text":"<p>How to add the description to the abbreviations in the MkDocs notes?</p>"},{"location":"Notes/202308141720_mkdocs_abbr/#solution","title":"Solution","text":"<p>There are 3 solutions for 3 different scopes:</p> <ol> <li>Use HTML tag <code>&lt;abbr&gt;</code> for individual abbreviation</li> <li>Use markdown_extension <code>abbr</code> to mark up all the abbreviations in a note</li> <li>Use markdown_extension <code>abbr</code> and <code>pymdownx.snippets</code> to mark up all the abbreviations in all notes</li> </ol>"},{"location":"Notes/202308141720_mkdocs_abbr/#using-html-tag-abbr","title":"Using HTML Tag <code>&lt;abbr&gt;</code>","text":"<p>Author can use HTML tag <code>&lt;abbr&gt;</code> to mark up an individual abbreviation like HMM using the following syntax</p> <pre><code>&lt;abbr title=\"Hidden Markov Model\"&gt;HMM&lt;/abbr&gt;\n</code></pre> <p>This solution will not mark up the other HMM that do not have the <code>&lt;abbr&gt;</code> tag.</p>"},{"location":"Notes/202308141720_mkdocs_abbr/#using-markdown_extension-abbr","title":"Using markdown_extension <code>abbr</code>","text":"<p>When an abbreviation is repeatedly used in a note, author may want to define the description of the abbreviation once, and let MkDocs automatically mark up all the instances in the note. This can be done by the following steps:</p> <ol> <li> <p>Add the following configurations to <code>mkdocs.yml</code></p> <pre><code>markdown_extensions:\n  - abbr\n</code></pre> </li> <li> <p>In the individual note, define the abbreviations like the following examples:</p> <pre><code>The abbreviations like EC and DSP will then have a tooltip showing the corresponding descriptions. This applies to all the mentions of DSP in this note.\n\n*[EC]: Echo Cancellation\n*[DSP]: Digital Signal Processing\n</code></pre> </li> </ol> <p>The abbreviations like EC and DSP will then have a tooltip showing the corresponding descriptions. This applies to all the mentions of DSP in this note.</p>"},{"location":"Notes/202308141720_mkdocs_abbr/#using-markdown_extension-abbr-and-pymdownxsnippets","title":"Using markdown_extension <code>abbr</code> and <code>pymdownx.snippets</code>","text":"<p>When an abbreviation is repeatedly used in multiple notes, author may want to define the description of the abbreviation once, and let MkDocs automatically mark up all the instances in all the notes. This can be done by the following steps:</p> <ol> <li>Create a file at the root of the MkDocs project (which is the directory that contains <code>mkdocs.yml</code>). We will refer to this file as <code>abbreviations.md</code> in the following steps.</li> <li>Define all the abbreviations in <code>abbreviations.md</code><ul> <li>See step 2 in #Using markdown_extension <code>abbr</code> for how to define the abbreviations</li> </ul> </li> <li> <p>Add the following configurations to <code>mkdocs.yml</code></p> <pre><code>markdown_extensions:\n  - abbr\n  - attr_list\n  - pymdownx.snippets:\n      auto_append:\n        - abbreviations.md\n</code></pre> </li> </ol> <p>YYC note</p> <p>What step 3 does is to use the <code>auto_append</code> feature from <code>Snippets</code> to append <code>abbreviations.md</code> to all the notes. Whether the increased size of <code>abbreviations.md</code> affects the site performance is to be reviewed.</p>"},{"location":"Notes/202308141720_mkdocs_abbr/#reference","title":"Reference","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/tooltips/#mkdocsyml</li> </ul>"},{"location":"Notes/202308151948_mkdocs_open_link_at_new_tab/","title":"Making MkDocs Link Open in New Tab","text":""},{"location":"Notes/202308151948_mkdocs_open_link_at_new_tab/#context","title":"Context","text":"<p>The syntax to define a link in Markdown is as follows:</p> <pre><code>[title](https://som/url)\n</code></pre> <p>This yields a HTML link that opens the link in the current browser tab. However, sometimes user may want to open the link in a new tab, so that user can continue browsing the MkDocs documentation site while viewing the external resources.</p>"},{"location":"Notes/202308151948_mkdocs_open_link_at_new_tab/#problem","title":"Problem","text":"<p>How to specify a link in MkDocs that opens in a new tab?</p>"},{"location":"Notes/202308151948_mkdocs_open_link_at_new_tab/#solution","title":"Solution","text":"<p>Do the followings:</p> <ol> <li> <p>Enable the <code>attr_list</code> extension by adding the followings to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n</code></pre> </li> <li> <p>When defining a link in the Markdown file, add the attribute <code>{target=_blank}</code> at the end of the link. For example:</p> <pre><code>[title](https://some/url){target=_blank}\n</code></pre> </li> </ol>"},{"location":"Notes/202308152042_mkdocs_quick_ref/","title":"MkDocs Quick Reference","text":""},{"location":"Notes/202308152042_mkdocs_quick_ref/#basic","title":"Basic","text":"<p>Local testing:</p> <pre><code># Start a local server at localhost:8000\nmkdocs serve\n\n# Start a local server at user-specified IP/port\nmkdocs serve -a &lt;IP&gt;:&lt;Port&gt;\n\n# Start a local server with \"dirty load\" \n# (re-building only the updated pages)\nmkdocs serve --dirty\n</code></pre> <p>Caveat for <code>--dirty</code>:</p> <ul> <li>The option <code>--dirty</code> seems to have some problem updating the nav bar. If in <code>mkdocs.yml</code> an entry under <code>nav:</code> was not given a name, the entry will appear in the nav bar with name <code>None</code> (while it should use the h1 header of the linked note by default).</li> </ul>"},{"location":"Notes/202308152042_mkdocs_quick_ref/#misc","title":"Misc","text":"<ul> <li>Defining abbreviation</li> <li>Hiding the footer navigation section</li> <li>Opening link in a new tab</li> </ul>"},{"location":"Notes/202308152111_windows_show_n_lines_before_after_match/","title":"Windows: Filter Command Output to Show Only Few Lines Around A Matched Pattern","text":""},{"location":"Notes/202308152111_windows_show_n_lines_before_after_match/#context","title":"Context","text":"<p>In Windows, user may use some commands such as <code>sc.exe</code> to look up certain information. While user knows the keyword to search for, what user wants to see is the entire chunk of information around the keyword, instead of just the lines that contains the keyword.</p> <p>For example, when user uses <code>sc</code> to look for the services that are related to \"print\", user may actually want to know the status of the corresponding services, which is expected to be a few lines above or below the line containing \"print\" in the screen output.</p>"},{"location":"Notes/202308152111_windows_show_n_lines_before_after_match/#problem","title":"Problem","text":"<p>How does user uses a command-line command to filter the STDOUT of another command so that only a few lines around a matched pattern are shown?</p>"},{"location":"Notes/202308152111_windows_show_n_lines_before_after_match/#solution","title":"Solution","text":"<p>Run a command like the following in the CMD</p> <pre><code>powershell -command \" &amp; &lt;CMD-COMMAND&gt; &lt;COMMAND-ARG1&gt; &lt;COMMAND-ARG2&gt; &lt;...&gt; | Select-String -Pattern &lt;PATTERN&gt; -Context &lt;N1&gt;,&lt;N2&gt; \"\n</code></pre> <p>Explanations:</p> <ul> <li> <p>The command above runs the following PowerShell command:</p> <pre><code>&amp; &lt;CMD-COMMAND&gt; &lt;COMMAND-ARG1&gt; &lt;COMMAND-ARG2&gt; &lt;...&gt; | Select-String -Pattern &lt;PATTERN&gt; -Context &lt;N1&gt;,&lt;N2&gt;\n</code></pre> </li> <li> <p>The PowerShell command means \"Run the command <code>&lt;CMD-COMMAND&gt; &lt;COMMAND-ARG1&gt; &lt;COMMAND-ARG2&gt; &lt;...&gt;</code>, find a line that contains <code>&lt;PATTERN&gt;</code>, and then print <code>&lt;N1&gt;</code> lines before the match and <code>&lt;N2&gt;</code> lines after the match.\"</p> </li> </ul> <p>For example, if user wants to find the keyword <code>print</code> in the <code>sc query</code> output and print 2 lines before the match as well as 4 lines after the match, user can issue the following command in CMD:</p> <pre><code>powershell -command \" &amp; 'C:\\Windows\\System32\\sc.exe' query | Select-String -Pattern print -Context 2,4 \"\n</code></pre>"},{"location":"Notes/202308182157_python_name_object/","title":"Python Names and Objects","text":"","tags":[]},{"location":"Notes/202308182157_python_name_object/#overview","title":"Overview","text":"<p>This page documents the definitions of the names and objects in Python. Such knowledge will help answer the following common questions:</p> <ul> <li>Are Python function arguments pass-by-reference or pass-by-value?</li> <li>What is the difference between <code>x == y</code> and <code>x is y</code>?</li> </ul> <p>The basic idea about names and objects in Python can be described as follows:</p> <ul> <li>An object is a blob of data in the memory</li> <li>A name is a string in the Python code, referring to an object.</li> </ul> <p>In the following assignment statements, the left-hand side of the <code>=</code> operator is a name, and the right-hand side is an expression that will be evaluated and yield an object</p> <pre><code># An object of type int, value 10 is created.\n# A name 'x' is created and refers to the object\nx = 10\n\n# An object of type int, value 10 is created. Whether this object is identical to the one created in the previous line is implementation-dependent.\n# A name 'y' is created and refers to the object\ny = 10\n\n# After evaluation, an object of type int, value 11 is created.\n# A name 'z' is created and refers to the object\nz = x + 1\n\n# An object of type Sequence, value [int(1), int(2)] is created.\n# A name 's' is created and refers to the object\ns = [1, 2]\n</code></pre>","tags":[]},{"location":"Notes/202308182157_python_name_object/#objects","title":"Objects","text":"<p>Objects are Python's abstraction of data. All data in a Python program is represented by objects or by relations between objects.<sup>1</sup></p> <p>An object consists of the following 3 components:</p> <ol> <li>An identity</li> <li>A type</li> <li>A value</li> </ol> <p>An object's identity is a unique ID that never changes over the object's life cycle. The <code>is</code> operator compares the identity of two objects; the <code>id()</code> function returns an integer representing the object's identity<sup>1</sup>.</p> <p>An object's type determines the operations that the object supports. An object's type also never changes over the object's life cycle<sup>1</sup>. The <code>type()</code> function returns the object's type. Followings are the standard types in Python:</p> <ol> <li>None</li> <li>NotImplemented</li> <li>Ellipsis</li> <li>numbers.Number (int, bool, float, etc)</li> <li>Sequences</li> <li>Set types</li> <li>Mappings</li> <li>Callable types (functions, classes, etc)</li> <li>Modules</li> <li>Custom classes</li> <li>Class instances</li> <li>I/O objects</li> <li>Internal types</li> </ol> <p>An object's value is the data that the object stores. The value of an object may or may not be changeable. An object is said to be mutable if its value can change; otherwise the object is said to be immutable.</p> <p>Identities of Two Number Objects</p> <p>Although the comparison <code>x is y</code> in the following code sample may yield <code>True</code> from time to time, it is implementation-dependent and may not yield the same results on different machines/Python versions.</p> <pre><code>x = 1001\ny = 1000 + 1\nprint(x is y)\n</code></pre> <p>Python compiler may optimize <code>1000 + 1</code> away with <code>1001</code>, pre-allocate an object of int with value 1001, then bind both name <code>x</code> and name <code>y</code> with the pre-allocated object, resulting in <code>x</code> and <code>y</code> referencing to the same object. However, this behavior is not explicitly defined in the Python spec, and therefore it depends on the implementation of the compiler.</p> <p>Mutable Objects within Immutable Objects</p> <p>An \"immutable object\" may contain mutable objects, and the values of those mutable objects can still change. For example, a 2-tuple <code>([1, 2], [3, 4])</code> is an immutable object in the sense that the tuple's value, which is two sequence objects with some unique identities, cannot be changed. But as long as the identities of the two sequence objects remain unchanged, the underlying values of those the sequence objects can still be changed.</p> <p>To be more specific:</p> <pre><code>x = ([1, 2], [3, 4]) # Create a 2-tuple object ([1, 2], [3, 4]), bind the object with name 'x'\n# x[0] = [5, 6]      # this causes error because it attempts to change the object x[0] refers to\nx[0][0] = 5          # this is okay because it changes the value of the object referred by x[0], not the object x[0] itself.\n</code></pre>","tags":[]},{"location":"Notes/202308182157_python_name_object/#names","title":"Names","text":"<p>Names refer to objects.<sup>2</sup> Names are introduced by name binding operations listed below:</p> <ol> <li>formal parameters to functions</li> <li>class definitions</li> <li>function definitions</li> <li>assignment expressions</li> <li>targets that are identifiers if occurring in an assignment:<ul> <li><code>for</code> loop header</li> <li>after <code>as</code> in a <code>with</code> statement, <code>except</code> clause, <code>except*</code> clause, or in the as-pattern in structural pattern matching</li> <li>in a capture pattern in structural pattern matching</li> </ul> </li> <li>import statements</li> </ol> <p>For example, in the following sample code:</p> <pre><code>def plus_one(x):\n    return x+1\n</code></pre> <p><code>x</code> is a name (from \"formal parameters to functions\"), and <code>plus_one</code> is also a name (from \"function definitions\"). The name <code>plus_one</code> will be bound to a callable object, which is the function defined above.</p> <p>Names are also referred to as identifiers<sup>3</sup>.</p>","tags":[]},{"location":"Notes/202308182157_python_name_object/#assignment-with-names-and-objects","title":"Assignment with Names and Objects","text":"<p>The syntax of the assignment expression is as follows:</p> <pre><code>assignment_expression ::=  [identifier \":=\"] expression\n</code></pre> <p>For example, in the following code:</p> <pre><code>x = y\nz = 32\n</code></pre> <p><code>x</code> and <code>z</code> are identifiers, while <code>y</code> and <code>32</code> are expressions that will be evaluated. The evaluation of the identifier <code>y</code> yields the object that <code>y</code> refers to<sup>4</sup>. And the evaluation of the literal <code>32</code> yields an object of the given type with the given value<sup>5</sup>.</p> <p>Assignment itself is never a copy</p> <p>The assignment expression is merely a name binding operation bewteen a name and an object yielded from an expression. If there is indeed a \"copy\" operation happening, it is done either by the \"expression\" part or by the overridden <code>=</code> operator.</p>","tags":[]},{"location":"Notes/202308182157_python_name_object/#functions-arguments-are-pass-by-assignment","title":"Functions Arguments Are Pass-by-Assignment","text":"<p>The syntax of a call in Python suggests that the arguments of a function are treated as \"assignment expressions\" or \"expressions\". As a result, whether the function can change the value of an input argument depends on the type of the input argument.</p> <p>Example 1:</p> <pre><code>def func1(x):\n  x = x + 1\n  return x\n\ny = 1\nz = func1(y)\n\nprint(y)    # 1\nprint(z)    # 2. A different object than y\n</code></pre> <p>In Example 1, at the function input, name <code>x</code> is assigned by name <code>y</code>, and therefore both of them refer to the same object (type <code>int</code>, value <code>1</code>). But inside the function, <code>x</code> is then re-assigned by another object (type <code>int</code>, value <code>2</code>), while <code>y</code> still refers to the original object.</p> <p>Example 2:</p> <pre><code>def func2(x):\n  x[0] = x[0] + 1\n  return x\n\ny = [1, 2]\nz = func2(y)\n\nprint(y)      # [2, 2]\nprint(z)      # [2, 2]\nprint(y is z) # True\n</code></pre> <p>In Example 2, at the function input, name <code>x</code> is assigned by name <code>y</code>, and therefore both of them refer to the same object (a sequence object <code>[1, 2]</code>). Inside the function, the function updates the first element in <code>x</code>, which will affect <code>y</code> as well.</p> <p>Example 3:</p> <pre><code>def func3(x):\n  x = [5, 6]\n  return x\n\ny = [1, 2]\nz = func3(y)\n\nprint(y)      # [1, 2]\nprint(z)      # [5, 6]\nprint(y is z) # False\n</code></pre> <p>In Example 3, at the function input, name <code>x</code> is assigned by name <code>y</code>, and therefore both of them refer to the same object (a sequence object <code>[1, 2]</code>). Inside the function, the function re-assign <code>x</code> with another object. This does not affect the object referred by name <code>y</code>.</p>","tags":[]},{"location":"Notes/202308182157_python_name_object/#reference","title":"Reference","text":"<ul> <li>https://docs.python.org/3/reference/datamodel.html#</li> <li>https://docs.python.org/3/reference/executionmodel.html#naming-and-binding</li> <li>https://nedbatchelder.com/text/names.html</li> </ul> <ol> <li> <p>The Python Language Reference &gt;&gt; 3. Data model &gt;&gt; 3.1. Objects, values and types \u21a9\u21a9\u21a9</p> </li> <li> <p>The Python Language Reference &gt;&gt; 4. Execution model &gt;&gt; 4.2.1. Binding of names \u21a9</p> </li> <li> <p>https://docs.python.org/3/reference/lexical_analysis.html#identifiers \u21a9</p> </li> <li> <p>https://docs.python.org/3/reference/expressions.html#atom-identifiers \u21a9</p> </li> <li> <p>https://docs.python.org/3/reference/expressions.html#literals \u21a9</p> </li> </ol>","tags":[]},{"location":"Notes/202308291933_vscode_foam_quick_ref/","title":"Foam for VSCode Quick Reference","text":"","tags":[]},{"location":"Notes/202308291933_vscode_foam_quick_ref/#useful-hotkeys","title":"Useful Hotkeys","text":"<p>Open Graph View:</p> <ol> <li>Ctrl+Shift+p</li> <li>Type \"<code>Foam: Show graph</code>\", then enter.</li> </ol> <p>Open preview panel to the side:</p> <ol> <li>Ctrl+k v</li> </ol> <p>Note</p> <p>It does not work when some other key-mapping extensions (e.g. Vim) are enabled.</p> <p>Open a wikilink:</p> <ol> <li>Mouseover the wikilink, then Ctrl+LMB</li> </ol>","tags":[]},{"location":"Notes/202308291933_vscode_foam_quick_ref/#extensions-for-additional-features","title":"Extensions for Additional Features","text":"<ul> <li>Markdown Footnotes</li> <li>Markdown Preview Mermaid Support</li> <li>Other recommendations</li> </ul>","tags":[]},{"location":"Notes/202308302225_gccphat/","title":"Generalized Cross-Correlation Phase Transform","text":"","tags":[]},{"location":"Notes/202308302225_gccphat/#context","title":"Context","text":"<p>Given:</p> <ul> <li>\\(x(t) \\in \\mathbb{R}\\): A signal source</li> <li>\\(y_1(t) = \\alpha_1 \\cdot x(t - t_1) + n_1(t) \\in \\mathbb{R}\\): A sensor capturing the signal \\(x(t)\\), with attenuation factor \\(0 &lt; \\alpha_1 \\leq 1\\), a time delay \\(t_1 \\geq 0\\), and a noise \\(n_1(t)\\)</li> <li>\\(y_2(t) = \\alpha_2 \\cdot x(t - t_2) + n_2(t) \\in \\mathbb{R}\\): Another sensor capturing the signal \\(x(t)\\), with attenuation factor \\(0 &lt; \\alpha_2 \\leq 1\\), a time delay \\(t_2 \\geq 0\\), and a noise \\(n_2(t)\\)</li> </ul> <p>Assume that the noise signals \\(n_1(t)\\) and \\(n_2(t)\\) are uncorrelated with the source signal \\(x(t)\\) and are uncorrelated with each other, we want to find the time difference \\(\\ell\\)</p> \\[ \\ell = t_1 - t_2 \\] <p>, which is the time difference of \\(x(t)\\) arriving the two sensors.</p> <p>One intuitive method is to compute the cross-correlation between \\(y_1(t)\\) and \\(y_2(t)\\), and locate the peak:</p> \\[ \\begin{align} R_{y_1, y_2}(\\tau) &amp;= E\\left\\{ y_1(t) y_2(t + \\tau) \\right\\} \\\\ \\hat{\\ell} &amp;= \\underset{\\tau}{\\operatorname{arg\\,max}}\\,{R(\\tau)} \\end{align} \\] <p>But depending on the power spectral density of \\(x(t)\\), the cross-correlation \\(R_{y_1,y_2}(\\tau)\\) may not show a sharp peak, reducing our confidence on the accuracy of \\(\\hat{\\ell}\\).</p>","tags":[]},{"location":"Notes/202308302225_gccphat/#problem","title":"Problem","text":"<p>How to improve the shape of the cross-correlation so that it can show a sharper peak?</p>","tags":[]},{"location":"Notes/202308302225_gccphat/#solution","title":"Solution","text":"<p>Apply a weighting function to whiten the signal. This can be done by computing the followings:</p> \\[ \\begin{align} S_{y_1,y_2}(f) &amp;= \\int_{-\\infty}^{\\infty}{R_{y_1,y_2}(\\tau) e^{-j 2 \\pi f \\tau} d \\tau} \\\\ \\tilde{R}_{y_1,y_2}(\\tau) &amp;= \\int_{-\\infty}^{\\infty} \\frac{S_{y_1,y_2}(f)}{|S_{y_1,y_2}(f)|} e^{j 2 \\pi f \\tau} df \\\\ \\tilde{\\ell} &amp;= \\underset{\\tau}{\\operatorname{arg\\,max}}\\,{\\tilde{R}(\\tau)} \\end{align} \\] <p>The method above is called generalized cross-correlation phase transform.</p>","tags":[]},{"location":"Notes/202308302225_gccphat/#reference","title":"Reference","text":"<ul> <li>https://dsp.stackexchange.com/questions/74574/understanding-gcc-phat-as-a-feature</li> <li>https://www.mathworks.com/help/phased/ref/gccphat.html</li> </ul>","tags":[]},{"location":"Notes/202308312200_json_quick_ref/","title":"JSON Quick Reference","text":"","tags":[]},{"location":"Notes/202308312200_json_quick_ref/#basics","title":"Basics","text":"<p>JSON stands for JavaScript Object Notation. There are 3 types of data in JSON:</p> <ol> <li>JSON value</li> <li>JSON object</li> <li>JSON array</li> </ol> <p>A JSON value can be one of the following 6 types:</p> <ol> <li>Number: double-precision floating-point value</li> <li>String: double-quoted string</li> <li>Boolean: true or false</li> <li>JSON object</li> <li>JSON array</li> <li>null</li> </ol> <p>A JSON object is:</p> <ul> <li>An unordered set of name/value pairs, beginning with left curly brace (<code>{</code>) and ending with right curly brace (<code>}</code>). </li> <li>The name/value pair consists of a name, followed by colon (<code>:</code>), followed by a value.</li> <li>The name has to be a String (i.e., double-quoted string).</li> <li>The value has to be a JSON value.</li> <li>Each name/value pair is separated by a comma (<code>,</code>).</li> </ul> <p>Example of JSON object:</p> <pre><code>{\n    \"projectName\": \"MyProject\",\n    \"Version\": 1.0\n}\n</code></pre> <p>Note</p> <p>The trailing comma (comma after the last name/value pair) is a syntax error per the JSON spec</p> <p>A JSON array is:</p> <ul> <li>An ordered collection of JSON values, beginning with left square brace (<code>[</code>) and ending with right square brace (<code>]</code>).</li> <li>Each value is separated by a comma (<code>,</code>)</li> </ul> <p>Example of JSON array:</p> <pre><code>[ \n    1.0, \n    \"2.0\", \n    {\n        \"projectName\": \"MyProject\"\n    }\n]\n</code></pre>","tags":[]},{"location":"Notes/202308312200_json_quick_ref/#reference","title":"Reference","text":"<ul> <li>https://www.json.org/json-en.html</li> <li>https://www.w3schools.com/whatis/whatis_json.asp</li> <li>https://www.tutorialspoint.com/json/json_quick_guide.htm</li> </ul>","tags":[]},{"location":"Notes/202310010756_mkdocs_ignore_folder/","title":"Configure MkDocs to Ignore Certain Files or Paths under doc_dir","text":"","tags":[]},{"location":"Notes/202310010756_mkdocs_ignore_folder/#context","title":"Context","text":"<p>MkDocs by default does not allow files to be ignored (ref: https://github.com/mkdocs/mkdocs/issues/1152#issuecomment-285091364). However, when the documentation site is big, the dev-server created with command <code>mkdocs serve</code> takes a long time to update. For users who want to only make local changes, the long waiting time for the site to update is an impact to the productivity.</p>","tags":[]},{"location":"Notes/202310010756_mkdocs_ignore_folder/#problem","title":"Problem","text":"<p>How to make MkDocs ignore parsing/building some documents that user is not interested in seeing?</p>","tags":[]},{"location":"Notes/202310010756_mkdocs_ignore_folder/#solution","title":"Solution","text":"<p>Use the plugin https://github.com/apenwarr/mkdocs-exclude</p>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/","title":"UML Class Diagram Quick Reference","text":"","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#class-notation","title":"Class Notation","text":"<p>Basic Example: </p> <pre><code>classDiagram\n    class ClassName {\n        +attr_public\n        #attr_protected\n        -attr_private\n        +func_public()\n    }</code></pre> <p>Highlights:</p> <ul> <li>The \"class\" node consists of 3 partitions:<ul> <li>Top partition shows the name of the class</li> <li>Middle partition shows the attributes (member variables) of the class</li> <li>Bottom partition shows the methods (member functions) of the class</li> </ul> </li> <li>The leading symbol before the attributes and the functions indicate their \"visibility\":<ul> <li><code>+</code>: public </li> <li><code>#</code>: protected</li> <li><code>-</code>: private</li> </ul> </li> </ul> <p>With types and signatures:</p> <pre><code>classDiagram\n    class ClassName {\n        +attr_public : String \n        #attr_protected : int \n        -attr_private : bool \n        +func_public(n : int) : int \n    }</code></pre> <p>With function parameter directionality:</p> <pre><code>classDiagram\n    class ClassName {\n        +func1(in n : int) : int \n        +func2(out n : int) : int \n        +func3(inout n : int) : int \n    }</code></pre> <p>With default attribute value</p> <pre><code>classDiagram\n    class ClassName {\n        +attr_public : String = \"\"\n        #attr_protected : int = 321\n        -attr_private : bool = False\n    }</code></pre>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#relationships","title":"Relationships","text":"","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#inheritance","title":"Inheritance","text":"<pre><code>classDiagram\n  direction LR\n  BaseClass &lt;|-- DerivedClass</code></pre>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#association","title":"Association","text":"<pre><code>classDiagram\n  direction LR\n  Mother \"1\" --&gt; \"0..*\" Child : has</code></pre> <p>Highlights:</p> <ul> <li>Associations are typcially named with a verb </li> <li>The numbers at the each end of the link is called \"cardinality,\" indicating the number of the instances to be associated with.<ul> <li>What the example above suggests is:<ul> <li>For a given <code>Child</code>, there will be \"1\" <code>Mother</code> associated with the said <code>Child</code></li> <li>For a given <code>Mother</code>, there will be \"0 or more\" <code>Child</code> associated with the said <code>Mother</code></li> </ul> </li> </ul> </li> </ul>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#aggregation","title":"Aggregation","text":"<pre><code>classDiagram\n  direction LR\n  Pond \"0..*\" o-- \"0..*\" Duck</code></pre> <p>Highlights:</p> <ul> <li>Aggregation is a special type of association</li> <li>Aggregation occurs when a class is a collection or container of other classes, with the \"container\"-type class being next to the diamond shape of the link</li> <li>The lifecycle of the objects of the two classes in the aggregation relationship can be independent<ul> <li>In the example above, when a <code>Pond</code> object is destroyed, the <code>Duck</code> objects under <code>Pond</code> may or may not have to be destroyed.</li> </ul> </li> </ul>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#composition","title":"Composition","text":"<pre><code>classDiagram\n  direction LR\n  Car \"1\" *-- \"4\" Wheel</code></pre> <p>Highlights:</p> <ul> <li>Composition is a special type of aggregation</li> <li>Composition usually describes the \"physical\" containment, with the \"container\"-type class being next to the diamond shape of the link</li> <li>In the composition relationship, when the \"container\"-type class object is destroyed, its all \"content\"-type class objects are also destroyed.</li> </ul>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#dependency","title":"Dependency","text":"<pre><code>classDiagram\n  direction LR\n  Person ..&gt; Food\n\n  class Person{\n  -energy : float\n  +eat(food : Food) : void\n  }</code></pre> <p>Highlight:</p> <ul> <li>Dependency is a special type of association</li> <li>If class <code>X</code>'s implementation needs to access class <code>Y</code>'s member(s), but class <code>X</code> does not store <code>Y</code>'s object as part of <code>X</code>, then we say <code>X</code> is dependent on <code>Y</code></li> </ul>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#realization","title":"Realization","text":"<pre><code>classDiagram\n  direction rR\n  Vehicle &lt;|.. Car\n  Vehicle &lt;|.. Truck\n  &lt;&lt;interface&gt;&gt; Vehicle</code></pre>","tags":[]},{"location":"Notes/202310230927_uml_class_quick_ref/#reference","title":"Reference","text":"<ul> <li>https://en.wikipedia.org/wiki/Class_diagram</li> <li>https://www.visual-paradigm.com/guide/uml-unified-modeling-language/uml-class-diagram-tutorial/</li> </ul>","tags":[]},{"location":"Notes/202310272212_vcxproj_exe_vs_dll/","title":"Specifying Output Type (Dll vs. Exe) in .vcxproj File","text":"","tags":["FleetingNote"]},{"location":"Notes/202310272212_vcxproj_exe_vs_dll/#context","title":"Context","text":"<p>When running <code>MSBuild.exe</code> against a <code>.vcxproj</code> to build a project, user wants to specify in the <code>.vcxproj</code> file that whether the output of the project is a DLL or an EXE.</p>","tags":["FleetingNote"]},{"location":"Notes/202310272212_vcxproj_exe_vs_dll/#problem","title":"Problem","text":"<p>How does user specify the output type in the <code>.vcxproj</code> file?</p>","tags":["FleetingNote"]},{"location":"Notes/202310272212_vcxproj_exe_vs_dll/#solution","title":"Solution","text":"<p>Use <code>&lt;ConfigurationType&gt;</code> to specify the output type.</p> <p>For EXE:</p> <pre><code>&lt;ConfigurationType&gt;Application&lt;/ConfigurationType&gt;\n</code></pre> <p>For DLL:</p> <pre><code>&lt;ConfigurationType&gt;DynamicLibrary&lt;/ConfigurationType&gt;\n</code></pre>","tags":["FleetingNote"]},{"location":"Notes/202310272212_vcxproj_exe_vs_dll/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/questions/63790898/how-to-set-vcxproj-to-let-msbuild-compile-a-dll</li> </ul>","tags":["FleetingNote"]},{"location":"Notes/202311030925_erle_for_good_ec/","title":"ERLE for Good EC","text":"<p>Per dsp.stackexchange.com:</p> <ul> <li>ERLE has to be at least 40dB for good echo cancellation</li> <li>Due to the limitation of EC filter tap length, the adaptive filter can only contribute 20-30dB ERLE. Additional methods such as echo suppression are required in order to further improve ERLE.</li> </ul> <p>Per ChatGPT (on 20231103):</p> <ul> <li>State-of-the-art echo cancellation algorithms aim to achieve ERLE in the range of 20 dB to 30 dB or even higher.</li> <li>In telephony systems, an ERLE of 15 dB or higher is generally considered acceptable for good voice quality.</li> </ul>","tags":[]},{"location":"Notes/202311030925_erle_for_good_ec/#reference","title":"Reference","text":"<ul> <li>What are reasonable levels for the ERLE (Echo Return Loss Enhancement) in acoustic echo cancellation? - Signal Processing Stack Exchange</li> </ul>","tags":[]},{"location":"Notes/202311051909_vim_md_syntax/","title":"Vim Incorrectly Shows Italic After Bold Syntax","text":""},{"location":"Notes/202311051909_vim_md_syntax/#context","title":"Context","text":"<p>For a Markdown note like the following:</p> <pre><code>* A list entry with **bold text** and other stuff\n</code></pre> <p>User is supposed to see in Vim:</p> <p>* A list entry with **bold text** and other stuff</p> <p>However, in Vim 8.2 (with <code>markdown.vim</code> by Tim Pope dated 20191205), what user would see is</p> <p>* A list entry with **bold text** and other stuff</p> <p>where</p> <ol> <li>the closing pattern for bold (<code>**</code>) is not shown in bold format, and</li> <li>the text after the bold syntax is shown as italic</li> </ol>"},{"location":"Notes/202311051909_vim_md_syntax/#problem","title":"Problem","text":"<p>How to fix the incorrect italic syntax shown in Vim?</p>"},{"location":"Notes/202311051909_vim_md_syntax/#solution","title":"Solution","text":"<p>Use a newer <code>markdown.vim</code> like this one dated 20221013</p> <p>To use the custom <code>markdown.vim</code> without overwriting the one from the official Vim installation, do the following:</p> <ol> <li>Create the folder <code>~/.vim/syntax/</code></li> <li>Copy the custom <code>markdown.vim</code> to <code>~/.vim/syntax/markdown.vim</code></li> <li>Reload the opened file, or restart Vim, to make the new syntax highlight file effective</li> </ol>"},{"location":"Notes/202312182103_vscode_disable_vim_keybind/","title":"Disabling Vim Key Bindings in VSCode","text":""},{"location":"Notes/202312182103_vscode_disable_vim_keybind/#context","title":"Context","text":"<p>When using VSCode with the Vim plugin, Vim's key bindings will take precedence over VSCode's default ones.</p> <p>However, user may want to disable some less useful key bindings defined by Vim and keep VSCode's. For example, user may want to disable <code>&lt;Ctrl-P&gt;</code> in Vim (which is \"go up by one line\") and use <code>&lt;Ctrl-P&gt;</code> in VSCode (which is \"quick open\").</p>"},{"location":"Notes/202312182103_vscode_disable_vim_keybind/#problem","title":"Problem","text":"<p>How to disable a specific key binding defined by the Vim plugin in VSCode?</p>"},{"location":"Notes/202312182103_vscode_disable_vim_keybind/#solution","title":"Solution","text":"<p>Open VSCode's <code>settings.json</code> file, find/add the key <code>\"vim.handleKeys\"</code>, and mark a key binding of interest as <code>false</code> in the value of <code>\"vim.handleKeys\"</code>.</p> <p>For example,</p> <pre><code>{\n    \"vim.handleKeys\": {\n        \"&lt;C-p&gt;\": false\n    },\n}\n</code></pre> <p>The setting above will disable the key binding <code>&lt;Ctrl-P&gt;</code> defined by Vim.</p>"},{"location":"Notes/202312182103_vscode_disable_vim_keybind/#reference","title":"Reference","text":"<ul> <li>https://stackoverflow.com/questions/65698293/vim-for-vscode-how-to-disable-key-ctrl-and-ctrl-in-vim-key</li> </ul>"},{"location":"Notes/202402152040_csharp_type_value_vs_reference/","title":"C# Value Types and Reference Types","text":"","tags":[]},{"location":"Notes/202402152040_csharp_type_value_vs_reference/#overview","title":"Overview","text":"<p>There are two kinds of types in C#: </p> <ul> <li>reference types </li> <li>value types</li> </ul> <p>Variables of value types directly contain their data. As a result, the copy operation or assignment operation for variables of value types will create a new variable.</p> <p>Variables of reference types store references to their data. As a result, the copy operation creates a new variable that references to the same data</p>","tags":[]},{"location":"Notes/202402152040_csharp_type_value_vs_reference/#reference-types","title":"Reference Types","text":"<p>Following keywords are used to declare reference types:</p> <ul> <li><code>class</code></li> <li><code>interface</code></li> <li><code>delegate</code></li> <li><code>record</code></li> </ul> <p>And followings are the built-in reference types:</p> <ul> <li><code>dynamic</code></li> <li><code>object</code></li> <li><code>string</code></li> </ul>","tags":[]},{"location":"Notes/202402152040_csharp_type_value_vs_reference/#value-types","title":"Value Types","text":"<p>A value type can be one of the two following kinds:</p> <ul> <li>structure type (typically defined with <code>struct</code> keyword)</li> <li>enumeration type (defined with <code>enum</code> keyword)</li> </ul> <p>Following are the built-in value types (also known as simple types):</p> <ul> <li>Integral numeric types</li> <li>Floating-point numeric types</li> <li><code>bool</code></li> <li><code>char</code></li> </ul> <p>Additional notes:</p> <ul> <li>All simple types are structure types.</li> <li>simple types differ from the other structure types in the following ways:<ul> <li>You can use literals to provide a value of a simple type<ul> <li>e.g. <code>'A'</code> for a variable of type <code>char</code>, or <code>123</code> for a variable of type <code>int</code></li> </ul> </li> <li>You can apply <code>const</code> keyword to a variable of simple type; you cannot do so for the other structure types.</li> <li>Constant expressions whose operands are all constants of the simple types are evaluated at compile time. </li> </ul> </li> </ul>","tags":[]},{"location":"Notes/202402152040_csharp_type_value_vs_reference/#reference","title":"Reference","text":"<ul> <li>https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types</li> <li>https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types</li> </ul>","tags":[]},{"location":"Notes/202404152057_csharp_extension/","title":"C# Extension Classes","text":"","tags":[]},{"location":"Notes/202404152057_csharp_extension/#context","title":"Context","text":"<p>Developer wants to implement additional methods for a class as if those methods are the member methods of the class. For example, instead of implementing a function <code>ToInt()</code> used as follows:</p> <pre><code>string x = '32'\nvar y = ToInt(x)\n</code></pre> <p>The developer wants the said function to be invoked as follows:</p> <pre><code>string x = '32'\nvar y = x.ToInt()\n</code></pre> <p>The developer does not have the permission to modify the class and cannot directly add the addition methods to the class.</p>","tags":[]},{"location":"Notes/202404152057_csharp_extension/#problem","title":"Problem","text":"<p>How to add such \"additional methods\" to a class that the developer does not have permission to modify the source code?</p>","tags":[]},{"location":"Notes/202404152057_csharp_extension/#solution","title":"Solution","text":"<p>Assume name of the class of interest is <code>ClassX</code> and the signature of the method to be added is <code>int MethodY(ClassX x)</code>, implement the following class, which is referred to as the \"extension class\" of <code>ClassX</code>:</p> <pre><code>namespace Some.Namespace.For.ClassXExtension\n\npublic static class ClassXExtension\n{\n    public static int MethodY(this ClassX x)\n    {\n        // Implementation\n    }\n}\n</code></pre> <p>Now, in a different part of the project, the developer will be able to invoke <code>MethodY</code> as if it's a member method of <code>ClassX</code> (as long as that part of the project recognizes the namespace <code>Some.Namespace.For.ClassXExtension</code>).</p> <p>Note that:</p> <ul> <li>The extension class name does not matter. But the convention is to name it as <code>&lt;Class_Of_Interest&gt;Extension</code></li> </ul>","tags":[]},{"location":"Notes/202404152057_csharp_extension/#reference","title":"Reference","text":"<ul> <li>c# - What is the ServiceCollectionExtensions class used for in .Net Core? - Stack Overflow</li> </ul>","tags":[]},{"location":"Notes/202404261656_csharp_lambda/","title":"C#: Lambda Expression","text":"","tags":[]},{"location":"Notes/202404261656_csharp_lambda/#overview","title":"Overview","text":"<p>A lambda expression can be of any of the following two forms:</p> <ul> <li>Expression lambda:   <pre><code>(input-parameters) =&gt; expression\n</code></pre></li> <li>Statement lambda:   <pre><code>(input-parameters) =&gt; { &lt;sequence-of-statements&gt; }\n</code></pre></li> </ul> <p>An expression lambda yields an expression, while a statement lambda yields a statement.</p>","tags":[]},{"location":"Notes/202404261656_csharp_lambda/#reference","title":"Reference","text":"<ul> <li>Lambda expressions - Lambda expressions and anonymous functions - C# | Microsoft Learn</li> </ul>","tags":[]},{"location":"Notes/202405171630_log_levels/","title":"Software Log Levels","text":"<p>Per https://stackoverflow.com/a/2031209:</p> <ul> <li>Trace - Only when I would be \"tracing\" the code and trying to find one part of a function specifically.</li> <li>Debug - Information that is diagnostically helpful to people more than just developers (IT, sysadmins, etc.).</li> <li>Info - Generally useful information to log (service start/stop, configuration assumptions, etc). Info I want to always have available but usually don't care about under normal circumstances. This is my out-of-the-box config level.</li> <li>Warn - Anything that can potentially cause application oddities, but for which I am automatically recovering. (Such as switching from a primary to backup server, retrying an operation, missing secondary data, etc.)</li> <li>Error - Any error which is fatal to the operation, but not the service or application (can't open a required file, missing data, etc.). These errors will force user (administrator, or direct user) intervention. These are usually reserved (in my apps) for incorrect connection strings, missing services, etc.</li> <li>Fatal - Any error that is forcing a shutdown of the service or application to prevent data loss (or further data loss). I reserve these only for the most heinous errors and situations where there is guaranteed to have been data corruption or loss.</li> </ul> <p>Per Microsoft Logging Loglevel:</p> Trace 0 Logs that contain the most detailed messages. These messages may contain sensitive application data. These messages are disabled by default and should never be enabled in a production environment. Debug 1 Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value. Information 2 Logs that track the general flow of the application. These logs should have long-term value. Warning 3 Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop. Error 4 Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure. Critical 5 Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires immediate attention. None 6 Not used for writing log messages. Specifies that a logging category should not write any messages. <p>Implementation examples:</p> <ul> <li>Trace<ul> <li>The logs about \"entering function X\", \"exiting function X\"</li> </ul> </li> <li>Information<ul> <li>The telemetry events such as the timestamp where the data processing pipeline starts, and the number of data package processed by the pipeline when the pipeline shuts down.</li> </ul> </li> <li>Warning<ul> <li>The unusual events that are bad but not bad enough to cause major issues. For example, \"bad data in the package detected\"</li> </ul> </li> <li>Error <ul> <li>The problematic events that are bad enough to hinder normal operation. For example, \"Failed to initialize the pipeline\"</li> </ul> </li> </ul>","tags":["FleetingNote"]},{"location":"Notes/202407102243_csharp_keyword_using/","title":"C# Using Keyword","text":"","tags":[]},{"location":"Notes/202407102243_csharp_keyword_using/#overview","title":"Overview","text":"<p>The <code>using</code> keyword is used in the following 3 scenarios:</p> <ol> <li>The using statement -- to ensure the IDisposible object is properly disposed</li> <li>The using declaration -- to ensure the IDisposible object is properly disposed (C# 8)</li> <li>The using directive -- to allow user to use types defined in a namespace without specifying the fully qualified namespace of that type.</li> </ol>","tags":[]},{"location":"Notes/202407102243_csharp_keyword_using/#reference","title":"Reference","text":"<p>https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using</p>","tags":[]},{"location":"Notes/202412121932_dotnet_iconfiguration/","title":".NET IConfiguration","text":"","tags":[]},{"location":"Notes/202412121932_dotnet_iconfiguration/#context","title":"Context","text":"<p>When developing a .NET application, the developer may use various sources to specify the configurations of the app, for example:</p> <ul> <li>Setting files like <code>appsettings.json</code></li> <li>Environment variables</li> <li>Command-line arguments</li> </ul> <p>The developer wants to load the configurations from all different sources and consolidate them into a unified format, such as a dictionary.</p>","tags":[]},{"location":"Notes/202412121932_dotnet_iconfiguration/#problem","title":"Problem","text":"<p>How doe the developer load the configurations from all different sources?</p>","tags":[]},{"location":"Notes/202412121932_dotnet_iconfiguration/#solution","title":"Solution","text":"<p>Use .NET <code>IConfiguration</code> class.</p> <p>HostApplicationBuilder comes with a Configuration property, which is a ConfigurationManager object that provides various methods to load the configurations from different sources.</p> <p>See Configuration providers in .NET (learn.microsoft.com) for code snippets.</p>","tags":[]},{"location":"Notes/202412121932_dotnet_iconfiguration/#reference","title":"Reference","text":"<p>https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration</p>","tags":[]},{"location":"Notes/202412122035_dotnet_ioption/","title":".NET IOption","text":"","tags":[]},{"location":"Notes/202412122035_dotnet_ioption/#context","title":"Context","text":"<p>When developing a .NET application, the developer wants to use configurations to control the behaviors of individual components in the app. The developer may use <code>IConfiguration</code> to conveniently load the configurations from various sources, but the developer may want a dedicated class or struct to define strongly typed parameters and define validation methods for the user-specified configurations for each of the components in the app.</p>","tags":[]},{"location":"Notes/202412122035_dotnet_ioption/#problem","title":"Problem","text":"<p>How to convert the configurations under <code>IConfiguration</code> to some strongly typed struct, and provide some mechanism to validate the configuration data?</p>","tags":[]},{"location":"Notes/202412122035_dotnet_ioption/#solution","title":"Solution","text":"<p>Use .NET <code>IOption</code> class.</p> <p>Given an <code>appsettings.json</code> as follows:</p> <pre><code>{\n    \"ComponentXOptions\": {\n        \"ParameterX1\": true,\n        \"ParameterX2\": \"This is a string.\"\n    },\n    \"ComponentYOptions\": {\n        \"ParameterY1\": true,\n        \"ParameterY2\": \"This is a string.\"\n    },\n}\n</code></pre> <p>The developer can create a <code>ComponentXOptions</code> class, with the member methods whose names match the field names under \"ComponentXOptions\" in the JSON file above.</p> <pre><code>public sealed class ComponentXOptions\n{\n    public bool ParameterX1 { get; set; }\n    public string ParameterX2 { get; set; }\n}\n</code></pre> <p>Then the developer can implement the following in the <code>Program.cs</code> C# file to convert the configurations loaded from the <code>appsettings.json</code> file to the <code>ComponentXOptions</code> class object:</p> <pre><code>using Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Hosting;\nusing ConsoleJson.Example;\n\nHostApplicationBuilder builder = Host.CreateApplicationBuilder(args);\n\nbuilder.Configuration.Sources.Clear();\n\nIHostEnvironment env = builder.Environment;\n\nbuilder.Configuration\n    .AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)\n\nComponentXOptions options = new();\nbuilder.Configuration.GetSection(nameof(ComponentXOptions))\n    .Bind(options);\n\nConsole.WriteLine($\"X.ParameterX1={options.ParameterX1}\");\nConsole.WriteLine($\"X.ParameterX2={options.ParameterX2}\");\n</code></pre>","tags":[]},{"location":"Notes/202412122035_dotnet_ioption/#reference","title":"Reference","text":"<ul> <li>https://learn.microsoft.com/en-us/dotnet/core/extensions/options</li> </ul>","tags":[]},{"location":"Notes/202412122059_cpp_lambda/","title":"C++ Lambda Expression Quick Reference","text":"","tags":[]},{"location":"Notes/202412122059_cpp_lambda/#syntax","title":"Syntax","text":"<p>Basic syntax:</p> <p>[captures] (params) { body }</p> <p>where</p> <ul> <li>captures: A comma-separated list of things that the body can refer to.<ul> <li>Things that can be captures include:<ul> <li>The capture-default, which can be one of the followings:<ul> <li><code>&amp;</code>: All variables used in the body are \"captured by reference\"</li> <li><code>=</code>: All variables used in the body are \"captured by copy\"</li> </ul> </li> <li>The <code>this</code> pointer</li> <li>The individual variables</li> </ul> </li> <li>The capture-default, if used, must be the first entry in the list.</li> <li>The captures can be an empty list</li> </ul> </li> <li>params: The parameter list of the lambda expression</li> <li>body: The function body</li> </ul> <p>Some examples:</p> <pre><code>// Create a lambda function that adds 2 to the input int value\nauto f1 = [](int a1) { return a1 + 2; };\nint f1_out = f1(10);    // return 12\n\n// Create a lambda function that captures the local variable x by copy\nint x = 5;\nauto f2 = [x](int a1) { return a1 + x; };\nx = 6;\nint f2_out = f2(10);    // return 15 because x was 5 when f2 was created.\n\n// Create a lambda function that captures the local variable x by reference\nauto f3 = [&amp;x](int a1) { return a1 + x; };\nx = 7;\nint f3_out = f3(10);    // return 17 because x was 7 when f3 was called.\n</code></pre>","tags":[]},{"location":"Notes/202412122059_cpp_lambda/#reference","title":"Reference","text":"<ul> <li>https://crascit.com/2015/03/01/lambdas-for-lunch/</li> <li>https://en.cppreference.com/w/cpp/language/lambda</li> </ul>","tags":[]}]}